count number of bytes required to represent an unsigned integer
Spec : Get the account balance of another account with address owner
Spec : Send value amount of tokens to address to
Spec : Send value amount of tokens from address from to address to
Spec : Allow spender to withdraw from your account , multiple times , up to the value amount . If this function is called again it overwrites the current allowance with value .
Spec : Returns the amount which spender is still allowed to withdraw from owner . What if the allowance is higher than the balance of the owner ? Callers should be careful to use min ( allowance , balance Of ) to make sure that the allowance is actually present in the account !
total Supply gives the number of tokens currently in existence Each token corresponds to one child contract that can be SELFDESTRUC Ted for a gas refund .
Creates a child contract that can only be destroyed by this contract .
Mints value new sub tokens ( e . g . cents , pennies , . . . ) by creating value new child contracts . The minted tokens are owned by the caller of this function .
Destroys value child contracts and updates s tail . This function is affected by an issue in solc : https : github . com ethereum solidity issues 2999 The mk contract address ( this , i ) . call ( ) ; doesn ' t forward all available gas , but only GAS 25710 . As a result , when this line is executed with e . g . 30000 gas , the callee will have less than 5000 gas available and its SELFDESTRUCT operation will fail leading to no gas refund occurring . The remaining ~ 29000 gas left after the call is enough to update s tail and the caller ' s balance . Hence tokens will have been destroyed without a commensurate gas refund . Fortunately , there is a simple workaround : Whenever you call free , free Up To , free From , or free Up To From , ensure that you pass at least 25710 + value ( 1148 + 5722 + 150 ) gas . ( It won ' t all be used )
Frees value sub tokens ( e . g . cents , pennies , . . . ) belonging to the caller of this function by destroying value child contracts , which will trigger a partial gas refund . You should ensure that you pass at least 25710 + value ( 1148 + 5722 + 150 ) gas when calling this function . For details , see the comment above destroy Childen .
Frees up to value sub tokens . Returns how many tokens were freed . Otherwise , identical to free . You should ensure that you pass at least 25710 + value ( 1148 + 5722 + 150 ) gas when calling this function . For details , see the comment above destroy Childen .
Frees value sub tokens owned by address from . Requires that msg . sender has been approved by from . You should ensure that you pass at least 25710 + value ( 1148 + 5722 + 150 ) gas when calling this function . For details , see the comment above destroy Childen .
Frees up to value sub tokens owned by address from . Returns how many tokens were freed . Otherwise , identical to free From . You should ensure that you pass at least 25710 + value ( 1148 + 5722 + 150 ) gas when calling this function . For details , see the comment above destroy Childen .
@ dev override to support legacy name
Allow the owner to remove a whitelist Admin
CRUD for smart contract storage
Get Methods for additional storage
Set Methods for additional storage
Delete Methods for additional storage
Contract init . Set symbol , name , decimals and initial fixed supply
Team and tokens unfreeze after 365 days from contract deploy
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Owner can transfer out any accidentally sent ERC20 tokens
Tokens burn
Tokens multisend from owner only by owner
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Creates amount token to to . Must only be called by the owner ( Master Chef ) .
Burn some channel , reduce total circulation .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
State transitions for names : Open > Auction ( start Auction ) Auction > Reveal Reveal > Owned Reveal > Open ( if nobody bid ) Owned > Open ( release Deed or invalidate Name )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
owner may withdraw funds after some period of time
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
solhint disable previous line no empty blocks
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
This function should only be called in the unfortunate case that Enjin should refund from a different address .
Use with caution use this withdraw function if you do not trust the contract ' s token setting . You can only use this once , so if you put in the wrong token address you will burn the Enjin on the contract .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Don ' t accept ETH
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .

User Registration
Getting Data
recover tokens sent accidentally
Don ' t accept ETH
called by the owner on emergency , triggers stopped state
called by the owner on end of emergency , returns to normal state
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Set whether to is on the list or not . Whether 0x0 is on the list or not cannot be set here it is set once and for all by the constructor .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
solhint disable previous line no empty blocks
via https : github . com oraclize ethereum api blob master oraclize API 0 . 5 . sol
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Buy tokens from contract by sending ether
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
This unnamed function is called whenever someone tries to send ether to it
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
These are internal functions used for calculating fees , eth and token allocations as % returns a value as a % accurate to 20 decimal points
returns % of any number , where % given was generated with to Pct
This function is called at the time of contract creation , it sets the initial variables and whitelists the contract owner .
This function is called whenever eth is sent into the contract . The send will fail unless the contract is in stage one and the sender has been whitelisted . The amount sent is added to the balance in the Contributor struct associated with the sending address .
Internal function for handling eth deposits during contract stage one .
Internal function for handling eth refunds during stage three .
This function is called to withdraw eth or tokens from the contract . It can only be called by addresses that are whitelisted and show a balance greater than 0 . If called during stages one or two , the full eth balance deposited into the contract is returned and the contributor ' s balance reset to 0 . If called during stage three , the contributor ' s unused eth will be returned , as well as any available tokens . The token address may be provided optionally to withdraw tokens that are not currently the default token ( airdrops ) .
This function allows the contract owner to force a withdrawal to any contributor .
This internal function handles withdrawals during stage three . The associated events will fire to notify when a refund or token allocation is claimed .
This function can only be executed by the owner , it adds an address to the whitelist . To execute , the contract must be in stage 1 , the address cannot already be whitelisted , and the address cannot be a contract itself . Blocking contracts from being whitelisted prevents attacks from unexpected contract to contract interaction very important !
This function is used by the owner to authorize many addresses in a single call . Each address will be given the same cap , and the cap must be one of the standard levels .
This function is called by the owner to remove an address from the whitelist . It may only be executed during stages 1 and 2 . Any eth sent by the address is refunded and their personal cap is set to 0 . It will throw if the address is still authorised in the whitelist contract .
This function is called by the owner to modify the contribution cap of a whitelisted address . If the current contribution balance exceeds the new cap , the excess balance is refunded .
This function is called by the owner to modify the cap for a contribution level . The cap cannot be decreased below the current balance or increased past the contract limit .
This function changes every level cap at once , with an optional delay . Modifying the caps immediately will cancel any delayed cap change .
This function can be called during stages one or two to modify the maximum balance of the contract . It can only be called by the owner . The amount cannot be set to lower than the current balance of the contract .
This internal function returns the cap amount of a whitelisted address .
This internal function checks if an address is whitelisted in the whitelist contract .
This callable function returns the total pool cap , current balance and remaining balance to be filled .
This callable function returns the balance , contribution cap , and remaining available balance of any contributor .
This callable function returns the token balance that a contributor can currently claim .
This function closes further contributions to the contract , advancing it to stage two . It can only be called by the owner . After this call has been made , whitelisted addresses can still remove their eth from the contract but cannot contribute any more .
This function reopens the contract to contributions and further whitelisting , returning it to stage one . It can only be called by the owner during stage two .
This function sets the receiving address that the contract will send the pooled eth to . It can only be called by the contract owner if the receiver address has not already been set . After making this call , the contract will be unable to send the pooled eth for 6000 blocks . This limitation is so that if the owner acts maliciously in making the change , all whitelisted addresses have ~ 24 hours to withdraw their eth from the contract .
This function sends the pooled eth to the receiving address , calculates the % of unused eth to be returned , and advances the contract to stage three . It can only be called by the contract owner during stages one or two . The amount to send ( given in wei ) must be specified during the call . As this function can only be executed once , it is VERY IMPORTANT not to get the amount wrong .
This function opens the contract up for token withdrawals . It can only be called by the owner during stage 3 . The owner specifies the address of an ERC20 token contract that this contract has a balance in , and optionally a bool to prevent this token from being the default withdrawal ( in the event of an airdrop , for example ) .
This is a standard function required for ERC223 compatibility .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ dev Empty constructor ( for now )
@ dev This will be invoked by the owner , when owner wants to rescue tokens @ param token Token which will we rescue to the owner from the contract
@ dev Interface function , can be overwritten by the superclass @ param token Token which balance we will check and return @ return The amount of tokens ( in smallest denominator ) the contract owns
Interface declaration
@ dev Add a presale participating allocation
@ dev Lock the vault All balances have been loaded in correctly Tokens are transferred on this vault correctly Checks are in place to prevent creating a vault that is locked with incorrect token balances .
@ dev In the case locking failed , then allow the owner to reclaim the tokens on the contract .
@ dev Get the current balance of tokens in the vault @ return uint How many tokens there are currently in vault
@ dev Check how many tokens " investor " can claim @ param investor Address of the investor @ return uint How many tokens the investor can claim now
@ dev Claim N bought tokens to the investor as the msg sender
@ dev This function is prototyped in Recoverable contract
@ dev Resolve the contract umambigious state
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
creates the token to be sold . override this method to have crowdsale of a specific mintable token .
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
@ return true if crowdsale event has ended
low level token purchase function
overriding Crowdsale # has Ended to add token Cap logic @ return true if crowdsale event has ended or cap is reached
@ return true if crowdsale event has started
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
This unnamed function is called whenever someone tries to send ether to it
transfer to and lock it
transfer to and lock it
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
What ' s my girth ?
What is the length of a particular Finder Hyper ?
Tenderly remove hand from Finder Hyper and place on another Finder Hyper
Perform the inevitable actions which cause release of that which each Finder Hyper is built to deliver . In Ether Finder Hyper Land there are only Finder Hyperes , so this allows the transmission of one Finder Hyper ' s payload ( or partial payload but that is not as much fun ) INTO another Finder Hyper . This causes the Finder Hyperae to change form such that all may see the glory they each represent . Erections .
Allow splooger to cause a payload release from your Finder Hyper , multiple times , up to the point at which no further release is possible . .
internal privats
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
helper methods for siphoning
private methods
helper methods for siphoning
private methods
to be called by backend
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Interface marker
fallback function can be used to buy tokens
parse Int
parse Int ( parse Float 10 ^ b )
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license Duplicate Solidity ' s ecrecover , but catching the CALL return value
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license
The following functions are used by the front end for display purposes . Returns the number of tokens currently held by owner .
Withdraws all dividends held by the caller sending the transaction , updates the requisite global variables , and transfers Ether back to the caller .
Converts the Ether accrued as dividends back into EPY tokens without having to withdraw it first . Saves on gas and potential price spike loss .
Sells your tokens for Ether . This Ether is assigned to the callers entry in the token Balance array , and therefore is shown as a dividend . A second call to withdraw ( ) must be made to invoke the transfer of Ether back to your address .
The slam the button escape hatch . Sells the callers tokens for Ether , then immediately invokes the withdraw ( ) function , sending the resulting Ether to the callers address .
Gatekeeper function to check if the amount of Ether being sent isn ' t either too small or too large . If it passes , goes direct to buy ( ) .
Function that returns the ( dynamic ) price of buying a finney worth of tokens .
Function that returns the ( dynamic ) price of selling a single token .
Calculate the current dividends associated with the caller address . This is the net result of multiplying the number of tokens held by their current value in Ether and subtracting the Ether that has already been paid out .
Version of withdraw that extracts the dividends and sends the Ether to the caller . This is only used in the case when there is no transaction data , and that should be quite rare unless interacting directly with the smart contract .
Internal balance function , used to calculate the dynamic reserve value .
Sell function that takes tokens and converts them into Ether . Also comes with a 10 % fee to discouraging dumping , and means that if someone near the top sells , the fee distributed will be significant .
Dynamic value of Ether in reserve , according to the CRR requirement .
Calculates the number of tokens that can be bought for a given amount of Ether , according to the dynamic reserve and total Supply values ( derived from the buy and sell prices ) .
Semantically similar to get Tokens For Ether , but subtracts the callers balance from the amount of Ether returned for conversion .
Converts a number tokens into an Ether value .
The polynomial R c1 x + c3 x ^ 3 + . . . + c11 x ^ 11 approximates the function log ( 1 + x ) log ( 1 x ) Hence R ( s ) log ( ( 1 + s ) ( 1 s ) ) log ( a )
The polynomial R 2 + c2 x ^ 2 + c4 x ^ 4 + . . . approximates the function x ( exp ( x ) + 1 ) ( exp ( x ) 1 ) Hence exp ( x ) ( R ( x ) + x ) ( R ( x ) x )
The below are safemath implementations of the four arithmetic operators designed to explicitly prevent over and under flows of integer values .
This allows you to buy tokens by sending Ether directly to the smart contract without including any transaction data ( useful for , say , mobile wallet apps ) .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
constructor
lottery functions
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
creates the token to be sold . override this method to have crowdsale of a specific mintable token .
Fallback function can be used to buy tokens
low level token purchase function
Finish crowdsale , stop minting forever
set new dates for main sale ( emergency case )
set new Rate
Transfer token ownership after token sale is completed .
@ return true if main sale event has ended
Send ether to the fund collection wallet
Function to extract funds as required before finalizing
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
solhint disable previous line no empty blocks
stake visibility is public as overriding LP Token Wrapper ' s stake ( ) function
Controller only function for creating additional rewards from dust
Withdraw partial funds , normally used with a vault withdrawal
Withdraw all funds , normally used when migrating strategies
@ notice Creates amount token to to . Must only be called by the owner ( Master Chef ) .
Add a new lp to the pool . Can only be called by the owner . XXX DO NOT add the same LP token more than once . Rewards will be messed up if you do .
Update the given pool ' s RGB allocation point . Can only be called by the owner .
Return reward multiplier over the given from to to block .
View function to see pending RGB on frontend .
Update reward vairables for all pools . Be careful of gas spending !
Update reward variables of the given pool to be up to date .
Update reward variables of the given pool to be up to date .
Update reward variables of the given pool to be up to date .
Deposit LP tokens to Master Chef for RGB allocation .
Withdraw LP tokens from Master Chef .
Withdraw without caring about rewards . EMERGENCY ONLY .
Safe RGB transfer function , just in case if rounding error causes pool to not have enough RGB .
Update dev address by the previous dev .
use as the exchanger from barista
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice freeze ? Prevent | Allow target from sending & receiving tokens @ param target Address to be frozen @ param freeze either to freeze it or not
@ notice Create minted Amount tokens and send it to target @ param target Address to receive the tokens @ param minted Amount the amount of tokens it will receive
helper methods for siphoning
private methods
helper methods for siphoning
private methods
to be called by backend
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Returns total supply of issued tokens
Returns balance of address
Transfers tokens from your address to other
Approve other address to spend tokens on your account
Approve and then communicate the approved contract in a single tx
A contract attempts to get the coins
Initializes contract
solhint disable previous line no empty blocks
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .

fallback function can be used to buy tokens
low level token purchase function
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Send back ether sent to me
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
fallback function can be used to buy tokens
send ether to the fund collection wallet
overriding Brck Base Crowdsale # valid Purchase to add extra cap logic @ return true if investors can buy at the moment
overriding Crowdsale # has Ended to add cap logic @ return true if crowdsale event has ended
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Drains ARP .
Gets the balance of the specified address .
Gets the withdrawal timestamp of the specified address .
Deposits ARP .
Withdraws ARP .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ dev Fallback function @ notice A payable fallback needs to be implemented in the implementation contract @ notice This is a low level function that doesn ' t return to its internal call site . @ notice It will return to the external caller whatever the implementation returns .
@ dev Returns the current implementation . @ return Address of the current implementation
@ notice Creates amount token to to . Must only be called by the owner ( Master Un Chairman ) .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
add new pool address to pools
remove a address from pools
calc the balance that the user shuold hold
get balance of the special address
@ notice Transfer value BP tokens from sender ' s account msg . sender to provided account address to . @ notice This function is disabled during the funding . @ dev Required state : Success @ param to The address of the recipient @ param value The number of B Ps to transfer @ return Whether the transfer was successful or not
@ notice Transfer value BP tokens from sender ' from ' to provided account address to . @ notice This function is disabled during the funding . @ dev Required state : Success @ param from The address of the sender @ param to The address of the recipient @ param value The number of B Ps to transfer @ return Whether the transfer was successful or not
@ notice msg . sender approves spender to spend value tokens @ param spender The address of the account able to transfer the tokens @ param value The amount of wei to be approved for transfer @ return Whether the approval was successful or not
@ param owner The address of the account owning tokens @ param spender The address of the account able to transfer the tokens @ return Amount of remaining tokens allowed to spent
set role value
assign BP token to another address
get the balance of current asset pool
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
this function is called when someone buys a token from someone else
get price of certain token for UI purposes
increases length of the snake
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor No validation is needed here as it is simply a librarty function for organizing data
" public " functions
Private functions
Float [ fixed point ] Operations
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
State transitions for names : Open > Auction ( start Auction ) Auction > Reveal Reveal > Owned Reveal > Open ( if nobody bid ) Owned > Open ( release Deed or invalidate Name )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
1 , 000 FWD Tokens per 1 ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Internal transfer , only can be called by this contract
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
creates the token to be sold . override this method to have crowdsale of a specific mintable token .
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
@ return true if crowdsale event has ended
overriding Crowdsale # valid Purchase to add extra cap logic @ return true if investors can buy at the moment
overriding Crowdsale # has Ended to add cap logic @ return true if crowdsale event has ended
overriding Burnable Token # burn to make disable it for public use
functionality to change the token ticker in case of conflict
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
solhint disable previous line no empty blocks
stake visibility is public as overriding LP Token Wrapper ' s stake ( ) function
@ notice Creates amount token to to . Must only be called by the owner .
Add a new lp to the pool . Can only be called by the owner . XXX DO NOT add the same LP token more than once . Rewards will be messed up if you do .
Update the given pool ' s Test allocation point . Can only be called by the owner .
Return reward multiplier over the given from to to block .
View function to see pending Test on frontend .
Update reward vairables for all pools . Be careful of gas spending !
Update reward variables of the given pool to be up to date .
Deposit LP tokens to Master Chef for test allocation .
Withdraw LP tokens from Master Chef .
Safe Test transfer function , just in case if rounding error causes pool to not have enough test .
Update dev address by the previous dev .
given an output amount of an asset and pair reserves , returns a required input amount of the other asset
given an input amount of an asset and pair reserves , returns the maximum output amount of the other asset
@ dev Returns true if and only if the function is running in the constructor
@ dev Returns true if and only if the function is running in the constructor
Empty internal constructor , to prevent people from mistakenly deploying an instance of this contract , which should be used via inheritance .
CORE token is pausable
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
@ return true if crowdsale event has ended
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
fallback function can be used to buy tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
parse Int
parse Int ( parse Float 10 ^ b )
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license Duplicate Solidity ' s ecrecover , but catching the CALL return value
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license
Fail safe in case callback doesn ' t work the first time . In this case the owner can trigger random number generation again , thereby starting the next round .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
This is where all your gas goes , sorry Not sorry , you probably only paid 1 gwei
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
refund option for investors
when softcap reached , finish of token minting could be implemented
this function called every time anyone sends a transaction to this contract
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
convenience is empty function . Sellers should check this before using the contract
Before calling setup , the sender must call Approve ( ) on the Chi token That sets allowance for this contract to sell the tokens on sender ' s behalf
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Initialize to have owner have 100 , 000 , 000 , 000 EDOGE on contract creation Constructor is called only once and can not be called again ( Ethereum Solidity specification )
Function to distribute tokens to list of addresses by the provided amount Verify and require that : Balance of owner cannot be negative All transfers can be fulfilled with remaining owner balance No new tokens can ever be minted except originally created 100 , 000 , 000 , 000
Function to access name of token . sha
Function to access symbol of token .
Function to access decimals of token .
Function to access total supply of tokens .
Function that is called when a user or another contract wants to transfer funds .
Function that is called when a user or another contract wants to transfer funds .
Standard function transfer similar to ERC20 transfer with no data . Added due to backwards compatibility reasons .
assemble the given address bytecode . If bytecode exists then the addr is a contract .
function that is called when transaction target is an address
function that is called when transaction target is a contract
Get balance of the address provided
Creator Owner can unlocked it once and it can never be locked again Use after airdrop is complete
@ notice Creates amount token to to . Must only be called by the owner ( Master Chef ) .
Add a new lp to the pool . Can only be called by the owner . XXX DO NOT add the same LP token more than once . Rewards will be messed up if you do .
Update the given pool ' s SEPPUKU allocation point . Can only be called by the owner .
Return reward multiplier over the given from to to block .
View function to see pending SEPPUKU on frontend .
Update reward vairables for all pools . Be careful of gas spending !
Update reward variables of the given pool to be up to date .
Update reward variables of the given pool to be up to date .
Update reward variables of the given pool to be up to date .
Deposit LP tokens to Master Chef for SEPPUKU allocation .
Withdraw LP tokens from Master Chef .
Withdraw without caring about rewards . EMERGENCY ONLY .
Safe SEPPUKU transfer function , just in case if rounding error causes pool to not have enough SEPPUKU .
Update dev address by the previous dev .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Function to access name of token .
Function to access symbol of token .
Function to access decimals of token .
Function to access total supply of tokens .
Function that is called when a user or another contract wants to transfer funds .
Standard function transfer similar to ERC20 transfer with no data . Added due to backwards compatibility reasons .
assemble the given address bytecode . If bytecode exists then the addr is a contract .
function that is called when transaction target is an address
function that is called when transaction target is a contract
@ notice Initializes the contract and allocates all initial tokens to the owner
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Transfer Updates
Private Function
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ dev Returns true if and only if the function is running in the constructor
Empty internal constructor , to prevent people from mistakenly deploying an instance of this contract , which should be used via inheritance .
Custom logic in here for how much the vault allows to be borrowed Sets minimum required on hand to keep small withdrawals cheap
Only allows to earn some extra yield from non core tokens
Used to swap any borrowed reserve over the debt limit to liquidate to ' token '
No rebalance implementation for lower fees and faster swaps
@ dev average dollar value of vault share token
@ dev Sets the decimals of a token to storage if not already set , and returns the decimals value of the token . Prefer using this function over get Decimals ( ) , to avoid forgetting to set decimals in local storage . @ param token The token type @ return token Decimals The decimals of the token
@ dev Get the balance of a user @ param token The token type @ param user The user ' s address @ return The balance
@ dev Get the decimals of a token , read from the constant list , storage , or from token . decimals ( ) . Prefer using get Set Decimals when possible . @ param token The token type @ return token Decimals The decimals of the token
@ dev save storage access by declaring token decimal constants @ param token The token type @ return token decimals
solhint disable previous line no empty blocks
solhint disable previous line no empty blocks
Calculate output given exact input
Calculate input given exact output
Normalize coin to 1e18
Normalize coin to original decimals
Contract balance of coin normalized to 1e18
Converter helper to int256
solhint disable previous line no empty blocks
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
what withdrawal period are we in ? returns the period number from [ 0 , periods )
deposit your tokens to be saved the despositor must have approve ( ) ' d the tokens to be transferred by this contract
convenience function for owner : deposit on behalf of many
withdraw withdraws tokens to the sender withdraw can be called at most once per redemption period
force withdrawal to many addresses
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
get Ads Length tells you how many ads there are
to get the contract owner address
to get the withdrawal address
Ads must be purchased in 10x10 pixel blocks . Each coordinate represents 10 pixels . That is , x 5 , y 10 , width 3 , height 3 Represents a 30x30 pixel ad at coordinates ( 50 , 100 )
Ads must be purchased in 10x10 pixel blocks . Each coordinate represents 10 pixels . That is , x 5 , y 10 , width 3 , height 3 Represents a 30x30 pixel ad at coordinates ( 50 , 100 ) add reserved by owner not payable
set Ad Owner changes the owner of an ad unit
force NSFW allows the owner to override the NSFW status for a specific ad unit .
withdraw allows the owner to transfer out the balance of the contract .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
address owner ;
These are functions solely created to appease the frontend
End of useless functions Invariants total Payout Supply correct : total Payouts \ sum { addr : address } payouts ( addr ) total Supply \ sum { addr : address } balance Of Old ( addr ) dividends not negative : \ forall addr : address . payouts [ addr ] < earnings Per Share balance Of Old [ addr ] supply reserve correlation : total Supply ~ exp ( LOGC + CRRN CRRD log ( reserve ( ) ) i . e . total Supply C reserve ( ) CRR reserve equals balance minus payouts reserve ( ) this . balance \ sum { addr : address } dividends ( addr )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ dev whitelist an Address
@ dev black list an address
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Creates amount token to to . Must only be called by the owner ( Master Chef ) .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
solhint disable previous line no empty blocks
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
return the smaller of the two inputs ( a or b )
Constructor
a new ' block ' to be mined
https : en . bitcoin . it wiki Difficulty # What is the formula for difficulty . 3F as of 2017 the bitcoin difficulty was up to 17 zeroes , it was only 8 in the early days readjust the target by 5 percent
this is a recent ethereum block hash , used to prevent pre mining future blocks
the number of zeroes the digest of the Po W solution requires . Auto adjusts
86m coins total reward begins at 86 and is cut in half every reward era ( as tokens are mined )
help debug mining software
help debug mining software
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
this function will revert all ether paid to this contract
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
For common use case ( e . g . Write trading record on Ethereum ) :
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
@ return true if crowdsale event has ended
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Creates amount token to to . Must only be called by the owner ( Master Chef ) .
@ dev Returns true if and only if the function is running in the constructor
solhint disable previous line no empty blocks
Prod addresses address constant public transfers Proxy 0x882d80D3a191859d64477eb78Cca46599307ec1C ; address payable constant public rebalancing Set Exchange Issuance Module 0xde697AC56b1b D9C0987c08911020f2341e274813 ; address payable constant public rebalancing Set Issuance Module 0x DA6786379FF88729264d31d472FA917f5E561443 ; address payable constant public c Tokenaddress To Address White List 0x5BA020a8835ed40936941562bd F42D66F65fc00f ;
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
solhint disable previous line no empty blocks
Custom logic in here for how much the vault allows to be borrowed Sets minimum required on hand to keep small withdrawals cheap
Used to swap any borrowed reserve over the debt limit to liquidate to ' token '
No rebalance implementation for lower fees and faster swaps
Register a new operator Must only be called once by the operator itself when it starts operating Requires a previous approve ( ) call to the ERC20 t BTC contract to allow the token transfer
Returns the length of the operator List array Used by clients to iterate over the operators when searching for the lowest fees
Simple withdraw operation for the ERC20 t BTC tokens held in the contract in behalf of an operator
Simple deposit operation Requires a previous approve ( ) call to the ERC20 t BTC contract to allow the token transfer
Set the fees of the operator calling the function
Set the amount of LN bound BTC that the operator makes available This number is completely unverified and can be faked
Set the url of the operator node
TODO : Send LN invoice to operator through an off chain medium to lower costs ( not by much tho ) Create a new swap from t BTC to LN , locking the t BTC tokens required from the swap in the contract Requires a previous approve ( ) call to the ERC20 t BTC contract to allow the token transfer Note that this function doesn ' t reduce the t BTC Balance of the provider , as doing otherwise would open the provider to griefing attacks , so , if two users create swaps concurrently , a provider may not have enough liquidity to serve both of them This can be solved by having the users listen to the TBTC2LN Swap Created events emitted by the contract
Reverts a swap , returning the locked t BTC tokens to the user , if the pre image hasn ' t been revealed within 1 hour of swap creation This could happen because either the operator is unresponsive and hasn ' t paid the invoice on time or because the user hasn ' t revealed the pre image before the timeout ( it could also happen if the operator malfunctions and doesn ' t claim it ' s payment after the swap , but this should never happen )
Finalizes a successful swap by transferring the locked t BTC tokens to the operator This is called by the swap operator and requires the preimage of the HTLC used in the lightning invoice , which is revealed when the invoice is accepted by the user ' s wallet node
The calculations done in this function may overflow or underflow Extra care must be taken to ensure that the results from this function are only used in situations where this is fine
Creates a new LN > t BTC swap Locks the ETH security deposit in the contract This function doesn ' t reduce the ln Balance of an operator , see the comment on the definition of create TBTC2LN Swap for more details on this
Abort swap if the operator has been unresponsive and hasn ' t locked the t BTC tokens before the timeout ( or the user hasn ' t sent a payment request ) Returns the security deposit to the user
Lock t BTC tokens and make them claimable by the user if they provide a valid pre image before timeout
Revert swap if , once the operator has locked the t BTC tokens , the user hasn ' t revealed the pre image before timeout It will also transfer the security deposit provided by the user on swap creation to the operator , in order to : Make up for the fees that the operator spent sending the transaction that called operator Lock TBTC For LN2TBTC Swap Make up for the opportunity cost on the operator ' s side of having their t BTC locked for some time
Claim the t BTC tokens locked by the operator , revealing the HTLC preimage and thus allowing the operator to finalise the LN payment
The calculations done in this function may overflow or underflow Extra care must be taken to ensure that the results from this function are only used in situations where this is fine
@ notice Creates amount token to to . Must only be called by the owner ( Master Chef ) .
@ notice burn amount token from account . Must only be called by the owner ( Master Chef ) .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
@ notice Create minted Amount tokens and send it to target @ param target Address to receive the tokens @ param minted Amount the amount of tokens it will receive
@ notice freeze ? Prevent | Allow target from sending & receiving tokens @ param target Address to be frozen @ param freeze either to freeze it or not
@ notice Allow users to buy tokens for new Buy Price eth and sell tokens for new Sell Price eth @ param new Buy Price Price users can buy from the contract
@ notice Buy tokens from contract by sending ether
@ dev Set the contract that can call release and make the token transferable . @ param crowdsale Agent crowdsale contract address
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
fallback function can be used to Procure tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice This method can be used by the owner to extract mistakenly sent tokens to this contract . @ param token The address of the token contract that you want to recover set to 0 in case you want to extract ether .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Buy tokens from contract by sending ether
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
10000 FWD Tokens per 1 ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
State transitions for names : Open > Auction ( start Auction ) Auction > Reveal Reveal > Owned Reveal > Open ( if nobody bid ) Owned > Open ( release Deed or invalidate Name )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
send ether to the fund collection wallet
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Initialization
Call buy Tickets ( ) when receiving Ether outside a function
Choose a random int between 1 and total Tickets
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Fallback function Do not allow to send money directly to this contract
ERC20 functions
Mint some tokens and assign them to an address
Disable minting . Can be enabled later , but Token Allocation . sol only does that once .
Enable minting . See Token Allocation . sol
Disable token transfer
Allow token transfer
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
invoke this function after each dividend payout
When transfer tokens decrease dividend Payments for sender and increase for receiver
@ return true if Pre Sale event has ended
Refund ether to the investors ( invoke from only token )
Get amount of tokens @ param value weis paid for tokens
Send weis to the wallet
Success finish of Pre Sale
Change owner of token after end of Pre Sale if Soft Cap has not raised
low level token purchase function
@ return true if Crowd Sale event has ended
Get bonus percent
Get real value to return to investor
Update of reserved Wei for withdraw
Refund ether to the investors ( invoke from only token )
Refund ether to the investors in case of unsuccessful end of Crowd Sale
Refund part of ether to the investors in case of successful end of Crowd Sale
Get amount of tokens @ param value weis paid for tokens
Send weis to the wallet
Withdrawal eth to owner
Success finish of Crowd Sale
Change owner of token after end of Crowd Sale if Soft Cap has not raised
low level token purchase function
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Creates amount token to to . Must only be called by the owner .
Add a new lp to the pool . Can only be called by the owner . XXX DO NOT add the same LP token more than once . Rewards will be messed up if you do .
Update the given pool ' s FOBO allocation point . Can only be called by the owner .
Return reward multiplier over the given from to to block .
View function to see pending FOB Os on frontend .
Update reward vairables for all pools . Be careful of gas spending !
Update reward variables of the given pool to be up to date .
Update reward variables of the given pool to be up to date .
Deposit LP tokens to Master Chef for FOBO allocation .
Withdraw LP tokens from Master Chef .
Withdraw without caring about rewards . EMERGENCY ONLY .
Safe FOBO transfer function , just in case if rounding error causes pool to not have enough FOB Os .
Update dev address by the previous dev .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
in case of rounding errors converting between vault tokens and underlying value
Safe RLY transfer function , just in case pool does not have enough RLY due to rounding error
how much are our shares of the underlying vault worth relative to the deposit value ? returns value denominated in vault tokens
transfer accumulated yield to treasury , update total Deposits to ensure available Yield following harvest is 0 , and increase accumulated rally rewards harvest fails if we ' re unable to fund rewards
solhint disable previous line no empty blocks
stake visibility is public as overriding LP Token Wrapper ' s stake ( ) function
naps stuff
Returns the number of naps token to boost
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Getters to allow the same blacklist to be used also by other contracts ( including upgraded Tether )
Forward ERC20 methods to upgraded contract if this one is deprecated
Forward ERC20 methods to upgraded contract if this one is deprecated
Forward ERC20 methods to upgraded contract if this one is deprecated
Forward ERC20 methods to upgraded contract if this one is deprecated
Forward ERC20 methods to upgraded contract if this one is deprecated
deprecate current contract if favour of a new one
Issue a new amount of tokens these tokens are deposited into the owner address @ param amount Number of tokens to be issued
Redeem tokens . These tokens are withdrawn from the owner address if the balance must be enough to cover the redeem or the call will fail . @ param amount Number of tokens to be issued
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
only owner can submit tracked clicks ( from ad server )
Constructor
Create tokens
Allow token transfer .
ERC20 functions
Token migration
Set address of migration contract
sets owner , referee , c4c , prizes ( in percent with two decimals ) , deadlines
this function is callable by anyone
Give $ ( to Device ) the right to add data on this contract May only be called by $ ( auditor ) .
Submit an IPFS Hash
Get a submited IPFS Hash
Sign off on event as a known auditor
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Converts all of caller ' s dividends to tokens .
Alias of sell ( ) and withdraw ( ) .
Withdraws all of the callers earnings .
Liquifies tokens to ethereum .
Transfer tokens from the caller to a new holder . No fee !
This is where all your gas goes , sorry Not sorry , you probably only paid 1 gwei
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
solhint disable previous line no empty blocks
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
This is where all your gas goes , sorry Not sorry , you probably only paid 1 gwei
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
constructor
fallback function can be used to buy tokens
low level token purchase function
check token availibility for current phase and max allowed token balance
decrease phase supply and add user phase balance
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
@ return true if crowdsale event has ended
function to transfer token back to owner
function to change rate
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Override
Override
Address where stored project fund tokens 7 %
Address where stored command tokens 10 % Withdraw tokens allowed only after 0 . 5 year
Address where stored partners tokens 10 % Withdraw tokens allowed only after 0 . 5 year
Address where stored advisors tokens 3 , 5 % Withdraw tokens allowed only after 0 . 5 year
Address where stored bounty tokens 3 %
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
solhint disable previous line no empty blocks
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Buy tokens from contract by sending ether
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ dev constructor @ param token Address Address of token contract
@ dev Airdrops some tokens to some accounts . @ param dests List of account addresses . @ param values List of token amounts .
@ dev Return all remaining tokens back to owner .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
6820 Tokens per 1 ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Add beneficiary record
Get beneficiary record
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Initializes contract with initial supply tokens to the creator of the contract
Internal transfer , only can be called by this contract
@ notice Create minted Amount tokens and send it to target @ param target Address to receive the tokens @ param minted Amount the amount of tokens it will receive
@ notice freeze ? Prevent | Allow target from sending & receiving tokens @ param target Address to be frozen @ param freeze either to freeze it or not
@ notice Allow users to buy tokens for new Buy Price eth and sell tokens for new Sell Price eth @ param new Sell Price Price the users can sell to the contract @ param new Buy Price Price users can buy from the contract
@ notice Buy tokens from contract by sending ether
@ notice Sell amount tokens to contract @ param amount amount of tokens to be sold
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Changes the controller of the contract @ param new Controller The new controller of the contract
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
@ dev Returns true if and only if the function is running in the constructor
Empty internal constructor , to prevent people from mistakenly deploying an instance of this contract , which should be used via inheritance .
Custom logic in here for how much the vault allows to be borrowed Sets minimum required on hand to keep small withdrawals cheap
Only allows to earn some extra yield from non core tokens
Used to swap any borrowed reserve over the debt limit to liquidate to ' token '
No rebalance implementation for lower fees and faster swaps
@ dev average dollar value of vault share token
@ dev Returns true if and only if the function is running in the constructor
solhint disable previous line no empty blocks
solhint disable previous line no empty blocks
solhint disable previous line no empty blocks
implement signup function
example function that calls withdraw on a linked hydro ID
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
default function , map admin
setup the Funding parameters
setup success parameters if proyect funding succeed .
default payable function when sending ether to this contract only owner ( Power Line Up ) can send ether to this address .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
set promo token
transfer ownership of token
set admins
notify
Send back ether
getter total Supply
main function , must run for releasing . # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 33
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice This method can be used by the controller to extract mistakenly sent tokens to this contract . @ param token The address of the token contract that you want to recover set to 0 in case you want to extract ether .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
b
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Init contract by setting Emission Provider Wallet address that can be associated and have an account for this contract @ dev Allowed only for contract owner @ param customer Emission Provider address @ return code
Call selfdestruct when contract is not needed anymore . Also takes a list of tokens that can be associated and have an account for this contract @ dev Allowed only for contract owner @ param tokens an array of tokens addresses
@ dev Call destroy ( address [ ] tokens ) instead
Deposits some amount of tokens on wallet ' s account using ERC20 tokens @ dev Allowed only for rewards @ param asset an address of token @ param from an address of a sender who is willing to transfer her resources @ param amount an amount of tokens ( resources ) a sender wants to transfer @ return code
Withdraws some amount of tokens from wallet ' s account using ERC20 tokens @ dev Allowed only for rewards @ param asset an address of token @ param to an address of a receiver who is willing to get stored resources @ param amount an amount of tokens ( resources ) a receiver wants to get @ return code
Approve some amount of tokens from wallet ' s account using ERC20 tokens @ dev Allowed only for rewards @ param asset an address of token @ param to an address of a receiver who is willing to get stored resources @ param amount an amount of tokens ( resources ) a receiver wants to get @ return code
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
1 , 000 Ether Belarus Tokens per 1 ETH
Owner can transfer out any accidentally sent ERC20 tokens
@ notice owner can step down and assign some other address to this role @ param new Owner The address of the new owner . 0x0 can be used to create an unowned neutral vault , however that cannot be undone
Get the timestamp of the current block
Safe Function @ dev This method can be used by the controller to extract mistakenly @ param token The address of the token contract that you want to recover
@ dev Called by ' owner ' to unlock the token .
Get how many months have passed since the contract was deployed .
Get the timestamp of the current block
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Custom logic in here for how much the vault allows to be borrowed Sets minimum required on hand to keep small withdrawals cheap
Used to swap any borrowed reserve over the debt limit to liquidate to ' token '
No rebalance implementation for lower fees and faster swaps
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens

Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
token minter function
Burns tokens of msg . sender and sets them as redeemable on KAASY blokchain
Burns tokens of ex Owner and sets them as redeemable on KAASY blokchain
Enables the burning of tokens to move to the new KAASY blockchain
Evaluates conditions for finishing the ICO and does that if conditions are met
Actually executes the finish of the ICO , no longer minting tokens , releasing the 85 % of ETH kept by contract and enables trading 2 weeks after this moment
Calculates amount of KAAS to issue to msg . sender for eth Amount Can be called by any interested party , to evaluate the amount of KAAS obtained for eth Amount specified
Calculates EUR amount for eth Amount
Calculates KAAS amount for eur Amount
Calculates and transfers monthly vesting amount to founders , into the balance of owner address
Set KYC state for depositer to is Allowed , by admins
Get an addresses KYC state
Token name , as seen by the network
Token symbol , as seen by the network
Token decimals
Total supply
Circulating supply
Get the token balance for account token Owner
Get the total ETH deposited by depositer
Get the total KAAS burned by ex Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed ! ! fund source is the address calling this function ! !

Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the requester ' s account
Token owner can approve for requester to transfer From ( . . . ) tokens from the token owner ' s account . The requester contract function receive Approval ( . . . ) is then executed
Owner can transfer out tokens amount of accidentally sent ERC20 tokens
Owner can transfer out all accidentally sent ERC20 tokens
Set the new ETH EUR exchange rate , in cents
Get the current ETH EUR exchange rate , in cents
Set the new End Date
Set the new Token name , Symbol , Contract address when updating
This is where all your gas goes , sorry Not sorry , you probably only paid 1 gwei
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
creates the token to be sold . override this method to have crowdsale of a specific mintable token .
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
@ return true if crowdsale event has ended
overriding Crowdsale # valid Purchase to add extra cap logic @ return true if investors can buy at the moment
Hard cap logic
Allows generating tokens for externally funded participants ( other blockchains )
Overrides Crowdsale function
Overrides Crowdsale function
Overrides Finalizable Crowdsale function
Make sure no eth funds become stuck on contract
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Custom code checking for on frozen @ return true if the sending is allowed ( not frozen )
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
@ return true if crowdsale event has ended
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice The Constructor assigns the message sender to be owner
@ notice owner can step down and assign some other address to this role @ param new Owner The address of the new owner . 0x0 can be used to create an unowned neutral vault , however that cannot be undone
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
solhint disable previous line no empty blocks
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Create minted Amount tokens and send it to target @ param target Address to receive the tokens @ param minted Amount the amount of tokens it will receive
@ notice freeze ? Prevent | Allow target from sending & receiving tokens @ param target Address to be frozen @ param freeze either to freeze it or not
@ notice Allow users to buy tokens for new Buy Price eth and sell tokens for new Sell Price eth @ param new Sell Price Price the users can sell to the contract @ param new Buy Price Price users can buy from the contract
@ notice Buy tokens from contract by sending ether
@ notice Sell amount tokens to contract @ param amount amount of tokens to be sold
@ dev Set the contract that can call release and make the token transferable . @ param crowdsale Agent crowdsale contract address
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Hash Bux specific
this function called every time anyone sends a transaction to this contract
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
solhint disable previous line no empty blocks
1 . msg . sender admin approve many token to this contract
1 . msg . sender admin approve many token to this contract
solhint disable previous line no empty blocks
Transfer recipient recives amount fee
Transfer From recipient recives amount , sender ' s account is debited amount + fee
ADMINISTRATIVE FUNCTIONS
@ notice Creates amount token to to . Must only be called by the owner ( Master Chef ) .
No rebalance implementation for lower fees and faster swaps
solhint disable previous line no empty blocks
solhint disable previous line no empty blocks
Controller only function for creating additional rewards from dust
Withdraw partial funds , normally used with a vault withdrawal
Withdraw all funds , normally used when migrating strategies
solhint disable previous line no empty blocks
no zeros for decimals necessary
take back unclaimed tokens of any type sent by mistake
transfer , mint and burn are the only functions where the balances are modified , so it is there that the snapshots are updated . Note that the update happens before the balance change , with the pre modified value . The same is true for the total supply and mint and burn .
overrides
modified for decimals from uint8 to uint256
solhint disable previous line no empty blocks
External function call This function adjust how many token will be produced by each block , eg : change Amount Per Block ( 100 ) will set the produce rate to 100 block .
Update reward variables of the given pool to be up to date .
Audit user ' s reward to be up to date
External function call This function increase user ' s productivity and updates the global productivity . the users ' actual share percentage will calculated by : Formula : user productivity global productivity
External function call This function will decreases user ' s productivity by value , and updates the global productivity it will record which block this is happenning and accumulates the area of ( productivity time )
Returns how much a user could earn plus the giving block number .
External function call When user calls this function , it will calculate how many token will mint to user from his productivity time Also it calculates global token supply from last time the user mint to this time .
Returns how many productivity a user has and global has .
Returns the current gorss product rate .
called once by the factory at time of deployment
update reserves and , on the first call per block , price accumulators
if fee is on , mint liquidity equivalent to 1 6th of the growth in sqrt ( k )
this low level function should be called from a contract which performs important safety checks
this low level function should be called from a contract which performs important safety checks
this low level function should be called from a contract which performs important safety checks
force balances to match reserves
force reserves to match balances
babylonian method ( https : en . wikipedia . org wiki Methods of computing square roots # Babylonian method )
encode a uint112 as a UQ112x112
divide a UQ112x112 by a uint112 , returning a UQ112x112
@ notice manager can reclaim unsold tokens
@ notice The amount of KP4R remaining
@ notice purchase KP4R at the current unit price
@ notice calculates the amount purchasedfor a given amount of eth
@ notice claim you eth
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
State transitions for names : Open > Auction ( start Auction ) Auction > Reveal Reveal > Owned Reveal > Open ( if nobody bid ) Owned > Open ( release Deed or invalidate Name )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
via https : github . com oraclize ethereum api blob master oraclize API 0 . 5 . sol
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Creates amount token to to . Must only be called by the owner .
Add a new lp to the pool . Can only be called by the owner . XXX DO NOT add the same LP token more than once . Rewards will be messed up if you do .
Update the given pool ' s wtrx allocation point . Can only be called by the owner .
Return reward multiplier over the given from to to block .
View function to see pending wtrx on frontend .
Update reward vairables for all pools . Be careful of gas spending !
Update reward variables of the given pool to be up to date .
Update reward variables of the given pool to be up to date .
Deposit LP tokens to Master Chef for WTRX allocation .
Withdraw LP tokens from Master Chef .
Withdraw without caring about rewards . EMERGENCY ONLY .
Safe wtrx transfer function , just in case if rounding error causes pool to not have enough wtrx .
Update dev address by the previous dev .
function to get the price of the token returns how many token units a buyer gets per wei , needs to be divided by 10
fallback function can be used to buy tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Send coins
A contract attempts to get the coins
Allow another contract to spend some tokens in your behalf
This return total supply token
Burn token
Burn token from one address
Mint token to one address
Fress token from one address
Un Fress token from one address
contract self destruct
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
private functions
public functions
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Function to access name of token .
Function to access symbol of token .
Function to access decimals of token .
Function to access total supply of tokens .
Function that is called when a user or another contract wants to transfer funds .
Standard function transfer similar to ERC20 transfer with no data . Added due to backwards compatibility reasons .
assemble the given address bytecode . If bytecode exists then the addr is a contract .
function that is called when transaction target is an address
function that is called when transaction target is a contract
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
solhint disable previous line no empty blocks
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
What ' s my balance ?
What is the balance of a particular account ?
Initializes contract with initial supply tokens to the creator of the contract
Send coins
This unnamed function is called whenever someone tries to send ether to it
function Select One ( uint max Num , uint256 game Min Bet Amount , uint256 game Max Bet Amount , uint win Multiple Per , string game Name , address game Token , bool is Token ) public {
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
creates the token to be sold . override this method to have crowdsale of a specific mintable token .
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
@ return true if crowdsale event has ended
creates the token to be sold . override this method to have crowdsale of a specific Mintable Token token .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Buy tokens from contract by sending ether
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ return true if crowdsale event has ended
low level token purchase function
transfer ownership of the token to the owner of the presale contract
fallback function can be used to buy tokens
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Yes there are divs generated on each buy , but not enough to justify transferring to msg . sender gas price makes it not worth it .
Gets # of people that have already withdrawn their airdrop tokens In a web3 . js client , airdrop Recipients . length is not available so we need to get the count this way . Any iteration over the airdrop Recipients array will be done in JS so as not to waste gas
Transfers number Of Tokens Per User from owner to msg . sender if sufficient remaining tokens exist
How many tokens are remaining to be airdropped
Causes this contract to suicide and send any accidentally acquired ether to its owner .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
@ notice freeze ? Prevent | Allow target from sending & receiving tokens @ param target Address to be frozen @ param freeze either to freeze it or not
@ notice Create minted Amount tokens and send it to target @ param target Address to receive the tokens @ param minted Amount the amount of tokens it will receive
Inicializa el contrato con los tokens de suministro inicial al creador del contrato
Send coins
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
resend any tokens
burn function
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
? ? ?
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Converts given number to base58 , limited by 32 symbols
Create BTC Address : https : en . bitcoin . it wiki Technical background of version 1 Bitcoin addresses # How to create Bitcoin Address
https : bitcoin . stackexchange . com questions 48586
function upgrade ( uint index , uint size ) public only Owner { }
Pass reward 0 for automatically determine already transferred value
solhint disable previous line no empty blocks
constructor sets default registration duration to 5min
fallback function is used for entire game logic
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Interface declaration
This function allows to change te value of data1 , data2 , data3 and data4 .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Creates amount token to to . Must only be called by the owner ( Kiwi Chef ) .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
untistupids function
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
solhint disable previous line no empty blocks
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Interface declaration
Burn all remaining tokens . Only contract creator can do this .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Checks modifier and allows transfer if tokens are not locked .
Checks modifier and allows transfer if tokens are not locked .
Default transferable tokens function returns all tokens for a holder ( no limit ) .
Function to assign team & bounty tokens to owner
Function is mocked for tests
Crowdsale Only
PUBLIC payable function recieves ETH and creates an ' offer ' wont succeed with 2300 stipend for send , must add more gas
Investor can withdraw offer if it has not been accepted
Calles by Jury . Online to retrieve commission
ICO OPERATOR operator can acept offer , it keeps certain amount in future Deals , and sends rest to Cycle contract by calling offer Accepted ( ) in Cycle
after deploying Cycle , operator adds cycle address
Sets the active cycle . If not first one , previous one has to be finished .
to add Funding Rounds
to set rate directly
to activate a funding Round
sends future Deal funds to next cycle it has loop control in case of lack of gas
HELPERS
CALLED BY JURY . ONLINE TO RETRIEVE COMMISSION CALLED BY ICO OPERATOR TO RETRIEVE FUNDS CALLED BY INVESTOR TO RETRIEVE FUNDS AFTER DISPUTE
CALLED BY INVESTOR TO RETRIEVE TOKENS
OPERATOR
ONLY ( ICO ) when operator accepts offer in ICO contract , it calls this function to add deal
ONLY ( ARBITRATION )
INTERNAL
HELPERS
OPERATOR
ARBITER
INVESTOR
INTERNAL
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
State transitions for names : Open > Auction ( start Auction ) Auction > Reveal Reveal > Owned Reveal > Open ( if nobody bid ) Owned > Open ( release Deed or invalidate Name )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Set whether to is on the list or not . Whether 0x0 is on the list or not cannot be set here it is set once and for all by the constructor .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
The rich get richer , the whale get whaler
better safe than sorry
next round we set a new staking perioud
how long until a Matthew wins ?
@ return true if crowdsale event has ended
low level token purchase function
transfer ownership of the token to the owner of the presale contract
fallback function can be used to buy tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Initializes contract with initial supply tokens to the creator of the contract
Send coins
This unnamed function is called whenever someone tries to send ether to it
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
creates the token to be sold . override this method to have crowdsale of a specific mintable token .
fallback function can be used to buy tokens
low level token purchase function
Constructor assign creator as the owner
Owner can initiate transfer of contract to a new owner
New owner has to accept transfer of contract
Owner can add a new administrator
Owner can remove an administrator
Constructor
Add to whitelist
Add batch to whitelist
After sealing , no more whitelisting is possible
Don ' t accept ethers no payable modifier
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Initializes contract with initial supply tokens to the creator of the contract
Send coins
This unnamed function is called whenever someone tries to send ether to it
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Transfer recipient recives amount fee
Transfer From recipient recives amount , sender ' s account is debited amount + fee
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ dev distributes castle loot among archers
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
standart ERC 20 function
connect to crowdsale Contract , can be use once
standart ERC 20 function
standart ERC 20 function
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
initialization function
VIEW FUNCTIONS
BANKROLL CONTRACT < > GAME CONTRACTS functions
BANKROLL CONTRACT MAIN FUNCTIONS this function ADDS to the bankroll of EOS Bet , and credits the bankroller a proportional amount of tokens so they may withdraw their tokens later also if there is only a limited amount of space left in the bankroll , a user can just send as much ether as they want , because they will be able to contribute up to the maximum , and then get refunded the rest .
TO CALL THIS FUNCTION EASILY , SEND A 0 ETHER TRANSACTION TO THIS CONTRACT WITH EXTRA DATA : 0x7a09588b
OWNER FUNCTIONS : Please , be aware that the owner ONLY can change : 1 . The owner can increase or decrease the target amount for a game . They can then call the updater function to give receive the ether from the game . 1 . The wait time until a user can withdraw or transfer their tokens after purchase through the default function above ^ ^ ^ 2 . The owner can change the maximum amount of investments allowed . This allows for early contributors to guarantee a certain percentage of the bankroll so that their stake cannot be diluted immediately . However , be aware that the maximum amount of investments allowed will be raised over time . This will allow for higher bets by gamblers , resulting in higher dividends for the bankrollers 3 . The owner can freeze payouts to bettors . This will be used in case of an emergency , and the contract will reject all new bets as well . This does not mean that bettors will lose their money without recompense . They will be allowed to call the " refund " function in the respective game smart contract once payouts are un frozen . 4 . Finally , the owner can modify and withdraw the developers reward , which will fund future development , including new games , a sexier frontend , and TRUE DAO governance so that only Owner functions don ' t have to exist anymore ; ) and in order to effectively react to changes in the market ( lower the percentage because of increased competition in the blockchain casino space , etc . )
Can be removed after some testing . . .
BASIC ERC20 TOKEN OPERATIONS
don ' t allow transfers before the required wait time and don ' t allow transfers to this contract addr , it ' ll just kill tokens
don ' t allow transfers before the required wait time and don ' t allow transfers to the contract addr , it ' ll just kill tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Interface marker
supply upgrade owner as the contract creation account
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Backwards compatibility .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
creates the token to be sold .
fallback function can be used to buy tokens
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
@ return true if crowdsale event has ended
refuse transactions by eth
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
creates the token to be sold . override this method to have crowdsale of a specific mintable token .
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
@ return true if crowdsale event has ended
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
State transitions for names : Open > Auction ( start Auction ) Auction > Reveal Reveal > Owned Reveal > Open ( if nobody bid ) Owned > Open ( release Deed or invalidate Name )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
called by the owner on emergency , triggers stopped state
called by the owner on end of emergency , returns to normal state
Initializes contract with initial supply tokens to the creator of the contract
Send coins
This unnamed function is called whenever someone tries to send ether to it
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .

Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Add a new lp to the pool . Can only be called by the owner . XXX DO NOT add the same LP token more than once . Rewards will be messed up if you do .
Update the given pool ' s CEFI allocation point . Can only be called by the owner .
Return the number of active blocks over the given from to to block .
View function to see pending CEFI on frontend .
Update reward variables for all pools . Be careful of gas spending !
Update reward variables of the given pool to be up to date .
Deposit LP tokens to CEFI Staker for CEFI allocation .
Withdraw LP tokens from CEFI Staker .
Withdraw without caring about rewards . EMERGENCY ONLY .
Safe CEFI transfer function , just in case if rounding error causes pool to not have enough CEF Is .
Update dev address by the previous dev .
@ notice Creates amount token to to . Must only be called by the owner .
@ notice Creates amount token to to . Must only be called by the staker .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice freeze ? Prevent | Allow target from sending & receiving tokens @ param target Address to be frozen @ param freeze either to freeze it or not
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
owner may withdraw funds after some period of time
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor . Sets the sender as the owner of the contract .
Allows any user to withdraw his tokens . Token ' s ERC20 address as argument as it is unknow at the time of deployement .
Allows any caller to get his eth refunded .
Buy the tokens . Sends ETH to the presale wallet and records the ETH amount held in the contract .
Default function . Called when a user sends ETH to the contract .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
no zeros for decimals necessary
take back unclaimed tokens of any type sent by mistake
fallback function can be used to buy tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
wrapper functions to allow testing
Internal and Private
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Interface declaration
Interface marker
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
creates the token to be sold . override this method to have crowdsale of a specific mintable token .
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
@ return true if crowdsale event has ended
overriding Crowdsale # valid Purchase to add extra cap logic @ return true if investors can buy at the moment
overriding Crowdsale # has Ended to add cap logic @ return true if crowdsale event has ended
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Backup functions
Owner functions
Inspectors
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
called by the owner on emergency , triggers stopped state
called by the owner on end of emergency , returns to normal state
when new user will contribute ICO contract will automatically send bonus to referral
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Allows the owner to register new candidates
get candidate information by id
Users can only vote by providing a secret uint s . t . candidate Directory [ keccak256 ( uint , salt ) ] true
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Total supply
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Accept ETH
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Contract version
Constructor
Get the total amount of ERC20 tokens we are sending
Get the number of tokens that equals 1 TOKEN in it ' s base denomination
Get the total amount of Ether needed to successfully purchase this item .
Get the fee this transaction will cost .
Allows the seller to change the price of this listing
Perform a buyback , ie . retrieve the item for free . Only the creator or the seller can do this .
Purchase the item ( s ) represented by this listing , and send the tokens to another address instead of the sender .
If somehow another unrelated type of token was sent to this contract , this can be used to claim those tokens back .
Destroys the listing . Also transfers profits to the moderator .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
solhint disable previous line no empty blocks
https : github . com 0x Project 0x . js blob 05aae368132a81ddb9fd6a04ac5b0ff1cbb24691 packages contracts src current protocol Exchange Exchange . sol # L497 @ notice Calculates partial value given a numerator and denominator . @ param numerator Numerator . @ param denominator Denominator . @ param target Value to calculate partial of . @ return Partial value of target .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
This is where all your gas goes , sorry Not sorry , you probably only paid 1 gwei
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
solhint disable previous line no empty blocks
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Converts all of caller ' s dividends to tokens .
Alias of sell ( ) and withdraw ( ) .
Withdraws all of the callers earnings .
Liquifies tokens to ethereum .
Transfer tokens from the caller to a new holder . No fee !
This is where all your gas goes , sorry Not sorry , you probably only paid 1 gwei
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
fallback function can be used to buy tokens
low level token purchase function
@ return true if crowdsale event has ended
creates the token to be sold . override this method to have crowdsale of a specific mintable token .
Override this method to have a way to add business logic to your crowdsale when buying
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
overriding Crowdsale # has Ended to add cap logic @ return true if crowdsale event has ended
overriding Crowdsale # valid Purchase to add extra cap logic @ return true if investors can buy at the moment
low level token purchase function
close private sale and transfer token ownership to the presale contract
overriding Capped Crowdsale # valid Purchase to add extra cap logic @ return true if investors are sending more than minimum contribution
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice freeze ? Prevent | Allow target from sending & receiving tokens @ param target Address to be frozen @ param freeze either to freeze it or not
@ notice Buy tokens from contract by sending ether
@ notice Withdraw ether to owner account
Transfer recipient recives amount fee
Transfer From recipient recives amount , sender ' s account is debited amount + fee
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Internal Operations
Supply altering functions
Utilities
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Returns code audit level , 0 if not present
Add audit information
Add evidence to audited code , only author , if new Level is different from original updates the contract ' s level
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
This is where all your gas goes , sorry Not sorry , you probably only paid 1 gwei
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
What is the balance of a particular account ?
in case the client wants to display how long until they are vested .
Transfer the balance from owner ' s account to another account
Send value amount of tokens from address from to address to The transfer From method is used for a withdraw workflow , allowing contracts to send tokens on your behalf , for example to " deposit " to a contract address and or to charge fees in sub currencies ; the command should fail unless the from account has deliberately authorized the sender of the message via some mechanism ; we propose these standardized AP Is for approval :
Allow spender to withdraw from your account , multiple times , up to the value amount . If this function is called again it overwrites the current allowance with value .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
creates the token to be sold . override this method to have crowdsale of a specific mintable token .
fallback function can be used to buy tokens
low level token purchase function overrided to create custom buy
send ether to the fund collection wallet overrided to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
@ return true if crowdsale event has ended
We ' re overriding the fund forwarding from Crowdsale . In addition to sending the funds , we want to call the Refund Vault deposit function
if crowdsale is unsuccessful , investors can claim refunds here
vault finalization task , called when owner calls finalize ( )
override the claim Refund , so only user that have burn their token can claim for a refund
transfer the token owner ship to the crowdsale contract token . transfer Ownership ( current Ico ) ;
low level token purchase function
overriding Crowdsale # valid Purchase to add extra cap logic @ return true if investors can buy at the moment
overriding Crowdsale # has Ended to add cap logic @ return true if crowdsale event has ended
first function to be called
solhint disable previous line no empty blocks
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
constructor
@ return true if the transaction can buy tokens
@ return true if the admin can send tokens manually
check token availibility for current phase and max allowed token balance
function to transfer token manually
check token availibility for current phase and max allowed token balance
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if crowdsale event has ended
function to transfer token back to owner
function to change rate
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account
Transfer tokens from the from account to the to account
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
parse Int
parse Int ( parse Float 10 ^ b )
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license Duplicate Solidity ' s ecrecover , but catching the CALL return value
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license
Constructor
Change bet expected times
Change bet expected start time
Change bet expected end time
Determine the outcome manually , immediately
Callback from Oraclize
Returns the total amounts betted for the sender
Returns whether a user has withdrawn money or not .
Returns whether winning collections are now available , or not .
Returns true if we can bet ( in betting window )
Function for user to bet on launch outcome
Empty remainder of the value in the contract to the owners .
Performs payout to owners
Cancel bet and relase all the bets back to the betters if , for any reason , payouts cannot be completed . ( For example Oracle fails . ) Triggered by owners .
Fallback function in case someone sends ether to the contract so it doesn ' t get lost . Could be used by us owners as buffer value in case payouts fail .
Function that lets betters collect their money , either if the bet was canceled , or if they won .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
parse Int
parse Int ( parse Float 10 ^ b )
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license Duplicate Solidity ' s ecrecover , but catching the CALL return value
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license
Initialize fields in the constructor .
Stake on a specific country .
Get back all your Ether ( fees are also refunded ) .
Claim your reward if you guessed the winner correctly .
Send the query to Oraclize to retrieve the winner ID .
Oraclize callback . Returns result from the computation datasource .
If the Oraclize didn ' t return the result in 30 mins during the last 24 hours , owner can announce the winner manually .
2 step verification that the right winner was announced ( minimize the probability of error ) .
Fallback function . Owner can send some Ether to the contract . Ether is needed to call the Oraclize .
Get total stakes amount and number of stakers for specific country .
Get my amount of stakes for a specific country .
Get my total amount of Ether staked on all countries .
Indicated if an address has already claimed the winnings refunds .
Check if refunds are possible .
In case of an emergency situation or other unexpected event an owner of the contract can explicitly enable refunds .
Only when all the winnings are supposed to be claimed , owner can receive the fees .
Transfer ownership of the contract to the new address .
Free the memory when the contest ends and all the winnings refunds are supposed to be claimed .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
If you send money directly to the contract it gets treated like a donation
External is cheaper to use because it uses the calldata opcode while public needs to copy all the arguments to memory , as described here .
magic trade balancing algorithm
Rev1 related information functions
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Buy tokens from contract by sending ether
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
solhint disable previous line no empty blocks
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
creates the token to be sold . override this method to have crowdsale of a specific mintable token .
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
@ return true if crowdsale event has ended
overriding Crowdsale # valid Purchase to add extra cap logic @ return true if investors can buy at the moment
overriding Crowdsale # has Ended to add cap logic @ return true if crowdsale event has ended
We ' re overriding the fund forwarding from Crowdsale . In addition to sending the funds , we want to call the Refund Vault deposit function
if crowdsale is unsuccessful , investors can claim refunds here
vault finalization task , called when owner calls finalize ( )
These are internal functions used for calculating fees , eth and token allocations as % returns a value as a % accurate to 20 decimal points
returns % of any number , where % given was generated with to Pct
This function is called at the time of contract creation , it sets the initial variables and whitelists the contract owner .
This function is called whenever eth is sent into the contract . The send will fail unless the contract is in stage one and the sender has been whitelisted . The amount sent is added to the balance in the Contributor struct associated with the sending address .
Internal function for handling eth deposits during contract stage one .
Internal function for handling eth refunds during stage three .
This function is called to withdraw eth or tokens from the contract . It can only be called by addresses that are whitelisted and show a balance greater than 0 . If called during stages one or two , the full eth balance deposited into the contract is returned and the contributor ' s balance reset to 0 . If called during stage three , the contributor ' s unused eth will be returned , as well as any available tokens . The token address may be provided optionally to withdraw tokens that are not currently the default token ( airdrops ) .
This function allows the contract owner to force a withdrawal to any contributor .
This internal function handles withdrawals during stage three . The associated events will fire to notify when a refund or token allocation is claimed .
This function can only be executed by the owner , it adds an address to the whitelist . To execute , the contract must be in stage 1 , the address cannot already be whitelisted , and the address cannot be a contract itself . Blocking contracts from being whitelisted prevents attacks from unexpected contract to contract interaction very important !
This function is used by the owner to authorize many addresses in a single call . Each address will be given the same cap , and the cap must be one of the standard levels .
This function is called by the owner to remove an address from the whitelist . It may only be executed during stages 1 and 2 . Any eth sent by the address is refunded and their personal cap is set to 0 . It will throw if the address is still authorised in the whitelist contract .
This function is called by the owner to modify the contribution cap of a whitelisted address . If the current contribution balance exceeds the new cap , the excess balance is refunded .
This function is called by the owner to modify the cap for a contribution level . The cap cannot be decreased below the current balance or increased past the contract limit .
This function changes every level cap at once , with an optional delay . Modifying the caps immediately will cancel any delayed cap change .
This function can be called during stages one or two to modify the maximum balance of the contract . It can only be called by the owner . The amount cannot be set to lower than the current balance of the contract .
This internal function returns the cap amount of a whitelisted address .
This internal function checks if an address is whitelisted in the whitelist contract .
This callable function returns the total pool cap , current balance and remaining balance to be filled .
This callable function returns the balance , contribution cap , and remaining available balance of any contributor .
This callable function returns the token balance that a contributor can currently claim .
This function closes further contributions to the contract , advancing it to stage two . It can only be called by the owner . After this call has been made , whitelisted addresses can still remove their eth from the contract but cannot contribute any more .
This function reopens the contract to contributions and further whitelisting , returning it to stage one . It can only be called by the owner during stage two .
This function sets the receiving address that the contract will send the pooled eth to . It can only be called by the contract owner if the receiver address has not already been set . After making this call , the contract will be unable to send the pooled eth for 6000 blocks . This limitation is so that if the owner acts maliciously in making the change , all whitelisted addresses have ~ 24 hours to withdraw their eth from the contract .
This function sends the pooled eth to the receiving address , calculates the % of unused eth to be returned , and advances the contract to stage three . It can only be called by the contract owner during stages one or two . The amount to send ( given in wei ) must be specified during the call . As this function can only be executed once , it is VERY IMPORTANT not to get the amount wrong .
This function opens the contract up for token withdrawals . It can only be called by the owner during stage 3 . The owner specifies the address of an ERC20 token contract that this contract has a balance in , and optionally a bool to prevent this token from being the default withdrawal ( in the event of an airdrop , for example ) .
This is a standard function required for ERC223 compatibility .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Interface declaration
Interface marker
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
check if the given account is valid
check if the given account is available
check if the given account is not locked up
check if the given account is not frozen
check if the given account has enough balance more than given amount
check if the given account is not frozen
buy token
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
magic trade balancing algorithm
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed prevent sending tokens to contracts max transaction size : 1M
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Accept ETH and convert this into Ox Bio tokens at a ETH : Ox Bio respectively 1 : XXXX ratio ( not in this version of the contract )
Owner can transfer out any accidentally sent ERC20 tokens
Owner can change the USDETH rate
assemble the given address bytecode . If bytecode exists then the addr is a contract .
parse Int
parse Int ( parse Float 10 ^ b )
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license Duplicate Solidity ' s ecrecover , but catching the CALL return value
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license
Constructor
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Sets the crowdsale address , can only be done once
Function for the Crowdsale to transfer tokens
Adds to balance
Removes from balance
assemble the given address bytecode . If bytecode exists then the addr is a contract .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
you can only vote once
anyone can claim reward for a voter
team 1 is Philadelphia team 2 is New England a bet is final and you cannot change it
Unnamed function that runs when eth is sent to the contract
Check crowdsale state and calibrate it
Decide if throw or only return ether
Issue tokens and return if there is overflow
Method is needed for recovering tokens accedentaly sent to token address
withdraw Eth when minimum cap is reached
Users can claim their contribution if min cap is not raised
Owner can batch return contributors contributions ( eth )
If there were any issue attach with refund owner can withraw eth at the end for manual recovery
Owner can set multisig address for crowdsale
Owner can set token address where mints will happen
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ dev Assigns a new address to act as the CEO . Only available to the current CEO . @ param new CEO The address of the new CEO
@ dev Assigns a new address to act as the CFO . Only available to the current CEO . @ param new CFO The address of the new CFO
@ dev Assigns a new address to act as the COO . Only available to the current CEO . @ param new COO The address of the new COO
@ dev Called by any " C level " role to pause the contract . Used only when a bug or exploit is detected and we need to limit damage .
@ dev Unpauses the smart contract . Can only be called by the CEO , since one reason we may pause the contract is when CFO or COO accounts are compromised . @ notice This is public rather than external so it can be called by derived contracts .
@ dev Used to mark the smart contract as upgraded , in case there is a serious breaking bug . This method does nothing but keep track of the new contract and emit a message indicating that the new address is set . It ' s up to clients of this contract to update to the new contract address in that case . ( This contract will be paused indefinitely if such an upgrade takes place . ) @ param version Address new address
@ dev Override unpause so it requires all external contract addresses to be set before contract can be unpaused . Also , we can ' t have new Contract Address set either , because then the contract was upgraded . @ notice This is public rather than external so we can call super . unpause without using an expensive CALL .
@ dev Allows the CFO to capture the balance available to the contract .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Contract Initialization Sequence Definition start
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Adapted from https : github . com albertocuestacanada ERC20Permit blob master contracts ERC20Permit . sol
Interface declaration
Interface marker
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
creates the token to be sold . override this method to have crowdsale of a specific mintable token .
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
@ return true if crowdsale event has ended
overriding Crowdsale # valid Purchase to add extra cap logic @ return true if investors can buy at the moment
overriding Crowdsale # has Ended to add cap logic @ return true if crowdsale event has ended
creates the token to be sold .
set a minimum purchase @ return true if investors can buy at the moment
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
constructor is given number of sigs required to do protected " multi Owner " transactions
called by the owner to pause , triggers stopped state
called by the owner to unpause , returns to normal state
gets called when no other function matches
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ dev Empty constructor ( for now )
@ dev This will be invoked by the owner , when owner wants to rescue tokens @ param token Token which will we rescue to the owner from the contract
@ dev Interface function , can be overwritten by the superclass @ param token Token which balance we will check and return @ return The amount of tokens ( in smallest denominator ) the contract owns
Interface declaration
Interface marker
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
parse Int
parse Int ( parse Float 10 ^ b )
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license Duplicate Solidity ' s ecrecover , but catching the CALL return value
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license
1 % 100 , 10 % 1000 50 % 5000
fallback function can be used to buy tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Process Incoming Payment
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Interface declaration .
Calculate the current price for buy in amount .
this function called every time anyone sends a transaction to this contract
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
solhint disable previous line no empty blocks
stake visibility is public as overriding LP Token Wrapper ' s stake ( ) function
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
This is where all your gas goes , sorry Not sorry , you probably only paid 1 gwei
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Creates amount token to to . Must only be called by the owner .
@ notice Burns amount token from account . Must only be called by the owner .
This famous algorithm is called " exponentiation by squaring " and calculates x ^ n with x as fixed point and n as regular unsigned . It ' s O ( log n ) , instead of O ( n ) for naive repeated multiplication . These facts are why it works : If n is even , then x ^ n ( x ^ 2 ) ^ ( n 2 ) . If n is odd , then x ^ n x x ^ ( n 1 ) , and applying the equation for even x gives x ^ n x ( x ^ 2 ) ^ ( ( n 1 ) 2 ) . Also , EVM division is flooring and floor [ ( n 1 ) 2 ] floor [ n 2 ] .
ref per alt
total pool value
lps per ref
{ ref , alt } > lps
lps > { ref , alt }
ref < > alt TODO : meme ' swap ' ? TODO : mem ' yen ' means to desire . pair with ' pay ' ? or ' ney '
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Initializes contract with initial supply tokens to the creator of the contract
Internal transfer , only can be called by this contract
@ notice Create minted Amount tokens and send it to target @ param target Address to receive the tokens @ param minted Amount the amount of tokens it will receive
@ notice freeze ? Prevent | Allow target from sending & receiving tokens @ param target Address to be frozen @ param freeze either to freeze it or not
@ notice Allow users to buy tokens for new Buy Price eth and sell tokens for new Sell Price eth
@ notice Get the current buy and sell prices
@ notice Buy tokens from contract by sending ether
@ notice Sell amount tokens to contract @ param amount amount of tokens to be sold
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed

Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Total supply



Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Allow spender to withdraw from your account , multiple times , up to the value amount . If this function is called again it overwrites the current allowance with value .
lock team coin
lock minting coin
Total number of tokens currently in the vault
Number of tokens that are still locked
Claim tokens for reserve wallets
Transfer all tokens on this contract back to the owner
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
UTILITY FUNCTIONS Return next higher even multiple for amount parameter ( e . g used to round up to even finneys ) .
Checks if two coordinates are adjacent : xxx xox xxx All x ( x2 , xy2 ) are adjacent to o ( x1 , y1 ) in this ascii image . Adjacency does not wrapp around map edges so if y2 255 and y1 0 then they are not ajacent
Converts ( x , y ) to tile Id xy
Converts tile Id to ( x , y )
Can ' t send funds straight to this contract . Avoid people sending by mistake .
TILE RELATED GETTER FUNCTIONS
Can ' t send funds straight to this contract . Avoid people sending by mistake .
OWNER ONLY FUNCTIONS
TILE RELATED FUNCTIONS This function claims multiple previously unclaimed tiles in a single transaction . The value assigned to each tile is the msg . value divided by the number of tiles claimed . The msg . value is required to be an even multiple of the number of tiles claimed .
Return a pseudo random number between lower and upper bounds given the number of previous blocks it should hash . Random function copied from https : github . com axiomzen eth random blob master contracts Random . sol . Changed sha3 to keccak256 , then modified . Changed random range from uint64 to uint ( uint256 ) .
A user tries to claim a tile that ' s already owned by another user . A battle ensues . A random roll is done with % based on attacking vs defending amounts .
BATTLE VALUE FUNCTIONS
Allow us to transfer out airdropped tokens if we ever receive any
Can ' t send funds straight to this contract . Avoid people sending by mistake .
Lets a tile owner offer a tile for sale .
Allow us to transfer out airdropped tokens if we ever receive any
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
via https : github . com oraclize ethereum api blob master oraclize API 0 . 5 . sol
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
fallback function do not receive ether by default
solhint disable previous line no empty blocks
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice freeze ? Prevent | Allow target from sending & receiving TOKEN preconditions @ param target Address to be frozen @ param freeze To freeze the target account or not
Interface declaration
Interface marker
Update balance and or total supply snapshots before the values are modified . This is implemented in the before Token Transfer hook , which is executed for mint , burn , and transfer operations .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
return a pseudo random number between lower and upper bounds given the number of previous blocks it should hash .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Batch token transfer . Used by contract creator to distribute initial tokens to holders
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Schreibt dem Absender der Transaktion ( T Xfrom ) ihren Wert ( T Xvalue ) als Guthaben zu
Destroy contract and reclaim leftover funds .
Builds a prefixed hash to mimic the behavior of eth sign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .

Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Approves and then calls the receiving contract
low level token purchase function
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Initializes contract with initial supply tokens to the creator of the contract
Send coins
This unnamed function is called whenever someone tries to send ether to it
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ dev Returns true if and only if the function is running in the constructor
solhint disable previous line no empty blocks
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Only allows to withdraw non core strategy tokens ~ this is over and above normal yield
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
The following functions are used by the front end for display purposes . Returns the number of tokens currently held by owner .
Withdraws all dividends held by the caller sending the transaction , updates the requisite global variables , and transfers Ether back to the caller .
Converts the Ether accrued as dividends back into EPY tokens without having to withdraw it first . Saves on gas and potential price spike loss .
Sells your tokens for Ether . This Ether is assigned to the callers entry in the token Balance array , and therefore is shown as a dividend . A second call to withdraw ( ) must be made to invoke the transfer of Ether back to your address .
The slam the button escape hatch . Sells the callers tokens for Ether , then immediately invokes the withdraw ( ) function , sending the resulting Ether to the callers address .
Gatekeeper function to check if the amount of Ether being sent isn ' t either too small or too large . If it passes , goes direct to buy ( ) .
Function that returns the ( dynamic ) price of buying a finney worth of tokens .
Function that returns the ( dynamic ) price of selling a single token .
Calculate the current dividends associated with the caller address . This is the net result of multiplying the number of tokens held by their current value in Ether and subtracting the Ether that has already been paid out .
Version of withdraw that extracts the dividends and sends the Ether to the caller . This is only used in the case when there is no transaction data , and that should be quite rare unless interacting directly with the smart contract .
Internal balance function , used to calculate the dynamic reserve value .
Sell function that takes tokens and converts them into Ether . Also comes with a 10 % fee to discouraging dumping , and means that if someone near the top sells , the fee distributed will be significant .
Dynamic value of Ether in reserve , according to the CRR requirement .
Calculates the number of tokens that can be bought for a given amount of Ether , according to the dynamic reserve and total Supply values ( derived from the buy and sell prices ) .
Semantically similar to get Tokens For Ether , but subtracts the callers balance from the amount of Ether returned for conversion .
Converts a number tokens into an Ether value .
The polynomial R c1 x + c3 x ^ 3 + . . . + c11 x ^ 11 approximates the function log ( 1 + x ) log ( 1 x ) Hence R ( s ) log ( ( 1 + s ) ( 1 s ) ) log ( a )
The polynomial R 2 + c2 x ^ 2 + c4 x ^ 4 + . . . approximates the function x ( exp ( x ) + 1 ) ( exp ( x ) 1 ) Hence exp ( x ) ( R ( x ) + x ) ( R ( x ) x )
The below are safemath implementations of the four arithmetic operators designed to explicitly prevent over and under flows of integer values .
This allows you to buy tokens by sending Ether directly to the smart contract without including any transaction data ( useful for , say , mobile wallet apps ) .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
TESTED
TEST
TESTED
TESTED
TESTED
TESTED
TESTED
TESTED
TESTED
TESTED
TESTED
TESTED
TESTED
TESTED
TESTED
TESTED
TESTED
TESTED
TESTED
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
send ether to the fund collection wallet
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
@ return true if crowdsale event has ended
only admin
be sure to get the joy token ownerships
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
creates all tokens 180 millions this address will hold all tokens all community contrubutions coins will be taken from this address
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Owner can transfer out any accidentally sent ERC20 tokens
Get the airdrop token balance for account token Owner
internal private functions
This is where all your gas goes , sorry Not sorry , you probably only paid 1 gwei
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructors
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Utility function ( because string comparison doesn ' t exist natively in Solidity yet )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
If you send money directly to the contract it gets treated like a donation
Choose a winner and pay him

Number of tokens currently in the Lottery pool
Amount of dividends currently in the Lottery pool
change the Threshold
Admin can call the pay Winner ( ends lottery round & starts a new one ) if it takes too long to reach the threshold
check special functions
@ return true if the transaction can buy tokens
@ return true if crowdsale event has ended
overriding Crowdsale # valid Purchase to add extra cap logic @ return true if investors can buy at the moment
overriding Crowdsale # has Ended to add cap logic @ return true if crowdsale event has ended
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
change wallet
Remove contract
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
solhint disable previous line no empty blocks
Set ownership Locked flag to lock contract owner forever
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructors
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Add an admin with basic privileges . Can be done by any superuser ( or the owner )
Transfer ownership
Remove an admin
The number of tokens that are burned , unissued , or otherwise not in circulation
approve And Call flow for selling entry point
Variant of sell for one step ordering . The seller calls approve And Call on the token which calls receive Approval above , which calls this funciton
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Its a payable function works as a token factory .
allows owner to burn tokens that are not sold in a crowdsale
This function creates Tokens
What is the balance of a particular account ?
Transfer the balance from owner ' s account to another account
Send value amount of tokens from address from to address to The transfer From method is used for a withdraw workflow , allowing contracts to send tokens on your behalf , for example to " deposit " to a contract address and or to charge fees in sub currencies ; the command should fail unless the from account has deliberately authorized the sender of the message via some mechanism ; we propose these standardized AP Is for approval :
Allow spender to withdraw from your account , multiple times , up to the value amount . If this function is called again it overwrites the current allowance with value .
Returns the amount which spender is still allowed to withdraw from owner
solhint disable previous line no empty blocks
multiplication
division
subtraction
addition
Initializes contract with initial supply tokens to the creator of the contract
Send coins
This unnamed function is called whenever someone tries to send ether to it
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Initializes contract with initial supply tokens to the creator of the contract
Send coins
This unnamed function is called whenever someone tries to send ether to it
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
withdraw funds to contract creator
set ad price multiple incase we want to up the price in the future
update and set ad
update the investor
get timestamp when ad ends
get contract balance
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Payments to this contract require a bit of gas . 100k should be enough .
Transfer some funds to the target investment address .
Sets the amount of additional gas allowed to addresses called @ dev This allows transfers to multisigs that use more than 2300 gas in their fallback function .
We can use this function to move unwanted tokens in the contract
This contract is designed to have no balance . However , we include this function to avoid stuck value by some unknown mishap .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor to start the contract in a paused state
Setter for the enforce flag only updatable by the owner
Purchase function allows incoming payments when not paused requires payment code
Allows owner to sweep any ETH somehow trapped in the contract .
Get the number of addresses that have contributed to the sale
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
return true if the crowdsale has raised enough money to be a successful .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
constructor
get user ' s vote history .
stats only function
for pausing contract . contract will be paused on election day . new users can ' t join competition after contract paused .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
helper
helper
helper
get
check
withdraw
payable
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Enables token holders to transfer their tokens freely if true
creates the token to be sold . override this method to have crowdsale of a specific mintable token .
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
@ return true if crowdsale event has ended
overriding Crowdsale # valid Purchase to add extra cap logic @ return true if investors can buy at the moment
overriding Crowdsale # has Ended to add cap logic @ return true if crowdsale event has ended
We ' re overriding the fund forwarding from Crowdsale . In addition to sending the funds , we want to call the Refund Vault deposit function
if crowdsale is unsuccessful , investors can claim refunds here
vault finalization task , called when owner calls finalize ( )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice freeze ? Prevent | Allow target from sending & receiving tokens @ param target Address to be frozen @ param freeze either to freeze it or not
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Interface declaration
Interface marker
@ dev Here the owner can reclaim the tokens from a participant if the token is not released yet . Refund will be handled offband . @ param from Whom address of the participant whose tokens we want to claim
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
@ notice allow to mint tokens
@ notice update allowed Minting flat
@ notice update minting agent
@ notice update state change agent
@ return available tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
State transitions for names : Open > Auction ( start Auction ) Auction > Reveal Reveal > Owned Reveal > Open ( if nobody bid ) Owned > Open ( release Deed or invalidate Name )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
@ return true if crowdsale event has ended
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Initializes the contract and allocates all initial tokens to the owner
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Update verifier ' s data
Make a bet
Increase total fund of a bet
Update odds of a bet
Pause a bet
Reopen a bet
Close a bet and withdraw unused fund
Take a bet
Settle a bet by trusted verifier
Manual withdraw fund from a bet after outcome is set
Payout to maker
Payout to taker
Payout to verifier
External views
Math utilities
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
State transitions for names : Open > Auction ( start Auction ) Auction > Reveal Reveal > Owned Reveal > Open ( if nobody bid ) Owned > Open ( release Deed or invalidate Name )
functions below this line are only Owner set " message of the day "
functions below this line are public
functions below this line are only Owner
public functions
functions below this line are only Ledger
functions below this line are only Token
functions below this line are only Owner
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
1000 MTD Tokens per 1 ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructors
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
function check Total Balance ( uint256 [ ] token Amounts ) public view returns ( bool ) { uint256 total 0 ; for ( uint i 0 ; i < token Amounts . length ; i + + ) { total + token Amounts [ i ] ; } return total > 0 & & noah Token . balance Of ( this ) > total ; }
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
parse Int
parse Int ( parse Float 10 ^ b )
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license Duplicate Solidity ' s ecrecover , but catching the CALL return value
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license
creates the token to be sold . override this method to have crowdsale of a specific mintable token .
fallback function can be used to buy tokens
return token price in cents
function calc Bonus ( uint256 tokens , uint256 ethers ) public constant returns ( uint256 tokens with bonus ) { return tokens ; } string 123 . 45 to 12345 converter
callback for oraclize
price updater
end low level token purchase function
to send tokens for bitcoin bakers and bounty
change owner for child contract
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
total supply of tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Yes there are divs generated on each buy , but not enough to justify transferring to msg . sender gas price makes it not worth it .
Constructor
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Function to access name of token .
Function to access symbol of token .
Function to access decimals of token .
Function to access total supply of tokens .
Function that is called when a user or another contract wants to transfer funds .
Function that is called when a user or another contract wants to transfer funds .
Standard function transfer similar to ERC20 transfer with no data . Added due to backwards compatibility reasons .
assemble the given address bytecode . If bytecode exists then the addr is a contract .
function that is called when transaction target is an address
function that is called when transaction target is a contract
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Last block timestamp getter
Start challenge
Change creator address
Change Crypto Versus wallet address
Vote for candidate
Vote for candidate
Transfer votes to anybody
Check the deadline If success then define a winner and close the challenge
Send a reward if user voted for a winner
Send a reward if user voted for a winner
Send a reward to challenge creator
Send a reward to crypto Versus Wallet
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Owner can claim any tokens that transfered to this contract address
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
ERC20 API Transfers to another address
Transfers from one address to another ( need allowance to be called first )
Approves another address a certain amount of TDT
Gets an address ' s TDT allowance
Gets the TDT balance of any address
Add balance
Sub balance
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Creates amount token to to . Must only be called by the owner .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
fallback function can be used to buy tokens
low level token purchase function
solhint disable previous line no empty blocks
Get the token balance for account token Owner
Transfer the balance from owner ' s account to another account
Total supply
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
This famous algorithm is called " exponentiation by squaring " and calculates x ^ n with x as fixed point and n as regular unsigned . It ' s O ( log n ) , instead of O ( n ) for naive repeated multiplication . These facts are why it works : If n is even , then x ^ n ( x ^ 2 ) ^ ( n 2 ) . If n is odd , then x ^ n x x ^ ( n 1 ) , and applying the equation for even x gives x ^ n x ( x ^ 2 ) ^ ( ( n 1 ) 2 ) . Also , EVM division is flooring and floor [ ( n 1 ) 2 ] floor [ n 2 ] .

Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
solhint disable previous line no empty blocks
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
return the smaller of the two inputs ( a or b )
Constructor
a new ' block ' to be mined
https : en . bitcoin . it wiki Difficulty # What is the formula for difficulty . 3F as of 2017 the bitcoin difficulty was up to 17 zeroes , it was only 8 in the early days readjust the target by 5 percent
this is a recent ethereum block hash , used to prevent pre mining future blocks
the number of zeroes the digest of the Po W solution requires . Auto adjusts
21m coins total reward begins at 50 and is cut in half every reward era ( as tokens are mined )
help debug mining software
help debug mining software
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
public write
public read
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
save some gas by making only one contract call
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Notes : this is limited to a payload length of 253 bytes the payload should be ASCII as many clients will want to display this to the user



Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ dev Converts all incoming ethereum to tokens for the caller , and passes down the referral addy ( if any )
@ dev Converts all of caller ' s dividends to tokens .
@ dev Alias of sell ( ) and withdraw ( ) .
@ dev Withdraws all of the callers earnings .
@ dev Liquifies tokens to ethereum .
@ dev Retrieve the total token supply .
@ dev Retrieve the tokens owned by the caller .
@ dev Retrieve the token balance of any single address .
@ dev Retrieve the dividend balance of any single address .
@ dev Return the sell price of 1 individual token .
@ dev Return the buy price of 1 individual token .
@ dev Function for the frontend to dynamically retrieve the price scaling of buy orders .
@ dev Function for the frontend to dynamically retrieve the price scaling of sell orders .
@ dev Internal function to actually purchase the tokens .
@ dev This is where all your gas goes .
By default wallet owner
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice forward payment to analytics capable contract
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
solhint disable previous line no empty blocks
Approves and then calls the receiving contract
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
solhint disable previous line no empty blocks
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
500 ELG Tokens per 1 ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getter to allow the same blacklist to be used also by other contracts ( including upgraded Tether )
The contract can be initialized with a number of tokens All the tokens are deposited to the owner address @ param balance Initial supply of the contract @ param name Token Name @ param symbol Token symbol @ param decimals Token decimals
Forward ERC20 methods to upgraded contract if this one is deprecated
Forward ERC20 methods to upgraded contract if this one is deprecated
Forward ERC20 methods to upgraded contract if this one is deprecated
Allow checks of balance at time of deprecation
Forward ERC20 methods to upgraded contract if this one is deprecated
Forward ERC20 methods to upgraded contract if this one is deprecated
deprecate current contract in favour of a new one
deprecate current contract if favour of a new one
Issue a new amount of tokens these tokens are deposited into the owner address @ param amount Number of tokens to be issued
Redeem tokens . These tokens are withdrawn from the owner address if the balance must be enough to cover the redeem or the call will fail . @ param amount Number of tokens to be issued
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Initializes contract with initial supply tokens to the creator of the contract
Send coins
Allow another contract to spend some tokens in your behalf
Approve and then communicate the approved contract in a single tx
A contract attempts to get the coins
This unnamed function is called whenever someone tries to send ether to it
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ dev Empty constructor ( for now )
@ dev This will be invoked by the owner , when owner wants to rescue tokens @ param token Token which will we rescue to the owner from the contract
@ dev Interface function , can be overwritten by the superclass @ param token Token which balance we will check and return @ return The amount of tokens ( in smallest denominator ) the contract owns
Interface declaration
@ dev Add a presale participating allocation
@ dev Lock the vault All balances have been loaded in correctly Tokens are transferred on this vault correctly Checks are in place to prevent creating a vault that is locked with incorrect token balances .
@ dev In the case locking failed , then allow the owner to reclaim the tokens on the contract .
@ dev Get the current balance of tokens in the vault @ return uint How many tokens there are currently in vault
@ dev Claim N bought tokens to the investor as the msg sender
@ dev This function is prototyped in Recoverable contract
@ dev Resolve the contract umambigious state
fallback function can be used to buy tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Internal transfer , only can be called by this contract
@ notice Create minted Amount tokens and send it to target @ param target Address to receive the tokens @ param minted Amount the amount of tokens it will receive
@ notice freeze ? Prevent | Allow target from sending & receiving tokens @ param target Address to be frozen @ param freeze either to freeze it or not
@ notice Allow users to buy tokens for new Buy Price eth and sell tokens for new Sell Price eth @ param new Sell Price Price the users can sell to the contract @ param new Buy Price Price users can buy from the contract
@ notice Buy tokens from contract by sending ether
@ notice Sell amount tokens to contract @ param amount amount of tokens to be sold
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Internal Functions
Getters
A WT minter should have option to either mint directly into CUSD via mint CUSD ( ) , or mint the WT via an ordinary mint ( )
Setters A WT whitelisted user should gain ability to convert their WT into CUSD . They can also burn their WT , as a Permissioned Token whitelisted user can do
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
creates presale token
fallback function to buy tokens
send ether to the fund collection wallet
return true if the transaction can buy tokens
allow owner to finalize the presale once the presale is ended
return true if crowdsale event has ended
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
creates the token to be sold . override this method to have crowdsale of a specific mintable token .
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
@ return true if crowdsale event has ended
overriding Crowdsale # valid Purchase to add extra cap logic @ return true if investors can buy at the moment
overriding Crowdsale # has Ended to add cap logic @ return true if crowdsale event has ended

Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Owner Functions
Constant Functions
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
State transitions for names : Open > Auction ( start Auction ) Auction > Reveal Reveal > Owned Reveal > Open ( if nobody bid ) Owned > Open ( release Deed or invalidate Name )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Admin can change APY % ( or reward rate % ) Changing reward rate percent will also affect user ' s pending earnings Be careful while using this function
emergency unstake without caring about pending earnings pending earnings will be lost set to 0 if used emergency unstake
function to allow admin to claim other ERC20 tokens sent to this contract ( by mistake ) Admin cannot transfer out staking tokens from this smart contract Admin can transfer out reward tokens from this address once admin Claimable Time has reached
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Initializes contract with initial supply tokens to the creator of the contract
Send coins
Allow another contract to spend some tokens in your behalf
A contract attempts to get the coins
transfer balance to owner
can accept ether
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
When necessary , adjust minimum FTX to transfer to make the gas worthwhile
Only when necessary such as gas price change , adjust the gas to be reimbursed on every transfer when sender account below minimum
When necessary , adjust the minimum wei required in an account before an reimibusement of fee is triggerred
This unnamed function is called whenever the owner send Ether to fund the gas fees and gas reimbursement
Owner withdrawal for excessive gas fees deposited
return true when the address is in the exception list eg . token distribution contract and private sales addresses
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
@ notice Creates amount token to to . Must only be called by the owner ( Master Chef ) .
Add a new lp to the pool . Can only be called by the owner . XXX DO NOT add the same LP token more than once . Rewards will be messed up if you do .
Update the given pool ' s MINK allocation point . Can only be called by the owner .
Return reward multiplier over the given from to to block .
View function to see pending MIN Ks on frontend .
Update reward variables for all pools . Be careful of gas spending !
Update reward variables of the given pool to be up to date .
Deposit LP tokens to Master Chef for MINK allocation .
Withdraw LP tokens from Master Chef .
Withdraw without caring about rewards . EMERGENCY ONLY .
Safe mink transfer function , just in case if rounding error causes pool to not have enough MIN Ks .
Update dev address by the previous dev .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
solhint disable previous line no empty blocks
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ dev get addresses who has bonus tokens @ return Returns array of addresses .
@ dev distribute bonus tokens to addresses who has bonus tokens @ param bonus List array of addresses who has bonus tokens .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
The one who sent the contract to the blockchain , will automatically become the owner of the contract
Change the owner of the contract
Creates the required number of tokens on the specified account
Burns tokens on the contract , without affecting the token holders and the owner of the contract
Withdraws tokens from the contract if they accidentally or on purpose was it placed there
Withdraws all the ether from the contract to the owner account
The initialization values when the contract has been mined to the blockchain
The function of purchasing tokens
Finish the PRE SALE period , is required the Presale state of the contract
Start the ICO period , is required the waiting For ICO state of the contract
Our tokens
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Mint Tokens
Burn Tokens
Freeze Tokens
Un Freeze Tokens
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Mint Tokens
Freeze Tokens
Un Freeze Tokens
Partner Authorization
Vip Agreement
Accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
magic trade balancing algorithm
Initializes contract with name , symbol and decimals
Send coins
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
The winner is responsible for withdrawing the funds after the button expires
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
| | . | | . . | ) | | | ) | | ( ~ | ~ | | | | ( | | ( ) | | \ . ( use these to interact with contract ) |
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
setup contract addresses .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ dev Fallback function @ notice A payable fallback needs to be implemented in the implementation contract @ notice This is a low level function that doesn ' t return to its internal call site . @ notice It will return to the external caller whatever the implementation returns .
@ dev Returns the current implementation . @ return Address of the current implementation
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
internals
Initializes contract with initial supply tokens to the creator of the contract
Send some of your tokens to a given address
Allow another contract or person to spend some tokens in your behalf
INITIALIZATIONS FUNCTION
FALL BACK FUNCTION TO ALLOW ETHER DONATIONS
CHANGE PARAMETERS METHODS
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Initializes contract with initial supply tokens to the creator of the contract
Send coins
This unnamed function is called whenever someone tries to send ether to it
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Token , fee account and fee
Account can add itself as an App account
App account can add Brand account
Brand account can add Product account
Brand account can permission accounts as markers
Compute item hash from the public key
Markers can add [ product Account , sha3 ( item Public Key ) ]
Check item Public Key has been registered
creates the token to be sold . override this method to have crowdsale of a specific mintable token .
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
@ return true if crowdsale event has ended
overriding Crowdsale # valid Purchase to add extra cap logic @ return true if investors can buy at the moment
overriding Crowdsale # has Ended to add cap logic @ return true if crowdsale event has ended
Returns TU Ts rate per 1 ETH depending on current time
Calculate the Tokens in percent over de tokens generated
Method to mint the team and pool tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ dev Same ERC20 behavior , but reverts if not yet active . @ param spender address The address which will spend the funds . @ param value uint256 The amount of tokens to be spent .
@ dev Same ERC20 behavior , but reverts if not yet active . @ param to address The address to transfer to . @ param value uint256 The amount to be transferred .
Calculate the number of days from 1970 01 01 to year month day using the date conversion algorithm from http : aa . usno . navy . mil faq docs JD Formula . php and subtracting the offset 2440588 so that 1970 01 01 is day 0 days day 32075 + 1461 ( year + 4800 + ( month 14 ) 12 ) 4 + 367 ( month 2 ( month 14 ) 12 12 ) 12 3 ( ( year + 4900 + ( month 14 ) 12 ) 100 ) 4 offset
Calculate year month day from the number of days since 1970 01 01 using the date conversion algorithm from http : aa . usno . navy . mil faq docs JD Formula . php and adding the offset 2440588 so that 1970 01 01 is day 0 int L days + 68569 + offset int N 4 L 146097 L L ( 146097 N + 3 ) 4 year 4000 ( L + 1 ) 1461001 L L 1461 year 4 + 31 month 80 L 2447 dd L 2447 month 80 L month 11 month month + 2 12 L year 100 ( N 49 ) + year + L
1 Monday , 7 Sunday
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
automatically distribute incoming funds to the 4 addresses equally
just in case
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ return true if crowdsale event has ended
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
fallback function can be used to buy tokens
low level token purchase function
low level token purchase function
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Interface declaration
Interface marker
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
release time of freezed account
change restricted release XX account
release Customer ' s account after KYC
drain tokens
constructor
import pre ICO customers from 0x516130856e743090af9d7fd95d6fc94c8743a4e1
BTC external payments
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
address owner ;
These are functions solely created to appease the frontend
End of useless functions Invariants total Payout Supply correct : total Payouts \ sum { addr : address } payouts ( addr ) total Supply \ sum { addr : address } balance Of Old ( addr ) dividends not negative : \ forall addr : address . payouts [ addr ] < earnings Per Share balance Of Old [ addr ] supply reserve correlation : total Supply ~ exp ( LOGC + CRRN CRRD log ( reserve ( ) ) i . e . total Supply C reserve ( ) CRR reserve equals balance minus payouts reserve ( ) this . balance \ sum { addr : address } dividends ( addr )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Transfer value tokens from sender ' s account msg . sender to provided account address to . @ notice This function is disabled during the funding . @ dev Required state : Operational @ param to The address of the tokens recipient @ param value The amount of token to be transferred @ return Whether the transfer was successful or not
Crowdfunding : @ notice Create tokens when funding is active . @ dev Required state : Funding Active @ dev State transition : > Funding Success ( only if cap reached )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Initializes contract with initial supply tokens to the creator of the contract
Send coins
This unnamed function is called whenever someone tries to send ether to it
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Allows the developer or anyone with the password to claim the bounty and shut down everything except withdrawals in emergencies .
Withdraws all ETH deposited or tokens purchased by the user . " internal " means this function is not externally callable .
Automatically withdraws on users ' behalves ( less a 1 % fee on tokens ) .
Allows developer to add ETH to the buy execution bounty .
Buys tokens in the crowdsale and rewards the caller , callable by anyone .
A helper function for the default function , allowing contracts to interact .
Default function . Called when a user sends ETH to the contract .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
standart ERC 20 function
standart ERC 20 function
standart ERC 20 function
standart ERC 20 function
Constructor
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Allowed HIC addresses to methods : set , remove , is
Utility Holders methods : set , remove , is
Presale Holders methods : set , remove , is
Presale Priviledge Addresses methods : set , remove , is
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
call approve ( ZUR Note address , amt ) first
if your transfer to the note to this contract it will swap for the token
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
get decision result address
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Number of locations in the hunt @ dev Useful for testing , since public arrays don ' t expose length @ return length of locations array
@ notice Admin function for updating all locations @ param locations Array of location keys
@ notice Admin function to update the location at index @ dev Throws if index is > locations . length @ param index The index of the location to update @ param location The new location
@ notice Admin function to add a location @ param location The new location
@ notice Admin function to set the price of submitting a location @ param cost The new cost
@ notice Submit a location key XOR ' d with a password for later verification @ notice The message value must be greater than cost @ param encrypt Key A location key encrypted with a user password @ param location Number The index of the location
@ notice Sets the message sender as the winner if they have completed the hunt @ dev Location order should be enforced offline , checks here are to ward against cheaters @ param decrypt Keys Array of user passwords corresponding to original submissions
@ notice Donate the message value to the pot
@ notice Funds sent to the contract are added to the pot
@ notice Reset the hunt if the grace period is over
@ notice Withdrawal function for winner and admin
@ notice Admin failsafe for destroying the contract
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Change Crowdsale Stage . Available Options : Pre ICO , ICO
Change the current rate
What ' s unsold is burnt
State transitions for names : Open > Auction ( start Auction ) Auction > Reveal Reveal > Owned Reveal > Open ( if nobody bid ) Owned > Open ( release Deed or invalidate Name )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
this func need admin role . grant Role and revoke Role need admin role
function Set Roles ( bytes32 role Type , address [ ] calldata addresses , bool [ ] calldata set To ) public { set Roles ( role Type , addresses , set To ) ; } Issue burn


Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Internal transfer , only can be called by this contract
Transfer the balance from token owner ' s account to user account
Get the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed Allow another contract to spend some tokens in your behalf
Don ' t accept ETH
@ notice freeze ? Prevent | Allow target from sending & receiving tokens
Owner can take back any accidentally sent ERC20 tokens from any address
solhint disable code complexity
solhint enable code complexity
log2 for a number that it in [ 1 , 2 )
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
if supply provided is 0 , then default assigned
charge demurring fee for previuos period fee is not applied to owners
fee is not applied to owners
issue new coins
destroy existing coins
kill contract only if all wallets are empty
payments ar reverted back
freeze system ' balance
unfreeze frozen amount everyone can call this function to unfreeze balance
check is release record existed if existed return true , else return false
update release amount for single day according to dividend rule in https : coincool . cool
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
0 stop 1 pre Sale 2 sale 3 Bounty First 4 Olympic games 5 Bounty Second
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ dev Used to mark the smart contract as upgraded , in case there is a serious breaking bug . This method does nothing but keep track of the new contract and emit a message indicating that the new address is set . It ' s up to clients of this contract to update to the new contract address in that case . @ param v2Address new address
callable by other contracts to control economy
function to be called when wanting to add funds to all districts
function to be called when wanting to add funds to a district
allow a Narco to travel between districts travelling is done by taking " exit " > index into the loctions
never call this from a contract @ param loc that we are interested in
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Function to access name of token
Function to access symbol of token
Function to access decimals of token
Function to access total supply of tokens
Constructor @ notice Paypite Contract @ return the transaction address
Standard function transfer similar to ERC20 transfer with no data Added due to backwards compatibility reasons
Check the allowed value for the spender to withdraw from owner @ param owner The address of the owner @ param spender The address of the spender @ return the amount which spender is still allowed to withdraw from owner
@ notice Vimarket Project @ dev Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
5 , 000 SPORTS Tokens per 1 ETH
Owner can transfer out any accidentally sent ERC20 tokens
@ dev Returns true if and only if the function is running in the constructor
Empty internal constructor , to prevent people from mistakenly deploying an instance of this contract , which should be used via inheritance .
Pausing transfers of the token
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Interface declaration
Interface marker
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ dev Returns true if and only if the function is running in the constructor
Empty internal constructor , to prevent people from mistakenly deploying an instance of this contract , which should be used via inheritance .
Custom logic in here for how much the vault allows to be borrowed Sets minimum required on hand to keep small withdrawals cheap
Only allows to earn some extra yield from non core tokens
Used to swap any borrowed reserve over the debt limit to liquidate to ' token '
No rebalance implementation for lower fees and faster swaps
@ dev average dollar value of vault share token
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Change the owner of the token contract
Change the treasury address
Change the percent going to depositors for WETH
Change the staking address
Change the zs Token address
Change the percent going to stakers for WETH
Standard function transfer similar to ERC20 transfer with no data . Added due to backwards compatibility reasons .
Function that is called when a user or another contract wants to transfer funds .
Standard function transfer similar to ERC20 transfer with no data . Added due to backwards compatibility reasons .
function that is called when transaction target is an address
function that is called when transaction target is a contract
solhint disable previous line no empty blocks
stake visibility is public as overriding LP Token Wrapper ' s stake ( ) function
Adapted from https : github . com albertocuestacanada ERC20Permit blob master contracts ERC20Permit . sol
Converts ETH to YFMS and sends new YFMS to the sender
if the soft cap isn ' t met and the presale period ends ( 7 days ) enable users to buy back their ether .
Function to withdraw raised ETH ( staggered withdrawals ) Only the contract owner can call this function
Function to burn remaining YFMS ( sale must be over to call ) Only the contract owner can call this function
Starts the sale Only the contract owner can call this function
Function to query the supply of YFMS in the contract
babylonian method ( https : en . wikipedia . org wiki Methods of computing square roots # Babylonian method )
encode a uint112 as a UQ112x112
divide a UQ112x112 by a uint112 , returning a UQ112x112
called once by the factory at time of deployment
update reserves and , on the first call per block , price accumulators
if fee is on , mint liquidity equivalent to 1 6th of the growth in sqrt ( k )
this low level function should be called from a contract which performs important safety checks
this low level function should be called from a contract which performs important safety checks
this low level function should be called from a contract which performs important safety checks
force balances to match reserves
force reserves to match balances
Controller only function for creating additional rewards from dust
Withdraw partial funds , normally used with a vault withdrawal
Withdraw all funds , normally used when migrating strategies
Add a new lp to the pool . Can only be called by the owner . XXX DO NOT add the same LP token more than once . Rewards will be messed up if you do .
Update the given pool ' s CITY allocation point . Can only be called by the owner .
Return reward multiplier over the given from to to block .
View function to see pending CIT Ys on frontend .
Update reward vairables for all pools . Be careful of gas spending !
Update reward variables of the given pool to be up to date .
Update reward variables of the given pool to be up to date .
Deposit LP tokens to Travel Agency for CITY allocation .
Withdraw LP tokens from Master Chef .
Withdraw without caring about rewards . EMERGENCY ONLY .
Safe city transfer function , just in case if rounding error causes pool to not have enough CIT Ys .
Update dev address by the previous dev .
solhint disable previous line no empty blocks
stake visibility is public as overriding LP Token Wrapper ' s stake ( ) function
@ dev Returns true if and only if the function is running in the constructor
Empty internal constructor , to prevent people from mistakenly deploying an instance of this contract , which should be used via inheritance .
solhint disable previous line no empty blocks
stake visibility is public as overriding LP Token Wrapper ' s stake ( ) function
solhint disable previous line no empty blocks
Sets dev fee divisor 255 0 . 4 % , 100 1 % , 50 2 % , 40 2 . 5 % etc
Sets dev address
Set how long a lottery should run for does not apply any active lotteries , only to the next one
Sets price for each ticket
Processes lottery
In case the contract somehow fails to start new lottery after the previous one ends
In case the contract somehow fails to start new lottery after the previous one ends
Name your wallet
@ notice Creates amount token to to . Must only be called by the owner ( Master Chef ) .
The init function inputs a list of owners and the number of signatures that are required before a transaction is executed . Owners list must be in ascending address order . Required sigs must be greater than 0 and less than or equal to number of owners . Chain ID prevents replay across chains This function can only be run one time
Allow ETH to be sent to this contract
solhint disable previous line no empty blocks
only default token withdrawals allowed
Check if a token can be withdrawn by its id .
This is called by swap Parity Token ( ) to ensure the targeted vault can accept specific ERC 721 tokens .
@ dev Returns true if and only if the function is running in the constructor
Empty internal constructor , to prevent people from mistakenly deploying an instance of this contract , which should be used via inheritance .
solhint disable previous line no empty blocks
be calculated on off chain .
be calculated on off chain .
returns sorted token addresses , used to handle return values from pairs sorted in this order
calculates the CREATE2 address for a pair without making any external calls
fetches and sorts the reserves for a pair
given some amount of an asset and pair reserves , returns an equivalent amount of the other asset
given an input amount of an asset and pair reserves , returns the maximum output amount of the other asset
given an output amount of an asset and pair reserves , returns a required input amount of the other asset
performs chained get Amount Out calculations on any number of pairs
performs chained get Amount In calculations on any number of pairs
Controller only function for creating additional rewards from dust
Withdraw partial funds , normally used with a vault withdrawal
Withdraw all funds , normally used when migrating strategies
Assumed that caller checks against available funds in vault
function balance Of ( address account ) public override returns ( uint256 ) { return balances [ account ] ; }
Emergency drain in case of a bug Adds all funds to owner to refund people Designed to be as simple as possible
Sends all avaibile balances and mints LP tokens Possible ways this could break addressed 1 ) Multiple calls and resetting amounts addressed with boolean 2 ) Failed WETH wrapping unwrapping addressed with checks 3 ) Failure to create LP tokens , addressed with checks 4 ) Unacceptable division errors . Addressed with multiplications by 1e18 5 ) Pair not set impossible since its set in constructor
Possible ways this could break addressed 1 ) No ageement to terms added require 2 ) Adding liquidity after generaion is over added require 3 ) Overflow from uint impossible there isnt that much ETH aviable 4 ) Depositing 0 not an issue it will just add 0 to tally
Possible ways this could break addressed 1 ) Accessing before event is over and resetting eth contributed added require 2 ) No uniswap pair impossible at this moment because of the LP Generation Completed bool 3 ) LP per unit is 0 impossible checked at generation function
Fallback function entry point
@ notice Creates amount token to to . Must only be called by the owner .
Can only stop deposited
UNSAFE : No slippage protection , should not be called directly
@ notice Creates amount token to to . Must only be called by the owner .
Add a new lp to the pool . Can only be called by the owner . XXX DO NOT add the same LP token more than once . Rewards will be messed up if you do .
Update the given pool ' s Zcdw allocation point . Can only be called by the owner .
Return reward multiplier over the given from to to block .
View function to see pending Zcdw on frontend .
Update reward vairables for all pools . Be careful of gas spending !
Update reward variables of the given pool to be up to date .
Deposit LP tokens to Master Chef for zcdw allocation .
Withdraw LP tokens from Master Chef .
Withdraw without caring about rewards . EMERGENCY ONLY .
Safe Zcdw transfer function , just in case if rounding error causes pool to not have enough zcdw .
Update dev address by the previous dev .
@ notice Creates amount token to to . Must only be called by the minter ( Vox Master ) .
solhint disable previous line no empty blocks
solhint disable previous line no empty blocks
Controller only function for creating additional rewards from dust
Withdraw partial funds , normally used with a vault withdrawal
Withdraw all funds , normally used when migrating strategies
solhint disable previous line no empty blocks
Token holders can stake their tokens using this function @ param tokens number of tokens to stake
Owners can send the funds to be distributed to stakers using this function @ param tokens number of tokens to distribute
Private function to register payouts
Stakers can claim their pending rewards using this function
Get the pending rewards of the staker @ param staker the address of the staker
Stakers can un stake the staked tokens using this function @ param tokens the number of tokens to withdraw
Private function to calculate 1 % percentage
Get the number of tokens staked by a staker @ param staker the address of the staker
Get the FAIRY balance of the token holder @ param user the address of the token holder
Internal
solhint disable previous line no empty blocks
Creates a new token type and assings initial Supply to minter
Has a hardcap of 1 % per trading fees distribution in one week .
Function allows liquidity to be migrated , after 10 weeks lockup preventing abuse .
Migrates liquidity to new location , assuming the 3 months lockup has passed preventing abuse .
Withdraw all funds , normally used when migrating strategies
Controller only function for creating additional rewards from dust
Custom logic in here for how much the plates allows to be borrowed Sets minimum required on hand to keep small withdrawals cheap
No rebalance implementation for lower fees and faster swaps
Used to swap any borrowed reserve over the debt limit to liquidate to ' token '
No rebalance implementation for lower fees and faster swaps
Add a new lp to the pool . Can only be called by the owner . XXX DO NOT add the same LP token more than once . Rewards will be messed up if you do .
Update the given pool ' s allocation point . Can only be called by the owner .
Update reward variables for all pools . Be careful of gas spending !
Update reward variables of the given pool to be up to date .
Withdraw without the rewards at any time , still streamed
solhint disable previous line no empty blocks
solhint disable previous line no empty blocks
Buffer to process small withdrawals
Strategies will request funds from controller Controller should have checked that 1 ) Strategy is authorized to pull funds 2 ) Amount requested is below set cap
Controller only function for creating additional rewards from dust
Withdraw partial funds , normally used with a vault withdrawal
Withdraw all funds , normally used when migrating strategies
@ notice Creates amount token to to . Must only be called by the owner ( Master Chef ) .
Controller only function for creating additional rewards from dust
Withdraw partial funds , normally used with a vault withdrawal
Withdraw all funds , normally used when migrating strategies
@ dev Returns true if and only if the function is running in the constructor
@ dev Returns true if and only if the function is running in the constructor
Empty internal constructor , to prevent people from mistakenly deploying an instance of this contract , which should be used via inheritance .
Converts ETH to Tokens 1and sends new Tokens to the sender
Only the contract owner can call this function
Only the contract owner can call this function
Starts the sale Only the contract owner can call this function
Function to query the supply of Tokens in the contract
solhint disable previous line no empty blocks
NOTE : In MYSTIC , proposal Index ! proposal Id
NOTE : requires that delegate key which sent the original proposal cancels , msg . sender proposal . proposer
can only ragequit if the latest proposal you voted YES on has been processed
@ notice Creates amount token to to . Must only be called by Digester .
@ notice transfers Ownership of the Token contract . Called only by the owner ( Digester ) which in turn is owned by the Timelock which is owned by the Governor . Can only be change by proposals .
@ notice Overrides every transfer function to include the registry of Votes .
COPIED FROM https : github . com compound finance compound protocol blob master contracts Governance Comp . sol Copyright 2020 Compound Labs , Inc . Redistribution and use in source and binary forms , with or without modification , are permitted provided that the following conditions are met : 1 . Redistributions of source code must retain the above copyright notice , this list of conditions and the following disclaimer . 2 . Redistributions in binary form must reproduce the above copyright notice , this list of conditions and the following disclaimer in the documentation and or other materials provided with the distribution . 3 . Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission . THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS " AS IS " AND ANY EXPRESS OR IMPLIED WARRANTIES , INCLUDING , BUT NOT LIMITED TO , THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED . IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT , INDIRECT , INCIDENTAL , SPECIAL , EXEMPLARY , OR CONSEQUENTIAL DAMAGES ( INCLUDING , BUT NOT LIMITED TO , PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES ; LOSS OF USE , DATA , OR PROFITS ; OR BUSINESS INTERRUPTION ) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY , WHETHER IN CONTRACT , STRICT LIABILITY , OR TORT ( INCLUDING NEGLIGENCE OR OTHERWISE ) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE , EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE .
solhint disable previous line no empty blocks
solhint disable previous line no empty blocks
Set ownership Locked flag to lock contract owner forever
solhint disable previous line no empty blocks
Borrow exact amount of token output , can have variable USD input up to in Max
Borrow variable amount of token , given exact USD input
Repay variable amount of token given exact output amount in USD
Repay variable amount of USD , given exact amount of token input
UNSAFE : No slippage protection , should not be called directly
UNSAFE : No slippage protection , should not be called directly
How much system liquidity is provided by this asset
6500 blocks in average day decimals YFMB balance of reward Pool blocks 10000 daily Reward ( in hundredths of % ) reward Per Block
% of reward pool to be distributed each day in hundredths of % 150 1 . 50 %
Function that will get balance of a certain stake
Function that returns User ' s pending rewards
Function that updates YFMB ETH LP pool
Function that lets user stake YFMB ETH LP
Function that will allow user to claim rewards
Function that lets user unstake YFMB ETH LP in system
Function that will turn on emergency withdraws
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Custom logic in here for how much the vault allows to be borrowed Sets minimum required on hand to keep small withdrawals cheap
Used to swap any borrowed reserve over the debt limit to liquidate to ' token '
No rebalance implementation for lower fees and faster swaps
Emergency Flow
Block Governance Forver ! ! !
Set Governance Address
Burn Tokens
Wrong Send AGN
Wrong Send Various Tokens
Wrong Send ETH
solhint disable previous line no empty blocks
Custom logic in here for how much the vault allows to be borrowed Sets minimum required on hand to keep small withdrawals cheap
No rebalance implementation for lower fees and faster swaps
@ notice Creates amount token to to . Must only be called by the owner .
Custom logic in here for how much the vault allows to be borrowed Sets minimum required on hand to keep small withdrawals cheap
Used to swap any borrowed reserve over the debt limit to liquidate to ' token '
No rebalance implementation for lower fees and faster swaps
The functions below surve no real purpose . Even if one were to approve another to spend tokens on their behalf , those tokens will still only be transferable when the token contract is not paused .
@ notice Creates amount token to to . Must only be called by the owner ( Master Chef ) .
Add a new lp to the pool . Can only be called by the owner . XXX DO NOT add the same LP token more than once . Rewards will be messed up if you do .
Update the given pool ' s WILDY allocation point . Can only be called by the owner .
Return reward multiplier over the given from to to block .
View function to see pending WILD Ys on frontend .
Update reward variables for all pools . Be careful of gas spending !
Update reward variables of the given pool to be up to date .
Deposit LP tokens to Master Chef for WILDY allocation .
Withdraw LP tokens from Master Chef .
Withdraw without caring about rewards . EMERGENCY ONLY .
Safe wildy transfer function , just in case if rounding error causes pool to not have enough WILD Ys .
@ dev Returns true if and only if the function is running in the constructor
solhint disable previous line no empty blocks
Override functions that change user balance
in case of rounding errors converting between vault tokens and underlying value
Safe RLY transfer function , just in case pool does not have enough RLY due to rounding error
how much are our shares of the underlying vault worth relative to the deposit value ? returns value denominated in vault tokens
transfer accumulated yield to treasury , update total Deposits to ensure available Yield following harvest is 0 , and increase accumulated rally rewards harvest fails if we ' re unable to fund rewards
Internal transfer , only can be called by this contract
@ notice Create minted Amount tokens and send it to target @ param target Address to receive the tokens @ param minted Amount the amount of tokens it will receive
@ notice freeze ? Prevent | Allow target from sending & receiving tokens @ param target Address to be frozen @ param freeze either to freeze it or not
@ notice Allow users to buy tokens for new Buy Price eth and sell tokens for new Sell Price eth @ param new Sell Price Price the users can sell to the contract @ param new Buy Price Price users can buy from the contract
@ notice Buy tokens from contract by sending ether
@ notice Sell amount tokens to contract @ param amount amount of tokens to be sold
solhint disable previous line no empty blocks
Controller only function for creating additional rewards from dust
Withdraw partial funds , normally used with a vault withdrawal
Withdraw all funds , normally used when migrating strategies
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
@ dev Returns true if and only if the function is running in the constructor
Empty internal constructor , to prevent people from mistakenly deploying an instance of this contract , which should be used via inheritance .
Pausing transfers of the token
Transfer recipient recives amount fee
Transfer From recipient recives amount , sender ' s account is debited amount + fee
@ notice Creates amount token to to . Must only be called by the owner ( Master Chef ) .
https : github . com quantstamp sushiswap security review 3 . 4 fixed .
[ Event ] All in one function to play a round NOTE : Use more gas than estimated since random is used .
Contract getters
Internal functions
solhint disable previous line no empty blocks
Be able to receive tokens . This should only ever be called as a result of a user generated deposit call .
Check if a token can be withdrawn by its id .
Deposit any number of tokens into the vault , receiving ERC 20 wrapped tokens in response .
Withdraw any token from the vault .
Attempts to withdraw the tokens with the specified ids . Only the stored tokens will be withdrawn .
ERC20 ERC20 Transfer function
ERC20 Approve function
ERC20 Transfer From function
Internal transfer function which includes the Fee
Admin can change APY % ( or reward rate % ) Changing reward rate percent will also affect user ' s pending earnings Be careful while using this function
emergency unstake without caring about pending earnings pending earnings will be lost set to 0 if used emergency unstake
function to allow admin to claim other ERC20 tokens sent to this contract ( by mistake ) Admin cannot transfer out staking tokens from this smart contract Admin can transfer out reward tokens from this address once admin Claimable Time has reached
Function to start the Game Only the owner can call this function The game can ' t be stopped after this action
Return the value of ' game Started ' to know if the game has started
Get the right amount when playing ( or not ) the game With possible burn and reward
Play , and if winning multiply by 10 if you lose and the sender address is not the liquidity pool then the amount doesn ' t change
Return the random amount to burn based on the amount we want to transfer . Between 1 % and 10 % .
Play the game : 1 % chance of winning and returning true .
solhint disable previous line no empty blocks
@ notice Creates amount token to to . Must only be called by the owner ( Master Chef ) .
solhint disable previous line no empty blocks
stake visibility is public as overriding LP Token Wrapper ' s stake ( ) function
Withdraw all funds , normally used when migrating strategies
Controller only function for creating additional rewards from dust
@ dev Returns true if and only if the function is running in the constructor
@ notice Mints amount token to to . Must only be called by the owner ( Smart Contract ) .
@ notice Burns amount token from from . Delegates reserved . Must only be called by the owner ( Smart Contract ) .
solhint disable previous line no empty blocks
stake visibility is public as overriding LP Token Wrapper ' s stake ( ) function
solhint disable previous line no empty blocks
solhint disable previous line no empty blocks
solhint disable previous line no empty blocks
stake visibility is public as overriding LP Token Wrapper ' s stake ( ) function
@ notice Creates amount token to to . Must only be called by the owner ( Master Chef ) .
solhint disable previous line no empty blocks
stake visibility is public as overriding LP Token Wrapper ' s stake ( ) function
solhint disable previous line no empty blocks
stake visibility is public as overriding LP Token Wrapper ' s stake ( ) function
solhint disable previous line no empty blocks
solhint disable previous line no empty blocks
Custom logic in here for how much the vault allows to be borrowed Sets minimum required on hand to keep small withdrawals cheap
Used to swap any borrowed reserve over the debt limit to liquidate to ' token '
No rebalance implementation for lower fees and faster swaps
@ dev Returns true if and only if the function is running in the constructor
solhint disable previous line no empty blocks
Adapted from https : github . com albertocuestacanada ERC20Permit blob master contracts ERC20Permit . sol
Update dev address by the previous dev .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice This method can be used by the owner to extract mistakenly sent tokens to this contract . @ param token The address of the token contract that you want to recover set to 0 in case you want to extract ether .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Will transfer all ether in this account to the contract owner .
@ notice This function will set the conversion rate . @ dev To set a rate of 100 token eth , you would make the rate 100 hopefully . @ param rate Me The conversion rate in a hole
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Interface declaration
Interface marker
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Initializes contract with initial supply tokens to the creator of the contract
Send coins
This unnamed function is called whenever someone tries to send ether to it
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
return the smaller of the two inputs ( a or b )
Constructor
a new ' block ' to be mined
this is a recent ethereum block hash , used to prevent pre mining future blocks
the number of zeroes the digest of the Po W solution requires . Auto adjusts
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are not allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
solhint disable previous line no empty blocks
Set the migrator contract . Can only be called by the owner .
Migrate lp token to another lp contract . Can be called by anyone . We trust that migrator contract is good .
Return reward multiplier over the given from to to block .
Update reward variables for all pools . Be careful of gas spending !
Update reward variables of the given pool to be up to date .
Deposit LP tokens to C42Liquidity Minter for C42 allocation .
Withdraw LP tokens from C42C42Liquidity Minter .
Withdraw without caring about rewards . EMERGENCY ONLY .
Safe c42 transfer function , just in case if rounding error causes pool to not have enough C42s .
Update dev address by the previous dev .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Return 10 % reduced amount
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
@ notice Creates amount token to to . Must only be called by the minter role .
transfers delegate authority when sending a token . https : medium . com bulldax finance sushiswap delegation double spending bug 5adcc7b3830f
Safe piggy transfer function , just in case if rounding error causes pool to not have enough Piggy Token .
Update funding pool
Update funding pool
Return the pool pending balance .
claim wpc . every can call this function , but transfer token to
@ notice Adds new community logic contract address to Registrar @ param new Address Address of community logic contract to upgrade to
@ return Array of community logic contract addresses
transfer , mint and burn are the only functions where the balances are modified , so it is there that the snapshots are updated . Note that the update happens before the balance change , with the pre modified value . The same is true for the total supply and mint and burn .
overrides
solhint disable previous line no empty blocks
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
Custom logic in here for how much the vault allows to be borrowed Sets minimum required on hand to keep small withdrawals cheap
Used to swap any borrowed reserve over the debt limit to liquidate to ' token '
No rebalance implementation for lower fees and faster swaps
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
fallback to receive ETH into contract and send tokens back based on current exchange rate
internals
solhint disable previous line no empty blocks
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
fallback function can be used to buy tokens
low level token purchase function
@ return true if pre ico crowdsale event has ended
@ return true if ico crowdsale event has ended
creates the token to be sold . override this method to have crowdsale of a specific mintable token .
Override this method to have a way to add business logic to your crowdsale when buying
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
allows transfer of token to new owner
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
This is where all your gas goes , sorry Not sorry , you probably only paid 1 gwei
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
magic trade balancing algorithm
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Transfer value tokens from sender ' s account msg . sender to provided account address to . @ notice This function is disabled during the funding . @ dev Required state : Operational @ param to The address of the tokens recipient @ param value The amount of token to be transferred @ return Whether the transfer was successful or not
Crowdfunding : @ notice Create tokens when funding is active . @ dev Required state : Funding Active @ dev State transition : > Funding Success ( only if cap reached )
constructor
constructor
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Internal transfer , only can be called by this contract
Transfer Eth
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
sets owner , referee , c4c , prizes ( in percent with two decimals ) , deadlines
allow the contract owner to withdraw any token that are not belongs to PLUTUS Community
withdraw Ethereum from Contract address
Burning specific amount of PLUTUS
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
2100000 Bit Cash Platform per 1 ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ return Total to invest in weis .
@ return Total to invest in weis .
@ notice Pauses the contribution if there is any issue
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
modified for decimals from uint8 to uint256
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
NEW OWNER FUNCTIONALITY
TRANSFER
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
returns sorted token addresses , used to handle return values from pairs sorted in this order
calculates the CREATE2 address for a pair without making any external calls
fetches and sorts the reserves for a pair
given some amount of an asset and pair reserves , returns an equivalent amount of the other asset
given an input amount of an asset and pair reserves , returns the maximum output amount of the other asset
given an output amount of an asset and pair reserves , returns a required input amount of the other asset
performs chained get Amount Out calculations on any number of pairs
performs chained get Amount In calculations on any number of pairs
1 time token mint creation function . Tokens are only minted during contract creation , and cannot be done again .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Interface declaration
Interface marker
@ dev Here the owner can reclaim the tokens from a participant if the token is not released yet . Refund will be handled offband . @ param from Whom address of the participant whose tokens we want to claim
Constructor
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
solhint disable previous line no empty blocks
Adapted from https : github . com albertocuestacanada ERC20Permit blob master contracts ERC20Permit . sol
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
after mint
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
parse Int
parse Int ( parse Float 10 ^ b )
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license Duplicate Solidity ' s ecrecover , but catching the CALL return value
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license
@ dev Called by token contract after Approval
number Of Coin Sides ( 2 [ O ] obverse [ 1 ] reverse )
@ dev Called by oraclize to return generated random number . Transaction will fail if gas limit provided earlier was too low @ param myid Flip ID which this callback was targeted to @ param result Generated random number
@ dev Refund bet manually if oraclize callback was not received @ param flip Id Targeted flip
Safety Methods
STATS FLIPS
BETS IN ETHER
BETS IN TOKENS
BETS IN Tokens and ETH
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice This method can be used to extract mistakenly sent tokens to this contract . @ param token The address of the token contract that you want to recover set to 0 in case you want to extract ether . @ param claimer Address that tokens will be send to
@ notice distribute tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
The following functions are used by the front end for display purposes . Returns the number of tokens currently held by owner .
Withdraws all dividends held by the caller sending the transaction , updates the requisite global variables , and transfers Ether back to the caller .
Converts the Ether accrued as dividends back into EPY tokens without having to withdraw it first . Saves on gas and potential price spike loss .
Sells your tokens for Ether . This Ether is assigned to the callers entry in the token Balance array , and therefore is shown as a dividend . A second call to withdraw ( ) must be made to invoke the transfer of Ether back to your address .
The slam the button escape hatch . Sells the callers tokens for Ether , then immediately invokes the withdraw ( ) function , sending the resulting Ether to the callers address .
Gatekeeper function to check if the amount of Ether being sent isn ' t either too small or too large . If it passes , goes direct to buy ( ) .
Function that returns the ( dynamic ) price of buying a finney worth of tokens .
Function that returns the ( dynamic ) price of selling a single token .
Calculate the current dividends associated with the caller address . This is the net result of multiplying the number of tokens held by their current value in Ether and subtracting the Ether that has already been paid out .
Version of withdraw that extracts the dividends and sends the Ether to the caller . This is only used in the case when there is no transaction data , and that should be quite rare unless interacting directly with the smart contract .
Internal balance function , used to calculate the dynamic reserve value .
Sell function that takes tokens and converts them into Ether . Also comes with a 10 % fee to discouraging dumping , and means that if someone near the top sells , the fee distributed will be significant .
Dynamic value of Ether in reserve , according to the CRR requirement .
Calculates the number of tokens that can be bought for a given amount of Ether , according to the dynamic reserve and total Supply values ( derived from the buy and sell prices ) .
Semantically similar to get Tokens For Ether , but subtracts the callers balance from the amount of Ether returned for conversion .
Converts a number tokens into an Ether value .
The polynomial R c1 x + c3 x ^ 3 + . . . + c11 x ^ 11 approximates the function log ( 1 + x ) log ( 1 x ) Hence R ( s ) log ( ( 1 + s ) ( 1 s ) ) log ( a )
The polynomial R 2 + c2 x ^ 2 + c4 x ^ 4 + . . . approximates the function x ( exp ( x ) + 1 ) ( exp ( x ) 1 ) Hence exp ( x ) ( R ( x ) + x ) ( R ( x ) x )
The below are safemath implementations of the four arithmetic operators designed to explicitly prevent over and under flows of integer values .
This allows you to buy tokens by sending Ether directly to the smart contract without including any transaction data ( useful for , say , mobile wallet apps ) .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
data structure to hold information about campaign contributors at initialization , setup the owner
The function without name is the default function that is called whenever anyone sends funds to a contract
checks if the goal or time limit has been reached and ends the campaign
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ dev Courtesy of https : github . com gnosis Multi Sig Wallet blob master contracts Multi Sig Wallet . sol This method allows the pre defined recipient to call other smart contracts .
sets owner , referee , c4c , prizes ( in percent with two decimals ) , deadlines
change owner addr to crowdsale contract to enable minting if successful the crowdsale contract will reset owner to TOKEN OWNER
This famous algorithm is called " exponentiation by squaring " and calculates x ^ n with x as fixed point and n as regular unsigned . It ' s O ( log n ) , instead of O ( n ) for naive repeated multiplication . These facts are why it works : If n is even , then x ^ n ( x ^ 2 ) ^ ( n 2 ) . If n is odd , then x ^ n x x ^ ( n 1 ) , and applying the equation for even x gives x ^ n x ( x ^ 2 ) ^ ( ( n 1 ) 2 ) . Also , EVM division is flooring and floor [ ( n 1 ) 2 ] floor [ n 2 ] .
Initializes contract with initial supply tokens to the creator of the contract
Send coins
This unnamed function is called whenever someone tries to send ether to it
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Can only stop deposited
UNSAFE : No slippage protection , should not be called directly
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Compute the earned discount , topped at 60 %
@ dev Trading limited requires the token sale to have closed
@ dev Trading limited requires the token sale to have closed
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Manage locked
Reclaiming of funds by contributors in case of a failed crowdsale ( it will fail if account is empty after owner Clawback )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice This method can be used to extract mistakenly sent tokens to this contract . @ param token The address of the token contract that you want to recover set to 0 in case you want to extract ether . @ param claimer Address that tokens will be send to
Basic functions @ dev Constructor , crowdsale address can be 0x0
@ dev Setting crowdsale , crowdsale address can be 0x0
@ notice Get virtual balance of the owner of given address . @ param owner address to get virtual balance for the owner @ return virtual balance of the owner of given address
@ notice Get name of this token .
@ notice Get symbol of this token .
@ notice Get number of decimals for this token .
Set sale bonus @ dev Internal function for setting sale bonus
@ dev Override transfer function to set sale bonus
@ dev Override transfer function to set sale bonus
Extra @ notice Notify owners about their virtual balances .
@ notice Kill this smart contract .
reduce sender balance and Token total supply
reduce address balance and Token total supply
increase sender balance and Token total supply
calculate the amount of tokens an address can use
override function using can Transfer on the sender address
transfer tokens from one address to another
@ notice Creates amount token to to . Must only be called by the owner ( Master Chef ) .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
This is the constructor whose code is run only when the contract is created .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
solhint disable previous line no empty blocks
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
transfer Ownership to other address
requires enough gas for execution
Function to handle eth and token transfers tokens are transferred to user ETH are transferred to current owner
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Increase the amount of tokens that an owner allowed to a spender . approve should be called when allowed [ spender ] 0 . To increment allowed value is better to use this function to avoid 2 calls ( and wait until the first transaction is mined ) spender The address which will spend the funds . added Value The amount of tokens to increase the allowance by .
Decrease the amount of tokens that an owner allowed to a spender . approve should be called when allowed [ spender ] 0 . To decrement allowed value is better to use this function to avoid 2 calls ( and wait until the first transaction is mined ) spender The address which will spend the funds . subtracted Value The amount of tokens to decrease the allowance by .
Change the ETH to IO rate
to The address that will receive the minted tokens . amount The amount of tokens to mint . A boolean that indicates if the operation was successful .
function to stop the ICO
function to resume ICO
standard ERC 20 function
standard ERC 20 function
standard ERC 20 function
standard ERC 20 function
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ dev Returns true if and only if the function is running in the constructor
solhint disable previous line no empty blocks
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Adapted from https : github . com albertocuestacanada ERC20Permit blob master contracts ERC20Permit . sol
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
NOTE : In MSTX , proposal Index ! proposal Id
NOTE : requires that delegate key which sent the original proposal cancels , msg . sender proposal . proposer
can only ragequit if the latest proposal you voted YES on has been processed
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
ERC 20 Compatibility
ERC 721 Token Ownership
Public Functionality
Admin Functionality
Internal Functionality
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice impl token Recipient interface
@ notice withdraw CZR @ param addr address to withdraw @ param index deposit index
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Interface declaration
Interface marker
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
creates the token to be sold . override this method to have crowdsale of a specific mintable token .
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
fallback function can be used to buy tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
ERC721Enumerable @ notice Count NF Ts tracked by this contract @ return A count of valid NF Ts tracked by this contract , where each one of them has an assigned and queryable owner not equal to the zero address
@ notice Enumerate valid NF Ts @ dev Throws if index > total Supply ( ) . @ param index A counter less than total Supply ( ) @ return The token identifier for the index th NFT , ( sort order not specified )
@ notice Enumerate NF Ts assigned to an owner @ dev Throws if index > balance Of ( owner ) or if owner is the zero address , representing invalid NF Ts . @ param owner An address where we are interested in NF Ts owned by them @ param index A counter less than balance Of ( owner ) @ return The token identifier for the index th NFT assigned to owner , ( sort order not specified )
ERC721Metadata @ notice A descriptive name for a collection of NF Ts in this contract
@ notice An abbreviated name for NF Ts in this contract
@ notice A distinct Uniform Resource Identifier ( URI ) for a given asset . @ dev Throws if token Id is not a valid NFT . UR Is are defined in RFC 3986 . The URI may point to a JSON file that conforms to the " ERC721 Metadata JSON Schema " .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Interface declaration
Interface marker
@ dev Here the owner can reclaim the tokens from a participant if the token is not released yet . Refund will be handled offband . @ param from Whom address of the participant whose tokens we want to claim
Batch token transfer . Used by contract creator to distribute initial tokens to holders
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Change the address for the specified role . Available to any wallet owner except the observer . Available to the manager until the round is initialized . The Observer ' s wallet or his own manager can change at any time . @ Do I have to use the function no @ When it is possible to call depend . . . @ When it is launched automatically @ Who can call the function staff ( all 7 + roles )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Initializes contract with initial supply tokens to the creator of the contract
Send coins
Allows the developer to shut down everything except withdrawals in emergencies .
Withdraws all ETH deposited or ZBR purchased by the sender .
Allow developer to add ETH to the buy execution bounty .
Buys tokens in the crowdsale and rewards the caller , callable by anyone .
Send fund when ico end
Kill contract
A helper function for the default function , allowing contracts to interact .
Default function . Called when a user sends ETH to the contract .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
fallback function can be used to buy tokens
low level token purchase function
Interface declaration .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
add contract to list of contracts that can mint mokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Add Life event , either partner can update
Update partner 1 vows only once
Update partner 2 vows only once
Update Marriage status only if both partners have previously voted to update the prenup
Partners can sign the contract
Function to vote to allow for updating marital status , both partners must vote to allow update
Function to vote to allow for updating prenup , both partners must vote true to allow update
Update couple Image hash , either partner can update
Update marriage licence image hash , either partner can update
Update prenup text , but only if both partners have previously agreed to update the prenup
Update partner 1 will , only partner 1 can update
Update partner 2 will , only partner 2 can update
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Interface declaration
Interface marker
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Buy tokens from contract by sending ether
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
fallback function can be used to buy tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
calculates the CREATE2 address for a pair without making any external calls
returns sorted token addresses , used to handle return values from pairs sorted in this order
WTF method ! ! !
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Initializes contract with initial supply tokens to the creator of the contract
Send coins
This unnamed function is called whenever someone tries to send ether to it
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Default constructor
Send the ether to current address The fall back function to which the ether is sent
With Draw all the ether only owner can withdraw
With Draw a specific amount in wei @ param amount the amount to be withdrawn
Check the current balance of the contract @ returns balance returns the current balance of wallet
Initializes contract with initial supply tokens to the creator of the contract
Send coins
This unnamed function is called whenever someone tries to send ether to it
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Initializes contract with initial supply tokens to the creator of the contract
Send coins
This unnamed function is called whenever someone tries to send ether to it
called by the owner on emergency , triggers stopped state
called by the owner on end of emergency , returns to normal state
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
This is where all your gas goes , sorry Not sorry , you probably only paid 1 gwei
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
called by the owner on emergency , triggers stopped state
called by the owner on end of emergency , returns to normal state
withdraw accumulated balance , called by payee
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Interface declaration
create contract with 3 owners
dont allow to waste money function ( ) { the creators are like Satoshi Bitcoin is important , but Ethereum is better : ) throw ; } buy add for charity fundation if just ethers was sent
buy add
distribute earnings to participants
check if contract is outdate which means there was no any transacions since ( now outdate Duration ) seconds and its going to reset
find and set referral Id
send fees to all contract owners
change single ownership
set official contract front end website
add new charity foundation to the list
clear charity foundations list , to make new one
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
solhint disable previous line no empty blocks
parse Int
parse Int ( parse Float 10 ^ b )
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license Duplicate Solidity ' s ecrecover , but catching the CALL return value
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license
Init Lottery .
Anyone can call this .
the callback function is called by Oraclize when the result is ready the oraclize random DS proof Verify modifier prevents an invalid proof to execute this function code : the proof validity is fully verified on chain
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
No rebalance implementation for lower fees and faster swaps
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
State transitions for names : Open > Auction ( start Auction ) Auction > Reveal Reveal > Owned Reveal > Open ( if nobody bid ) Owned > Open ( release Deed or invalidate Name )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
parse Int
parse Int ( parse Float 10 ^ b )
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license Duplicate Solidity ' s ecrecover , but catching the CALL return value
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license
Transfer the balance from owner ' s account to another account
Allow spender to withdraw from your account , multiple times , up to the value amount . If this function is called again it overwrites the current allowance with value .
Below function will convert string to integer removing decimal
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
for Emergency Hard stop of the sale
@ return true if all the tiers has been ended
Fallback function used to buytokens
Add a user to the whitelist
Remove an user from the whitelist
Add many users in one go to the whitelist
Method to check whether a user is there in the whitelist or not
method to check how many tokens are left
method to check the user balance
method to check how many tokens have been sold out till now out of 450 . 5 Million
Allowing owner to transfer the money rasied to the wallet address
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
creates the token to be sold . override this method to have crowdsale of a specific mintable token .
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
@ return true if crowdsale event has ended
overriding Crowdsale # valid Purchase to add extra cap logic @ return true if investors can buy at the moment
overriding Crowdsale # has Ended to add cap logic @ return true if crowdsale event has ended
We ' re overriding the fund forwarding from Crowdsale . In addition to sending the funds , we want to call the Refund Vault deposit function
if crowdsale is unsuccessful , investors can claim refunds here
vault finalization task , called when owner calls finalize ( )
Float [ fixed point ] Operations
Constructor No validation is needed here as it is simply a librarty function for organizing data
" public " functions
Private functions
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Sending ether directly to the contract invokes buy ( ) and assigns tokens to the sender
Buy token by sending ether here You can also send the ether directly to the contract address
Functions for the contract owner
Some percentage of the tokens is already reserved for marketing
Some useful getters ( although you can just query the public variables )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
As a function to allow harness overrides
abs ( price anchor Price ) anchor Price
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Interface declaration
Interface marker
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
fallback function can be used to buy tokens
low level token purchase function
@ return true if the transaction can buy tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
constructor @ param crowdsale End Date the date the crowdsale ends
update the allocation storage remaining balances
the total number of allocations
the amount allocated for beneficiary at index
reward the beneficiary at index
add a new allocation to the lockup
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
solhint disable previous line no empty blocks
Approves and then calls the receiving contract
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
constructor is given number of sigs required to do protected " multi Owner " transactions
called by the owner to pause , triggers stopped state
called by the owner to unpause , returns to normal state
gets called when no other function matches
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ return Amount in the dev fund not locked up by project or task stake
@ return Amount locked up in escrow
@ notice Updates the escrow values for a new task
@ notice Subtracts the tasks escrow and sets tasks escrow balance to 0
@ notice Pays task completer and updates escrow balances
@ notice updates the escrow values along with the project payee for a new project
@ notice Subtracts tasks escrow and sets tasks escrow balance to 0
@ notice Pays out upon project completion @ notice Updates escrow balances
@ notice Stake code ( in community tokens )
@ notice Unstakes user from community and sends funds back to user @ notice Checks lockup period and balance before unstaking
@ notice Checks that the user is fully staked
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
solhint disable previous line no empty blocks
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Controller only function for creating additional rewards from dust
Withdraw partial funds , normally used with a vault withdrawal
Withdraw all funds , normally used when migrating strategies
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
for mint tokens to USD investor
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Initializes contract with initial supply tokens to the creator of the contract Internal transfer , only can be called by this contract
@ notice freeze ? Prevent | Allow target from sending & receiving tokens @ param target Address to be frozen @ param freeze either to freeze it or not
@ notice Allow users to buy tokens for new Buy Price eth and sell tokens for new Sell Price eth @ param new Sell Price Price the users can sell to the contract @ param new Buy Price Price users can buy from the contract
@ notice Buy tokens from contract by sending ether
@ notice Sell amount tokens to contract @ param amount amount of tokens to be sold
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Get the token balance for account token Owner
Transfer the balance from owner ' s account to another account
Total supply
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
creates the token to be sold . override this method to have crowdsale of a specific mintable token .
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
@ return true if crowdsale event has ended
overriding Crowdsale # valid Purchase to add extra cap logic @ return true if investors can buy at the moment
overriding Crowdsale # has Ended to add cap logic @ return true if crowdsale event has ended
Public functions
Public functions
Internal functions
Private functions can ' t override valid Purchase because need to pass additional values
@ return true if now is within the bounds of the whitelist period
can ' t override valid Purchase because need to pass additional values
@ return true if now is within the bounds of the open whitelist period
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Creates amount token to to . Must only be called by the owner ( Bartender ) .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
This is a general safty function that allows the owner to do a lot of things in the unlikely event that something goes wrong dst is the contract being called making this like a 1 1 multisig
This is the function that makes the list of transfers and various checks around that list , it is a little tricky , the data input is structured with the amount and the ( receiving ) addr combined as one long number and then this number is deconstructed in this function to save gas and reduce the number of 0 ' s that are needed to be stored on the blockchain
This function actually makes the sends and tracks the amount of gas used if it takes more gas than was sent with the transaction then this function will need to be called a few times until
Helper functions
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Initializes contract with initial supply tokens to the creator of the contract
Send coins
This unnamed function is called whenever someone tries to send ether to it
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
solhint disable previous line no empty blocks
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
solhint disable previous line no empty blocks
stake visibility is public as overriding LP Token Wrapper ' s stake ( ) function
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
parse Int
parse Int ( parse Float 10 ^ b )
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license Duplicate Solidity ' s ecrecover , but catching the CALL return value
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license
function that is called when a user or another contract wants to transfer funds
function that is called when transaction target is a contract
assemble the given address bytecode . If bytecode exists then the addr is a contract .
if crowdsale is unsuccessful , investors can claim refunds here
vault finalization task , called when owner calls finalize ( )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
that function could be called only ONCE ! ! ! After that nothing could be reverted ! ! !
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Creates amount token to to . Must only be called by the owner ( ) .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
called by the owner on emergency , triggers stopped state
called by the owner on end of emergency , returns to normal state
@ dev Constructor
Fallback method will buyout tokens
@ dev Create new tokens and allocate them to an address . Only callably by a crowdsale contract @ param receiver Address of receiver @ param amount Number of tokens to issue .
@ dev Set the contract that can call release and make the token transferable . @ param crowdsale Agent crowdsale contract address
@ dev One way function to release the tokens to the wild . Can be called only from the release agent that is the final ICO contract . It is only called if the crowdsale has been success ( first milestone reached ) .
@ dev Tranfer tokens to address @ param to dest address @ param value tokens amount @ return transfer result
@ dev Tranfer tokens from one address to other @ param from source address @ param to dest address @ param value tokens amount @ return transfer result
@ dev Tokens balance @ param owner holder address @ return balance amount
@ dev Approve transfer @ param spender holder address @ param value tokens amount @ return result
@ dev Token allowance @ param owner holder address @ param spender spender address @ return remain amount
@ dev Constructor @ param token Solar Dao token address @ param multisig Wallet team wallet @ param pre Invest Start pre ICO start date @ param start token ICO start date @ param end token ICO end date
@ dev Get the current milestone or bail out if we are not in the milestone periods . @ return Milestone current bonus milestone
@ dev Make an investment . Crowdsale must be running for one to invest . @ param receiver The Ethereum address who receives the tokens
@ dev Allow anonymous contributions to this crowdsale . @ param receiver The Ethereum address who receives the tokens
@ dev The basic entry point to participate the crowdsale process .
@ dev Finalize a succcesful crowdsale .
@ dev Finalize a succcesful crowdsale .
@ dev Method for setting USD to Ether rate from Poloniex @ param value USD amout in cents for 1 Ether @ param time timestamp
@ dev Method set exchange rate agent @ param new Agent new agent
@ dev Method set data from migrated contract @ param tokens Sold tokens sold @ param wei Raised wei raised @ param investor Count investor count
@ dev Allow crowdsale owner to close early or extend the crowdsale . @ param time timestamp
@ dev Allow load refunds back on the contract for the refunding .
@ dev Investors can claim refund .
@ dev Minimum goal was reached @ return true if the crowdsale has raised enough money to not initiate the refunding
@ dev Check if the ICO goal was reached . @ return true if the crowdsale has raised enough money to be a success
@ dev Crowdfund state machine management . @ return State current state
@ dev Calculating tokens count @ param wei Amount invested @ return tokens amount
@ dev Check if the pre ICO goal was reached . @ return true if the pre ICO has raised enough money to be a success
@ dev Converts wei value into USD cents according to current exchange rate @ param wei Value wei value to convert @ return USD cents equivalent of the wei value
@ dev Dynamically create tokens and assign them to the investor . @ param receiver investor address @ param token Amount The amount of tokens we try to give to the investor in the current transaction
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
address owner ;
These are functions solely created to appease the frontend
End of useless functions Invariants total Payout Supply correct : total Payouts \ sum { addr : address } payouts ( addr ) total Supply \ sum { addr : address } balance Of Old ( addr ) dividends not negative : \ forall addr : address . payouts [ addr ] < earnings Per Share balance Of Old [ addr ] supply reserve correlation : total Supply ~ exp ( LOGC + CRRN CRRD log ( reserve ( ) ) i . e . total Supply C reserve ( ) CRR reserve equals balance minus payouts reserve ( ) this . balance \ sum { addr : address } dividends ( addr )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
return the smaller of the two inputs ( a or b )
a new ' block ' to be mined
https : en . bitcoin . it wiki Difficulty # What is the formula for difficulty . 3F as of 2017 the bitcoin difficulty was up to 17 zeroes , it was only 8 in the early days readjust the target by 5 percent
this is a recent ethereum block hash , used to prevent pre mining future blocks
the number of zeroes the digest of the Po W solution requires . Auto adjusts
100m coins total reward begins at 250 and is cut in half every reward era ( as tokens are mined )
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
help debug mining software
help debug mining software
Owner can transfer out any accidentally sent ERC20 tokens ( just in case )
overloaded openzepplin method to add when Owner Or Not Paused modifier
overloaded openzepplin method to add when Owner Or Not Paused modifier
overloaded openzepplin method to add when Owner Or Not Paused modifier
overloaded openzepplin method to add when Owner Or Not Paused modifier
overloaded openzepplin method to add when Owner Or Not Paused modifier
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
do not allow deposits
If accidentally tokens are transferred to this contract . They can be withdrawn by the following interface .
ETH cannot get locked in this contract . If it does , this can be used to withdraw the locked ether .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Splits the funds into 2 addresses
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
check is now ICO
fallback function ( when investor send ether to contract )
function buy Tokens
convert ether to tokens ( without decimals )
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Owner
Voting
Util
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
parse Int
parse Int ( parse Float 10 ^ b )
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license Duplicate Solidity ' s ecrecover , but catching the CALL return value
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license
see private method build Team Mapping , build Bool Mapping first element in the nested array represents the team user betted on : ( team One > 0 , team Two > 1 , draw > 2 ) second element in nested array is the bet amount third element in nested array represents withdrawal status : ( false > 0 , true > 1 ) additionally ( applies to first level elements ) : first array holds player data for team One second array holds player data for team Two third array holds pleyer data for draw
Internal transfer , only can be called by this contract
@ notice Create minted Amount tokens and send it to target @ param target Address to receive the tokens @ param minted Amount the amount of tokens it will receive
@ notice freeze ? Prevent | Allow target from sending & receiving tokens @ param target Address to be frozen @ param freeze either to freeze it or not
@ notice Allow users to buy tokens for new Buy Price eth and sell tokens for new Sell Price eth @ param new Sell Price Price the users can sell to the contract @ param new Buy Price Price users can buy from the contract
@ notice Buy tokens from contract by sending ether
@ notice Sell amount tokens to contract @ param amount amount of tokens to be sold
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
creates the token to be sold . override this method to have crowdsale of a specific mintable token .
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
@ return true if crowdsale event has ended
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
solhint disable previous line no empty blocks
Add a number to another number , checking for overflows
Subtract a number from another number , checking for underflows
below function can be used when you want to send every recipeint with different number of tokens
this function can be used when you want to send same number of tokens to all the recipients
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
make private
make private
constructur . initialize the contract with a minimum bet and a signer address .
determines if two cards have the same color
the fallback function can be used to send ether to increase the casino bankroll
allows the owner to withdraw funds
allows the owner to change the signer address
allows the owner to change the minimum bet
allows the owner to change the mximum
creates the token to be sold . override this method to have crowdsale of a specific mintable token .
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
@ return true if crowdsale event has ended
low level token purchase function
@ return true if the transaction can buy tokens
We ' re overriding the fund forwarding from Crowdsale . In addition to sending the funds , we want to call the Refund Vault deposit function
if crowdsale is unsuccessful , investors can claim refunds here
vault finalization task , called when owner calls finalize ( )
overriding Crowdsale # has Ended to add cap logic @ return true if crowdsale event has ended
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Transfer Updates
Private Function
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Sall a token from a contract
set rate
lock Account
set Is Admin
Owner can transfer out any accidentally sent ERC20 tokens
set lock position
get lock Position info
set lock position
get lock Position1 info
batch Transfer
@ dev Returns true if and only if the function is running in the constructor
solhint disable previous line no empty blocks
Override functions that change user balance
function registered Pool Tokens ( ) public view returns ( address [ ] memory ) ; function user Rewards ( address user , address protocol , address [ ] calldata reward Tokens ) external view returns ( uint256 [ ] memory ) { uint256 [ ] memory amounts new uint256 [ ] ( reward Tokens . length ) ; Reward Balance storage rb reward Balances [ user ] ; require ( rb . next Distribution reward Distributions . length , " Reward Distributions : rewards not calculated " ) ; for ( uint256 i 0 ; i < amounts . length ; i + + ) { address rt reward Tokens [ i ] ; amounts [ i ] rb . rewards By Protocol [ protocol ] . amounts [ rt ] ; } return amounts ; } function reward Balance Of ( address user , address pool Token , address reward Token ) public view returns ( uint256 ) { Reward Balance storage rb reward Balances [ user ] ; User Protocol Rewards storage upr rb . rewards By Protocol [ pool Token ] ; uint256 balance upr . amounts [ reward Token ] ; uint256 next rb . next Distribution ; while ( next < reward Distributions . length ) { Reward Token Distribution storage d reward Distributions [ next ] ; next + + ; uint256 sh rb . shares [ d . pool Token ] ; if ( sh 0 | | pool Token ! d . pool Token ) continue ; uint256 distr Amount d . amounts [ reward Token ] ; balance balance . add ( distr Amount . mul ( sh ) . div ( d . total Shares ) ) ; } return balance ; }
function set User Cap ( address protocol , address user , uint256 cap ) public only Capper { protocols [ protocol ] . user Cap [ user ] cap ; emit User Cap Changed ( protocol , user , cap ) ; } function set User Cap ( address protocol , address [ ] calldata users , uint256 [ ] calldata caps ) external only Capper { require ( users . length caps . length , " Savings Module : arrays length not match " ) ; for ( uint256 i 0 ; i < users . length ; i + + ) { protocols [ protocol ] . user Cap [ users [ i ] ] caps [ i ] ; emit User Cap Changed ( protocol , users [ i ] , caps [ i ] ) ; } }
prices : list of number of tokens ( plus with decimals ) to be bough by 1 ether blocks : list of blocks when the price changes . Must be sorted List of prices and list of blocks must have the same length Maximum number of phases is 10
Returns the price for a specific block
Checks if an uint array is sorted
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Owner related
Auditors
Audits and Rewards
User Actions
Getters
return a list of ids that auditor has staked in
return a list of auditors that participated in this audit
ERC20
Functions Constructor
@ notice Transfer value tokens from sender ' s account msg . sender to provided account address to . @ notice This function is disabled during the funding . @ dev Required state : Operational @ param to The address of the tokens recipient @ param value The amount of token to be transferred @ return Whether the transfer was successful or not
Crowdfunding : @ notice Create tokens when funding is active . @ dev Required state : Funding Active @ dev State transition : > Funding Success ( only if cap reached )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Reserve some percentage of HOLY token distribution ( e . g . initially , 10 % of tokens are reserved for future pools to be added )
Add a new lp to the pool . Can only be called by the owner . XXX DO NOT add the same LP token more than once . Rewards will be messed up if you do .
Update the given pool ' s HOLY allocation point . Can only be called by the owner .
View function to see pending HOL Ys on frontend .
Update reward vairables for all pools . Be careful of gas spending !
Update reward variables of the given pool to be up to date .
Deposit LP tokens to Holy Knight for HOLY allocation .
Withdraw LP tokens from Holy Knight .
Withdraw LP tokens without caring about rewards . EMERGENCY ONLY .
Safe holyheld token transfer function , just in case if rounding error causes pool to not have enough HOL Ys .
Update dev address by the previous dev .
Update treasury address by the previous treasury .
Send yield on an LP token to the treasury
Send yield amount realized from holding LP tokens to the treasury
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Create a new instance of this fund with links to other contracts that are required .
Transfer funds between two addresses that are not the current msg . sender this requires approval to have been set separately and follows standard ERC20 guidelines
Adds an approval for the specified account to spend money of the message sender up to the defined limit
Gets the current allowance that has been approved for the specified spender of the owner address
Gets the balance of a specified account
Transfer the balance from owner ' s account to another account
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Now handle deposits into Aave
Change the owner of the token contract
Used to change the fee rates
Change the treasury address
Batch token transfer . Used by contract creator to distribute initial tokens to holders
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
function that is called when transaction target is a contract Only used for recycling NS Ps
Rember 18 zeros for decimals of eth ( wei ) , and 0 zeros for NSP . So add 18 zeros with 10 18
this will burn NS Ps stuck in contracts
stop IGO
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
internals
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ dev Empty constructor ( for now )
@ dev This will be invoked by the owner , when owner wants to rescue tokens @ param token Token which will we rescue to the owner from the contract
@ dev Interface function , can be overwritten by the superclass @ param token Token which balance we will check and return @ return The amount of tokens ( in smallest denominator ) the contract owns
Interface declaration
Interface marker
@ dev Here the owner can reclaim the tokens from a participant if the token is not released yet . Refund will be handled offband . @ param from Whom address of the participant whose tokens we want to claim
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Open support ticket to prove transfer mistake to unusable address . Not to be used to dispute transfers . Only for trapped tokens .
Do not transfer ether to this contract .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Transfer recipient recives amount fee
Transfer From recipient recives amount , sender ' s account is debited amount + fee
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
magic trade balancing algorithm
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Initializes contract with initial supply tokens to the creator of the contract
Send coins
This unnamed function is called whenever someone tries to send ether to it
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
solhint disable previous line no empty blocks
stake visibility is public as overriding LP Token Wrapper ' s stake ( ) function
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
State transitions for names : Open > Auction ( start Auction ) Auction > Reveal Reveal > Owned Reveal > Open ( if nobody bid ) Owned > Open ( release Deed or invalidate Name )
creates the token to be sold . override this method to have crowdsale of a specific mintable token .
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens removed view to be overriden
@ return true if crowdsale event has ended
We ' re overriding the fund forwarding from Crowdsale . In addition to sending the funds , we want to call the Refund Vault deposit function
if crowdsale is unsuccessful , investors can claim refunds here
vault finalization task , called when owner calls finalize ( )
overriding Crowdsale # valid Purchase to add extra cap logic @ return true if investors can buy at the moment removed view to be overriden
overriding Crowdsale # has Ended to add cap logic @ return true if crowdsale event has ended
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ dev Withdraw tokens only after crowdsale ends .
Calculate the number of days from 1970 01 01 to year month day using the date conversion algorithm from http : aa . usno . navy . mil faq docs JD Formula . php and subtracting the offset 2440588 so that 1970 01 01 is day 0 days day 32075 + 1461 ( year + 4800 + ( month 14 ) 12 ) 4 + 367 ( month 2 ( month 14 ) 12 12 ) 12 3 ( ( year + 4900 + ( month 14 ) 12 ) 100 ) 4 offset
Calculate year month day from the number of days since 1970 01 01 using the date conversion algorithm from http : aa . usno . navy . mil faq docs JD Formula . php and adding the offset 2440588 so that 1970 01 01 is day 0 int L days + 68569 + offset int N 4 L 146097 L L ( 146097 N + 3 ) 4 year 4000 ( L + 1 ) 1461001 L L 1461 year 4 + 31 month 80 L 2447 dd L 2447 month 80 L month 11 month month + 2 12 L year 100 ( N 49 ) + year + L
1 Monday , 7 Sunday
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
accept ether
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
10 , 000 BST Tokens per 1 ETH
Owner can transfer out any accidentally sent ERC20 tokens
State transitions for names : Open > Auction ( start Auction ) Auction > Reveal Reveal > Owned Reveal > Open ( if nobody bid ) Owned > Open ( release Deed or invalidate Name )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Get the token balance for account token Owner CKN
Get the referral balance for account token Owner ETH
ERC20 Basic Function : Transfer CKN Token
Buy Chicken Park Coin , 1 % for me , 1 % for chicken market , 19 . 6 ~ 0 % for dividents
Sell Chicken Park Coin , 1 % for me , 1 % for chicken market , 19 . 6 ~ 0 % for dividents
Withdraw your ETH dividents from Referral & CKN Dividents
ERC223 Transfer CKN Token With Data Function
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Interface declaration
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
transfer to and lock it
transfer to and lock it
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
adapted from https : medium . com @ promentol lottery smart contract can we generate random numbers in solidity 4f586a152b27
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Interface declaration
Interface marker
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
solhint disable previous line no empty blocks
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
State transitions for names : Open > Auction ( start Auction ) Auction > Reveal Reveal > Owned Reveal > Open ( if nobody bid ) Owned > Open ( release Deed or invalidate Name )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Interface marker
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
helper methods for siphoning
private methods
helper methods for siphoning
private methods
to be called by backend
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
parse Int
parse Int ( parse Float 10 ^ b )

set the probabilities of the results ( absolute frequencies out of 1 . 000 . 000 spins )
set the prizes of the results ( shifted by 2 digits > 375 means 3 . 75 )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
To test with JS and compare with actual encoder . Maintaining for reference . t function ( ) { return IEVM Script Executor . at ( ' 0x4bcdd59d6c77774ee7317fc1095f69ec84421e49 ' ) . contract . exec Script . get Data ( . . . [ ] . slice . call ( arguments ) ) . slice ( 10 ) . match ( . { 1 , 64 } g ) } run function ( ) { return Script Helpers . new ( ) . then ( sh > { sh . abi Encode . call ( . . . [ ] . slice . call ( arguments ) ) . then ( a > console . log ( a . slice ( 2 ) . match ( . { 1 , 64 } g ) ) ) } ) } This is truly not beautiful but lets no daydream to the day solidity gets reflection features
TODO : Internal
@ dev Courtesy of https : github . com gnosis Multi Sig Wallet blob master contracts Multi Sig Wallet . sol This method allows the pre defined recipient to call other smart contracts .
Fallback
For Investors
For Players
For Owner
Functions Constructor
fallback function
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
freeze value token to un Frozen Time
unfreeze frozen amount
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Just in case , owner wants to transfer Tokens from contract to owner address
Automatocally forwards ether from smart contract to owner address
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Internal transfer , only can be called by this contract
@ notice Create minted Amount tokens and send it to target @ param target Address to receive the tokens @ param minted Amount the amount of tokens it will receive
@ notice freeze ? Prevent | Allow target from sending & receiving tokens @ param target Address to be frozen @ param freeze either to freeze it or not
@ notice Allow users to buy tokens for new Buy Price eth and sell tokens for new Sell Price eth @ param new Sell Price Price the users can sell to the contract @ param new Buy Price Price users can buy from the contract
@ notice Buy tokens from contract by sending ether
@ notice Sell amount tokens to contract @ param amount amount of tokens to be sold
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Freeze an account ( Owner only ) .
Send tokens to an account and froze the account immediately ( Owner only ) .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Interface declaration
Interface marker
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Approves and then calls the receiving contract
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
solhint disable previous line no empty blocks
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Approve and then communicate the approved contract in a single tx
Interface marker
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
solhint disable previous line no empty blocks
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
freeze account
multi freeze account
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
creates the token to be sold . override this method to have crowdsale of a specific mintable token .
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
@ return true if crowdsale event has ended
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
@ dev Low level method for adding funds to an account . Protects against overflow . @ param self The Bank instance to operate on . @ param account Address The address of the account the funds should be added to . @ param value The amount that should be added to the account .
@ dev Function wrapper around the Deposit event so that it can be used by contracts . Can be used to log a deposit to an account . @ param from The address that deposited the funds . @ param account Address The address of the account the funds were added to . @ param value The amount that was added to the account .
@ dev Safe function for depositing funds . Returns boolean for whether the deposit was successful @ param self The Bank instance to operate on . @ param account Address The address of the account the funds should be added to . @ param value The amount that should be added to the account .
@ dev Function wrapper around the Withdrawal event so that it can be used by contracts . Can be used to log a withdrawl from an account . @ param account Address The address of the account the funds were withdrawn from . @ param value The amount that was withdrawn to the account .
@ dev Function wrapper around the Insufficient Funds event so that it can be used by contracts . Can be used to log a failed withdrawl from an account . @ param account Address The address of the account the funds were to be withdrawn from . @ param value The amount that was attempted to be withdrawn from the account . @ param balance The current balance of the account .
@ dev Low level method for removing funds from an account . Protects against underflow . @ param self The Bank instance to operate on . @ param account Address The address of the account the funds should be deducted from . @ param value The amount that should be deducted from the account .
@ dev Safe function for withdrawing funds . Returns boolean for whether the deposit was successful as well as sending the amount in ether to the account address . @ param self The Bank instance to operate on . @ param account Address The address of the account the funds should be withdrawn from . @ param value The amount that should be withdrawn from the account .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Crowdsale Only
CALLED BY CYCLE CONTRACT
CALLED BY ICO OPERATOR , approves CYCLE Contract and adds it to cycles
CALLED BY JURY . ONLINE TO SET SWAPPER ADDRESS FOR JOT COMMISSION
CALLED BY ADMIN TO RETRIEVE INFORMATION FROM ICOADDRESS AND ADD ITSELF TO LIST OF CYCLES IN ICO
CALLED BY JURY . ONLINE TO RETRIEVE COMMISSION CALLED BY ICO OPERATOR TO RETRIEVE FUNDS CALLED BY INVESTOR TO RETRIEVE FUNDS AFTER DISPUTE
CALLED BY INVESTOR TO RETRIEVE TOKENS
CALLED BY ICO OPERATOR TO ADD FUNDING ROUNDS WITH start Time , end Time , price , whitelist
CALLED BY ICO OPERATOR TO SET RATE WITHOUT SETTING FUNDING ROUND
CALLED BY ICO OPERATOR TO APPLY WHITELIST AND PRICE OF FUNDING ROUND
RECEIVES FUNDS AND CREATES OFFER
CALCULATES AMOUNT OF TOKENS FOR GIVEN ETH
IF OFFER NOT ACCEPTED , CAN BE WITHDRAWN
ARBITRATION CALLED BY ARBITRATION ADDRESS
CALLED BY ARBITRATION ADDRESS
OPERATOR TO ADD MILESTONES
TO SEAL
TO ACCEPT OFFER
TO START MILESTONE
TO FINISH MILESTONE
HELPERS
OPERATOR
ARBITER
INVESTOR
INTERNAL
In the future , this contract would call a trusted Oracle instead of being set by its owner
SWAPS PROXY TOKENS FOR ICO TOKENS
REFUNDS TOKEN HOLDERS ALLOWANCE
Private Token Sale 10000000000000 ; 10000000 1000000 ( 6 decimal ) Pre Ico Token Sale 5000000000000 ; 5000000 1000000 ( 6 decimal ) Ico Token Sale 15000000000000 ; 15000000 1000000 ( 6 decimal )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Man ! What do I look like ? A charity case ? Please . You can ' t buy me , hot dog man !
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
fallback function can be used to buy tokens
low level token purchase function
@ return true if crowdsale event has ended
creates the token to be sold . override this method to have crowdsale of a specific mintable token .
Override this method to have a way to add business logic to your crowdsale when buying
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
Initializes contract with initial supply tokens to the creator of the contract
Send coins
This unnamed function is called whenever someone tries to send ether to it
parse Int
parse Int ( parse Float 10 ^ b )
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license Duplicate Solidity ' s ecrecover , but catching the CALL return value
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license
Constructor
If something terrible happens and we are past the BET RELEASE DATE , just release bet back to the bettors Creator only , failsafe in case everything fails , we can give everyone their money back .
PRIVATE functions for safety checks Safety check on to address to prevent against an unexpected 0x0 default .
Callback from Oraclize
Returns the total amounts betted for the sender
Release all the bets back to the bettors if the oracle result cannot be verified
Returns true if betting is allowed within time frame
Trigger immediate payout as creator ( costs small amount of additional gas )
Function for user to bet on team idx ,
Performs payout based on winning team
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
solhint disable previous line no empty blocks
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ return Amount in the dev fund not locked up by project or task stake
@ return Amount locked up in escrow
@ notice Updates the escrow values for a new task
@ notice Subtracts the tasks escrow and sets tasks escrow balance to 0
@ notice Pays task completer and updates escrow balances
@ notice updates the escrow values along with the project payee for a new project
@ notice Subtracts tasks escrow and sets tasks escrow balance to 0
@ notice Pays out upon project completion @ notice Updates escrow balances
@ notice Stake code ( in community tokens )
@ notice Unstakes user from community and sends funds back to user @ notice Checks lockup period and balance before unstaking
@ notice Checks that the user is fully staked
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
fallback function can be used to buy tokens
low level token purchase function
withdrawal or refund for investor and beneficiary
@ return true if the transaction can buy tokens
@ return true if crowdsale event has ended
BLOCKGEEKS ACTIONS
USER ACTIONS TRIGGERED BY METAMASK
CUSTOM GETTERS
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
return the smaller of the two inputs ( a or b )
Constructor
a new ' block ' to be mined
https : en . bitcoin . it wiki Difficulty # What is the formula for difficulty . 3F as of 2017 the bitcoin difficulty was up to 17 zeroes , it was only 8 in the early days readjust the target by 5 percent
this is a recent ethereum block hash , used to prevent pre mining future blocks
the number of zeroes the digest of the Po W solution requires . Auto adjusts
21m coins total reward begins at 50 and is cut in half every reward era ( as tokens are mined )
help debug mining software
help debug mining software
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ dev Empty constructor ( for now )
@ dev This will be invoked by the owner , when owner wants to rescue tokens @ param token Token which will we rescue to the owner from the contract
@ dev Interface function , can be overwritten by the superclass @ param token Token which balance we will check and return @ return The amount of tokens ( in smallest denominator ) the contract owns
Interface declaration
@ dev Add a presale participating allocation
@ dev Lock the vault All balances have been loaded in correctly Tokens are transferred on this vault correctly Checks are in place to prevent creating a vault that is locked with incorrect token balances .
@ dev In the case locking failed , then allow the owner to reclaim the tokens on the contract .
@ dev Get the current balance of tokens in the vault @ return uint How many tokens there are currently in vault
@ dev Check how many tokens " investor " can claim @ param investor Address of the investor @ return uint How many tokens the investor can claim now
@ dev Claim N bought tokens to the investor as the msg sender
@ dev This function is prototyped in Recoverable contract
@ dev Resolve the contract umambigious state
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Allow spender to withdraw from your account , multiple times .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Returns the memory address of the first byte of the first occurrence of needle in self , or the first byte after self if not found .
Returns the memory address of the first byte after the last occurrence of needle in self , or the address of self if not found .
Owner
Unlocks ERC721 behaviour , allowing for trading on third party platforms .
locks ERC721 behaviour , allowing for trading on third party platforms .
Buying
ERC721
Transferring a country to another owner will entitle the new owner the profits from buy
Read
Util
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
what is the total supply of the ech tokens
What is the balance of a particular account ?
Transfer the balance from owner ' s account to another account
Send value amount of tokens from address from to address to The transfer From method is used for a withdraw workflow , allowing contracts to send tokens on your behalf , for example to " deposit " to a contract address and or to charge fees in sub currencies ; the command should fail unless the from account has deliberately authorized the sender of the message via some mechanism ; we propose these standardized AP Is for approval :
Allow spender to withdraw from your account , multiple times , up to the value amount . If this function is called again it overwrites the current allowance with value .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
ERC223 fetch contract size ( must be nonzero to be a contract )
Interface marker
privileged transfer
get priveleged balance
admin only can transfer from the privileged accounts
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Internal functions
Functions for the owner Buy the tokens . Sends ETH to the presale wallet and records the ETH amount held in the contract .
Public functions Allows any user to withdraw his tokens .
Allows any user to get his eth refunded before the purchase is made .
Allows any user to get a part of his ETH refunded , in proportion to the % reduced of the allocation
Default function . Called when a user sends ETH to the contract .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
low level token purchase function
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Returns the memory address of the first byte of the first occurrence of needle in self , or the first byte after self if not found .
Returns the memory address of the first byte after the last occurrence of needle in self , or the address of self if not found .
this function is callable by anyone
will pause the system
unpause satellitepool before unpause ( )
fallback function can be used to buy tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Send value tokens to to from your account @ param to The address of the recipient @ param value the amount to send
@ notice Send value tokens to to in behalf of from @ param from The address of the sender @ param to The address of the recipient @ param value the amount to send
@ notice Allows spender to spend no more than value tokens in your behalf @ param spender The address authorized to spend @ param value the max amount they can spend
@ notice Remove value tokens from the system irreversibly @ param value the amount of money to burn
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
burn tokens from sender balance
@ return true if the transaction can buy tokens
@ return true if crowdsale event has ended
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Current supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
180 GRIDCUBE Tokens per 1 ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Interface declaration
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
parse Int
parse Int ( parse Float 10 ^ b )
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license Duplicate Solidity ' s ecrecover , but catching the CALL return value
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license
Returns the memory address of the first byte of the first occurrence of needle in self , or the first byte after self if not found .
Returns the memory address of the first byte after the last occurrence of needle in self , or the address of self if not found .
Game Settings
Main gameplay
Payment methods
Owner
Special
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Source : https : github . com gnosis Multi Sig Wallet blob master contracts Multi Sig Wallet . sol call has been separated into its own function in order to take advantage of the Solidity ' s code generator to produce a loop that copies tx . data into memory .
Bancor Network
Kyber Network
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
default function , map admin
total number of tokens initially
remaining number of tokens
setup the Crowd Sale parameters
default payable function when sending ether to this contract
reduce sender balance and Token total supply
reduce address balance and Token total supply
increase sender balance and Token total supply
calculate the amount of tokens an address can use
override function using can Transfer on the sender address
transfer tokens from one address to another
solhint disable previous line no empty blocks
stake visibility is public as overriding LP Token Wrapper ' s stake ( ) function
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Custom logic in here for how much the vault allows to be borrowed Sets minimum required on hand to keep small withdrawals cheap
Used to swap any borrowed reserve over the debt limit to liquidate to ' token '
No rebalance implementation for lower fees and faster swaps
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Batch token transfer . Used by contract creator to distribute initial tokens to holders
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
fallback function can be used to Procure tokens
low level token Pledge function
Mint is allowed while Total Supply < total Tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
fallback function can be used to buy tokens
low level token purchase function
creates the token to be sold . override this method to have crowdsale of a specific mintable token . function create Token Contract ( ) internal returns ( Mintable Token ) { return new Mintable Token ( ) ; } returns value in zwei Override this method to have a way to add business logic to your crowdsale when buying
send ether to the fund collection wallet
called by the owner on emergency , triggers stopped state
called by the owner on end of emergency , returns to normal state
@ return true if the transaction can buy tokens
takes ethers from zebiwallet to smart contract
transfers ether from smartcontract to zebiwallet
takes ethers from zebiwallet to smart contract
transfers ether from smartcontract to zebiwallet
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
solhint disable previous line no empty blocks
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Look up for the owner role on providen address @ param who is address to look up @ return A boolean of owner role
@ notice Look up for the minter role on providen address @ param who is address to look up @ return A boolean of minter role
@ notice Adds the owner role to provided address @ dev Requires owner role to interact @ param who is address to add role @ return A boolean that indicates if the operation was successful .
@ notice Deletes the owner role to provided address @ dev Requires owner role to interact @ param who is address to delete role @ return A boolean that indicates if the operation was successful .
@ notice Adds the minter role to provided address @ dev Requires owner role to interact @ param who is address to add role @ return A boolean that indicates if the operation was successful .
@ notice Deletes the minter role to provided address @ dev Requires owner role to interact @ param who is address to delete role @ return A boolean that indicates if the operation was successful .
@ notice Changes the owner role to provided address @ param who is address to change role @ param flag is next role status after success @ return A boolean that indicates if the operation was successful .
@ notice Changes the minter role to provided address @ param who is address to change role @ param flag is next role status after success @ return A boolean that indicates if the operation was successful .
@ notice Change size of bucket @ dev Require owner role to call @ param size is new size of bucket @ return A boolean that indicates if the operation was successful .
@ notice Change refill rate of bucket @ dev Require owner role to call @ param rate is new refill rate of bucket @ return A boolean that indicates if the operation was successful .
@ notice Change size and refill rate of bucket @ dev Require owner role to call @ param size is new size of bucket @ param rate is new refill rate of bucket @ return A boolean that indicates if the operation was successful .
@ notice Function to mint tokens @ param to The address that will receive the minted tokens . @ param amount The amount of tokens to mint . @ return A boolean that indicates if the operation was successful .
@ notice Function to calculate and get available in bucket tokens @ return An amount of available tokens in bucket
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice This method can be used by the controller to extract mistakenly sent tokens to this contract . @ param token The address of the token contract that you want to recover set to 0 in case you want to extract ether .
only the owner is allowed to burn tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Initializes contract with initial supply tokens to the creator of the contract
Send coins
This unnamed function is called whenever someone tries to send ether to it
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
creates the token to be sold . override this method to have crowdsale of a specific mintable token .
fallback function can be used to buy tokens
low level token purchase function
owner can mint tokens during crowdsale withing defined caps
finish crowdsale , take total Supply as 90 % and mint 10 % more to specified owner ' s wallet then stop minting forever
set new dates for pre salev ( emergency case )
set new dates for main sale ( emergency case )
set new wallets ( emergency case )
set new rate ( emergency case )
set token on pause
unset token ' s pause
set token Ownership
@ return true if main sale event has ended
@ return true if pre sale event has ended
send ether to the fund collection wallet
we want to be able to check all bonuses in already deployed contract that ' s why we pass current Time as a parameter instead of using " now "
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Sending ether directly to the contract invokes buy ( ) and assigns tokens to the sender
Buy token by sending ether here You can also send the ether directly to the contract address
Functions for the contract owner
Some percentage of the tokens is already reserved for marketing
Some useful getters ( although you can just query the public variables )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Initializes contract with initial supply tokens to the creator of the contract
Send coins
Allow another contract to spend some tokens in your behalf
A contract attempts to get the coins
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
100 BDAY Tokens per 1 ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
save some gas by making only one contract call
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor initializes the owner ' s balance and the supply
ERC20 Functions Return current supply in smallest denomination ( 1MGO 100000000 )
Returns the balance of a particular account
Transfer the balance from the sender ' s address to the address to
Withdraws to address to form the address from up to the amount value
Allows spender to withdraw the allowance amount form sender
Checks how much spender can withdraw from owner
ERC223 Functions Get the contract constant name
Get the contract constant symbol
Get the contract constant decimals
Transfer the balance from the sender ' s address to the address to with data data
Transfer function when to represents a regular address
Infers if whether address is a contract based on the presence of bytecode
Non ERC Functions Remove the specified amount of the tokens from the supply permanently
Returns the total amount of tokens in supply
Returns the total amount of tokens ever burned
Stops any attempt to send Ether to this contract
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
State transitions for names : Open > Auction ( start Auction ) Auction > Reveal Reveal > Owned Reveal > Open ( if nobody bid ) Owned > Open ( release Deed or invalidate Name )
mint part
burn
freeze part
erc20 part
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Initializes contract with initial supply tokens to the creator of the contract
Send coins
Allow another contract to spend some tokens in your behalf
A contract attempts to get the coins
This unnamed function is called whenever someone tries to send ether to it
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
This is where all your gas goes , sorry Not sorry , you probably only paid 1 gwei
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
false if the ico is not started , true if the ico is started and running , true if the ico is completed
false if the ico is not started , false if the ico is started and running , true if the ico is completed
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Then you would have a mapping from an asset to its price quantity when you list it .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
solhint disable previous line no empty blocks
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor of parent the contract
Return true if sender is owner or super owner of the contract
Change the owner of the contract
Constructor
Calls when send Ethereum to the contract
ERC20 transfer
ERC20 approve
ERC20 transfer From
Admin function
Set min max prices
Set start and stop blocks of White List
Withdraw
Remove white list contract after STE will be distributed
solhint disable previous line no empty blocks
stake visibility is public as overriding LP Token Wrapper ' s stake ( ) function
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
power function
Constructor
check is now pre ICO
check is now ICO
function calculate how many tokens will be send to investor in pre Ico
function calculate how many tokens will be send to investor in Ico
fallback function ( when investor send ether to contract )
function buy Tokens
someone can end ICO using this function ( require 3 days after ICO end )
function check is ICO complete ( min Cap exceeded )
if ICO failed and now ICO finished date + 3 days then investor can withdrow his ether
ICO cabinets function
ICO cabinets function , just for view
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Internal transfer , only can be called by this contract
Internal transfer , only can be called by this contract
Transfer Eth
State transitions for names : Open > Auction ( start Auction ) Auction > Reveal Reveal > Owned Reveal > Open ( if nobody bid ) Owned > Open ( release Deed or invalidate Name )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
vesting starts on April 21th 2018 00 : 00 GMT 4 : 00 vesting duration is 3 years
Crowdsale contract mints and stores tokens in time locked contracts during crowdsale . Ownership is transferred back to the owner of crowdsale contract once crowdsale is finished ( finalize ( ) )
@ dev Can only set once
used for private and public sale to create time locked contract before lock release time Note : Token Timelock constructor will throw after token unlock time is reached
Release all tokens held by time locked contracts to the beneficiary address stored in the contract Note : requirement is checked in time lock contract
override to add a checker
@ dev Overrides delivery by minting tokens upon purchase and store in the time locked contract .
@ dev Overrides to add finalization logic . The overriding function does not need to call super . finalization ( ) This is the only finalization function
getter
call to release all tokens after token unlock time
@ dev Fallback function @ notice A payable fallback needs to be implemented in the implementation contract @ notice This is a low level function that doesn ' t return to its internal call site . @ notice It will return to the external caller whatever the implementation returns .
@ dev Returns the current implementation . @ return Address of the current implementation
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
creates the token to be sold . override this method to have crowdsale of a specific mintable token .
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
@ return true if crowdsale event has ended
overriding Crowdsale # valid Purchase to add extra cap logic @ return true if investors can buy at the moment
overriding Crowdsale # has Ended to add cap logic @ return true if crowdsale event has ended
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
This is where all your gas goes , sorry Not sorry , you probably only paid 1 gwei
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Initializes contract with initial supply tokens to the creator of the contract
Send coins
This unnamed function is called whenever someone tries to send ether to it
Returns the balance of a particular account
Transfer the balance from the sender ' s address to the address to
Withdraws to address to form the address from up to the amount value
Allows spender to withdraw the allowance amount form sender
Checks how much spender can withdraw from owner
Stops any attempt to send Ether to this contract
@ return true if crowdsale event has ended
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
call approve ( ZUR Wrapper address , amt ) first
if your transfer to the wrapper to this contract it will swap for the note
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
This function is used to send ether to winner address
This function is used to return is Winner Selected
This function is used to return participant List
This function is used to return winner name
This function is used to return organizer
This function is used to transfer ether to particular address
This function is used to return one number randomly from participant List
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Phase 1 : Deposit Withdraw ether from contributors
Phase 2 : Fund is closed
Phase 3 : Fund is completed
Overrided destructor
Overrided destructor companion
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
sets owner , referee , c4c , prizes ( in percent with two decimals ) , deadlines
Initializes contract with initial supply tokens to the creator of the contract
Send coins
This unnamed function is called whenever someone tries to send ether to it
@ notice Buy tokens from contract by sending ether
@ notice Sell amount tokens to contract @ param amount amount of tokens to be sold
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Initializes contract with initial supply tokens to the creator of the contract
Send coins
Allow another contract to spend some tokens in your behalf
A contract attempts to get the coins
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Initializes contract with initial supply tokens to the creator of the contract
Send coins
This unnamed function is called whenever someone tries to send ether to it
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Approve and then communicate the approved contract in a single tx
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Creates amount token to to . Must only be called by the owner ( Master Chef ) .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
This is where all your gas goes , sorry Not sorry , you probably only paid 1 gwei
Interface declaration
Interface marker
@ dev Here the owner can reclaim the tokens from a participant if the token is not released yet . Refund will be handled offband . @ param from Whom address of the participant whose tokens we want to claim
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ dev Returns true if and only if the function is running in the constructor
Empty internal constructor , to prevent people from mistakenly deploying an instance of this contract , which should be used via inheritance .
function ERC20Preset Minter Pauser init unchained ( string memory name , string memory symbol ) internal initializer { Removed args to prevent compiler warning
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Internal transfer , only can be called by this contract
@ notice Create minted Amount tokens and send it to target @ param target Address to receive the tokens @ param minted Amount the amount of tokens it will receive
@ notice freeze ? Prevent | Allow target from sending & receiving tokens @ param target Address to be frozen @ param freeze either to freeze it or not
@ notice Allow users to buy tokens for new Buy Price eth and sell tokens for new Sell Price eth @ param new Sell Price Price the users can sell to the contract @ param new Buy Price Price users can buy from the contract
@ notice Buy tokens from contract by sending ether
@ notice Sell amount tokens to contract @ param amount amount of tokens to be sold
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
when new user will contribute ICO contract will automatically send bonus to referral
Returns the memory address of the first byte of the first occurrence of needle in self , or the first byte after self if not found .
Returns the memory address of the first byte after the last occurrence of needle in self , or the address of self if not found .
parse Int
parse Int ( parse Float 10 ^ b )
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license Duplicate Solidity ' s ecrecover , but catching the CALL return value
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license
parse Int ( parse Float 10 ^ b )
the following function yields correct results in the time between 1 . 3 . 2016 and 28 . 02 . 2020 , so within the validity of the contract its correct .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Initialize the contract
@ param price Number of NTRY per ether
Recieve funds and rewards tokens
@ param amount NTRY tokens inverster get in return of fund
@ param amount NTRY tokens inverster have purchased
@ param amount NTRY tokens inverster have purchased
@ param amount NTRY tokens inverster have purchased
In case of success funds will be transferred to beneficiary otherwise contributors can safely withdraw their funds
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor and Admin Functions
This function will create a new artwork within the contract , the title is changeable later by the dev but the owner and base Price cannot be changed once it ' s been created . The owner of the artwork will start off with 1 share and any other addresses may now purchase shares for it .
Simple renaming function for the artworks , it is good to keep in mind that when the website syncs with the blockchain , any titles over 32 characters will be clipped .
This function is only for the website and whether or not it displays a certain artwork , any user may still buy shares for an invisible artwork although it ' s not really art unless you can view it . This is exclusively reserved for copyright cases should any artworks be flagged as such .
The two withdrawal functions below are here so that the dev can access the dividends of the contract if it owns any artworks . As all ETH is transferred straight away upon the purchasing of shares , the only ETH left in the contract will be from dividends or the rounding errors ( although the error will only be a few wei each transaction ) due to the nature of dividing and working with integers .
Used to empty the contracts balance to an address .
Main Artwork Share Purchasing Function This is the main point of interaction in this contract , it will allow a user to purchase shares in an artwork and hence with their investment , they pay dividends to all the current shareholders and then the user themselves will become a shareholder and earn dividends on any future purchases of shares . See the get Artwork ( ) function for more information on pricing and how shares work .
Getters
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
public methods to give and take that only owners can call
@ notice freeze ? Prevent | Allow target from sending & receiving tokens @ param target Address to be frozen @ param freeze either to freeze it or not
@ notice Allow users to buy tokens for new Buy Price eth and sell tokens for new Sell Price eth @ param new Buy Price Price users can buy from the contract
RULE we always lower the price any time there is a new high contribution !
sell tokens back to sender using owners ether
Do you really want a Nnex Note ?
This should only be called from the above function
most basic exchange just calculates price ratio
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice set the owner ( Master Chef or Router ) . only call it once .
solhint disable previous line no empty blocks
stake visibility is public as overriding LP Token Wrapper ' s stake ( ) function
solhint disable previous line no empty blocks
Borrow exact amount of token output , can have variable USD input up to in Max
Borrow variable amount of token , given exact USD input
Repay variable amount of token given exact output amount in USD
Repay variable amount of USD , given exact amount of token input
UNSAFE : No slippage protection , should not be called directly
UNSAFE : No slippage protection , should not be called directly
How much system liquidity is provided by this asset
6500 blocks in average day decimals YFMB balance of reward Pool blocks 10000 daily Reward ( in hundredths of % ) reward Per Block
% of reward pool to be distributed each day in hundredths of % 150 1 . 50 %
Function that will get balance of a certain stake
Function that returns User ' s pending rewards
Function that updates LUCO ETH LP pool
Function that lets user stake LUCO ETH LP
Function that will allow user to claim rewards
Function that lets user unstake YFMB ETH LP in system
Function that will turn on emergency withdraws
solhint disable previous line no empty blocks
Change the owner of the token contract
Change the treasury address
Change the percent going to depositors for WETH
Change the staking address
Change the zs Token address
Change the percent going to stakers for WETH
allows governance to start or stop grassland
allows governance to update open Period
allows governance to update blocks Between
Opens the Grassland and collects ERC20
Leave the grassland . Claim back your ERC20s .
solhint disable previous line no empty blocks
solhint disable previous line no empty blocks
event New Carpet King ( address carpet King , uint new Life , bytes data ) ;
Standard function transfer similar to ERC20 transfer with no data . Added due to backwards compatibility reasons .
function that is called when transaction target is an address
function that is called when transaction target is a contract
solhint disable previous line no empty blocks
stake visibility is public as overriding LP Token Wrapper ' s stake ( ) function
Now handle deposits into the strategy
Stop start all deposits , no timelock required
A function used in case of strategy failure , possibly due to bug in theplatform our strategy is using , governance can stop using it quick
Change the owner of the token contract
Change the treasury address
Adapted from https : github . com albertocuestacanada ERC20Permit blob master contracts ERC20Permit . sol
@ notice Creates amount token to to . Must only be called by the owner ( Master Chef ) .
Burn some channel , reduce total circulation .
Add a new lp to the pool . Can only be called by the owner . XXX DO NOT add the same LP token more than once . Rewards will be messed up if you do .
Update the given pool ' s OCT allocation point . Can only be called by the owner .
Return reward multiplier over the given from to to block , yield halved when reach point .
View function to see pending OC Ts on frontend .
Update reward vairables for all pools . Be careful of gas spending !
Update reward variables of the given pool to be up to date .
Deposit LP tokens to Channel for OCT allocation .
Withdraw LP tokens from Channel .
Withdraw without caring about rewards . EMERGENCY ONLY .
Safe channel transfer function , just in case if rounding error causes pool to not have enough OC Ts .
Update dev address by the previous dev .
Used for community governance .
Used for community governance .
@ notice Creates amount token to to . Must only be called by the owner ( Master Chef ) .
Add rule for funds locking after sale
Add rule for funds unlocking of the fund raiser after sale
Lock sale detail changes in future
Add supported currencies and their rate w . r . t token on sale rate Token price of one satoshi of the token in terms of token to be raised 1e18 1 BNSD 0 . 00021 ETH > 1e18 BNSD Satoshi 0 . 00021 1e18 ETH satoshi > 1 BNSD Satoshi 0 . 00021 ETH satoshi > rate Token 0 . 00021 1e18 21 1e13 rate Token for BNSD ETH pair 21 1e13 ;
Check if user can deposit specfic amount of funds to the pool
Check max a user can deposit right now
Check if deposit is enabled for a pool
Deposit ICO tokens to start a pool for ICO .
Deposit Airdrop tokens anytime before end of the sale .
Withdraw extra airdrop tokens Possible only if no one added liquidity to one of the pools
Deposit LP tokens for a sale .
Withdraw LP tokens from a sale after it ' s over > Automatically claims rewards and airdrops also
Withdraw airdrop tokens accumulated over one or more than one sale .
Move LP tokens from one sale to another directly > Automatically claims rewards and airdrops also
Deposit ICO tokens for a use case as reserve .
Withdraw extra unsold ICO tokens or extra deposited tokens .
Fetch extra ICO tokens available .
Deposit tokens to a pool for ICO .
Vote your favourite ICO project .
Check amount of ICO tokens withdrawable by user till now public
Withdraw ICO tokens after sale is over based on distribution rules .
Check amount of ICO tokens withdrawable by user till now
Check amount of ICO tokens withdrawable by reserve user till now
Withdraw ICO tokens for various use cases as per the schedule promised on provided address .
Withdraw raised funds after sale is over as per the schedule promised
Update dev address by initiating with the previous dev .
Update temp pool owner address by initiating with the previous pool owner .
Claim pool ownership with new address
Update fee , can never be more than 3 % .
To generate a new invite code
To invalidate an invite code
To add or update a staking pool with weight
ERC20 ERC20 Transfer function
ERC20 Approve function
ERC20 Transfer From function
Internal transfer function which includes the Fee
The fallback function for this contract .
@ dev Returns list of owners . @ return List of owner addresses .
Generates the message to sign given the output destination address and amount . includes this contract ' s address and a nonce for replay protection . One option to independently verify : https : leventozturk . com engineering sha3 and select keccak
@ erc20contract : the erc20 contract address . @ destination : the token or ether receiver address . @ value : the token or ether value , in wei or token minimum unit . @ vs , rs , ss : the signatures
c Erc20Contract is just like the destination
Confirm that the signature triplets ( v1 , r1 , s1 ) ( v2 , r2 , s2 ) . . . authorize a spend of this contract ' s funds to the given destination address .
Confirm the addresses as distinct owners of this contract .
solhint disable previous line no empty blocks
@ dev Returns true if and only if the function is running in the constructor
solhint disable previous line no empty blocks
Victim info
Victim actions
Pool info
Pool actions
Service methods
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
solhint disable previous line no empty blocks
stake visibility is public as overriding Uni V2Token Wrapper ' s stake ( ) function
Using 9 decimals as we ' re square rooting the votes
Controller only function for creating additional rewards from dust
Withdraw partial funds , normally used with a vault withdrawal
Withdraw all funds , normally used when migrating strategies
to get back want ( 3CRV )
solhint disable previous line no empty blocks
transfer , mint and burn are the only functions where the balances are modified , so it is there that the snapshots are updated . Note that the update happens before the balance change , with the pre modified value . The same is true for the total supply and mint and burn .
overrides
NOTE : In Mystic , proposal Index ! proposal Id
NOTE : requires that delegate key which sent the original proposal cancels , msg . sender proposal . proposer
can only ragequit if the latest proposal you voted YES on has been processed
modified for decimals from uint8 to uint256
Custom logic in here for how much the vaults allows to be borrowed Sets minimum required on hand to keep small withdrawals cheap
Used to swap any borrowed reserve over the debt limit to liquidate to ' token '
No rebalance implementation for lower fees and faster swaps
solhint disable previous line no empty blocks
no zeros for decimals necessary
take back unclaimed tokens of any type sent by mistake
Helper functions for handling sending of reward token
Required cause coreflasharb contract doesnt make this easily retrievable
Set new contract address incase core devs change the flash arb contract
Return profitable strats array and reward tokens
Used to execute multiple profitable strategies , only use when there are multiple executable strats
Execute single profitable strat
Added to recover erc20 tokens
Converts ETH to Tokens 1and sends new Tokens to the sender
Only the contract owner can call this function
Only the contract owner can call this function
Starts the sale Only the contract owner can call this function
Function to query the supply of Tokens in the contract
solhint disable previous line no empty blocks
solhint disable previous line no empty blocks
Controller only function for creating additional rewards from dust
Withdraw partial funds , normally used with a vault withdrawal
Withdraw all funds , normally used when migrating strategies
@ notice Creates amount token to to . Must only be called by the owner ( Mining Rig ) .
Add a new lp to the pool . Can only be called by the owner . XXX DO NOT add the same LP token more than once . Rewards will be messed up if you do .
Update the given pool ' s SMT allocation point . Can only be called by the owner .
Set the migrator contract . Can only be called by the owner .
Migrate lp token to another lp contract . Can be called by anyone . We trust that migrator contract is good .
Return reward multiplier over the given from to to block .
View function to see pending SM Ts on frontend .
Update reward vairables for all pools . Be careful of gas spending !
Update reward variables of the given pool to be up to date .
Deposit LP tokens to Mining Rig for SMT allocation .
Withdraw LP tokens from Mining Rig .
Withdraw without caring about rewards . EMERGENCY ONLY .
Safe smt transfer function , just in case if rounding error causes pool to not have enough SM Ts .
Update dev address by the previous dev .
solhint disable previous line no empty blocks
returns sorted token addresses , used to handle return values from pairs sorted in this order
calculates the CREATE2 address for a pair without making any external calls
fetches and sorts the reserves for a pair
given some amount of an asset and pair reserves , returns an equivalent amount of the other asset
given an input amount of an asset and pair reserves , returns the maximum output amount of the other asset
given an output amount of an asset and pair reserves , returns a required input amount of the other asset
performs chained get Amount Out calculations on any number of pairs
performs chained get Amount In calculations on any number of pairs
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
solhint disable previous line no empty blocks
@ notice Creates amount token to to . Must only be called by the owner .
Add a new lp to the pool . Can only be called by the owner . XXX DO NOT add the same LP token more than once . Rewards will be messed up if you do .
Update the given pool ' s WTRX allocation point . Can only be called by the owner .
Return reward multiplier over the given from to to block .
View function to see pending WTRX on frontend .
Update reward vairables for all pools . Be careful of gas spending !
Update reward variables of the given pool to be up to date .
Update reward variables of the given pool to be up to date .
Deposit LP tokens to Master Chef for WTRX allocation .
Withdraw LP tokens from Master Chef .
Withdraw without caring about rewards . EMERGENCY ONLY .
Safe WTRX transfer function , just in case if rounding error causes pool to not have enough WTRX .
Update dev address by the previous dev .
solhint disable previous line no empty blocks
ensure the address is valid .
send tokens
handles presale burn + staking burn .
approve tokens
transfer from
ADMINISTRATIVE FUNCTIONS
@ notice Creates amount token to to . Must only be called by the owner ( Master Chef ) .
https : github . com quantstamp sushiswap security review 3 . 4 fixed .
solhint disable previous line no empty blocks
stake visibility is public as overriding LP Token Wrapper ' s stake ( ) function
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
solhint disable previous line no empty blocks
stake visibility is public as overriding LP Token Wrapper ' s stake ( ) function
solhint disable previous line no empty blocks
Withdraw all funds , normally used when migrating strategies
Controller only function for creating additional rewards from dust
Returns price in BASED per share e18
@ param amount amount in BASED to deposit
@ dev Returns true if and only if the function is running in the constructor
solhint disable previous line no empty blocks
Override functions that change user balance
solhint disable previous line no empty blocks
wrapper functions to allow testing
The functions below surve no real purpose . Even if one were to approve another to spend tokens on their behalf , those tokens will still only be transferable when the token contract is not paused .
solhint disable previous line no empty blocks
stake visibility is public as overriding LP Token Wrapper ' s stake ( ) function
Standard function transfer similar to ERC20 transfer with no data . Added due to backwards compatibility reasons .
the epitome of " This is gonna hurt me more than it ' s gonna hurt you . "
Function that is called when a user or another contract wants to transfer funds .
Standard function transfer similar to ERC20 transfer with no data . Added due to backwards compatibility reasons .
function that is called when transaction target is an address
function that is called when transaction target is a contract
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Custom logic in here for how much the vault allows to be borrowed Sets minimum required on hand to keep small withdrawals cheap
Used to swap any borrowed reserve over the debt limit to liquidate to ' token '
No rebalance implementation for lower fees and faster swaps
@ dev Returns true if and only if the function is running in the constructor
Empty internal constructor , to prevent people from mistakenly deploying an instance of this contract , which should be used via inheritance .
Admin
Minter
Transfer Agent
solhint disable previous line no empty blocks
stake visibility is public as overriding LP Token Wrapper ' s stake ( ) function
solhint disable previous line no empty blocks
stake visibility is public as overriding LP Token Wrapper ' s stake ( ) function
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
solhint disable previous line no empty blocks
@ dev Returns true if and only if the function is running in the constructor
solhint disable previous line no empty blocks
@ dev Returns true if and only if the function is running in the constructor
solhint disable previous line no empty blocks
Override functions that change user balance
solhint disable previous line no empty blocks
babylonian method ( https : en . wikipedia . org wiki Methods of computing square roots # Babylonian method )
encode a uint112 as a UQ112x112
divide a UQ112x112 by a uint112 , returning a UQ112x112
called once by the factory at time of deployment
update reserves and , on the first call per block , price accumulators
if fee is on , mint liquidity equivalent to 1 6th of the growth in sqrt ( k )
this low level function should be called from a contract which performs important safety checks
this low level function should be called from a contract which performs important safety checks
this low level function should be called from a contract which performs important safety checks
force balances to match reserves
force reserves to match balances
Controller only function for creating additional rewards from dust
Withdraw partial funds , normally used with a vault withdrawal
Withdraw all funds , normally used when migrating strategies
@ notice Creates amount token to to . Must only be called by the owner ( Master Chef ) .
Custom logic in here for how much the token allows to be borrowed Sets minimum required on hand to keep small withdrawals cheap
Used to swap any borrowed reserve over the debt limit to liquidate to ' token '
No rebalance implementation for lower fees and faster swaps
price per share
solhint disable previous line no empty blocks
stake visibility is public as overriding LP Token Wrapper ' s stake ( ) function
ERC20Interface function ' s implementation
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
@ dev function that burns an amount of the token from caller account @ param amount The amount that will be burnt can be used from account owner
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
@ notice Creates amount token to to . Must only be called by the owner ( Master Chef ) .
Add a new lp to the pool . Can only be called by the owner . XXX DO NOT add the same LP token more than once . Rewards will be messed up if you do .
Update the given pool ' s LAMBO allocation point . Can only be called by the owner .
Return reward multiplier over the given from to to block .
View function to see pending LAMBO on frontend .
Update reward vairables for all pools . Be careful of gas spending !
Update reward variables of the given pool to be up to date .
Update reward variables of the given pool to be up to date .
Update reward variables of the given pool to be up to date .
Deposit LP tokens to Master Chef for LAMBO allocation .
Withdraw LP tokens from Master Chef .
Withdraw without caring about rewards . EMERGENCY ONLY .
Safe LAMBO transfer function , just in case if rounding error causes pool to not have enough LAMBO .
Update dev address by the previous dev .
NOTE : In MSTX , proposal Index ! proposal Id
NOTE : requires that delegate key which sent the original proposal cancels , msg . sender proposal . proposer
can only ragequit if the latest proposal you voted YES on has been processed
solhint disable previous line no empty blocks
solhint disable previous line no empty blocks
stake visibility is public as overriding LP Token Wrapper ' s stake ( ) function
emergency withdraw without caring about pending earnings pending earnings will be lost set to 0 if used emergency withdraw
function to allow admin to claim other ERC20 tokens sent to this contract ( by mistake ) Admin cannot transfer out deposit tokens from this smart contract Admin can transfer out reward tokens from this address once admin Claimable Time has reached
solhint disable previous line no empty blocks
Custom logic in here for how much the vault allows to be borrowed Sets minimum required on hand to keep small withdrawals cheap
Used to swap any borrowed reserve over the debt limit to liquidate to ' token '
No rebalance implementation for lower fees and faster swaps
If true , no changes can be made
THE ONLY ADMIN FUNCTIONS vvvv After this is called , no changes can be made
Can only be called once to set token address
Set reward value that has high APY , can ' t be called if make Unchangeable ( ) was called
Cap token price at 1 eth , can ' t be called if make Unchangeable ( ) was called
Attribute LPV1 rewards , only during the first hour .
Get amount of tethered rewards
solhint disable previous line no empty blocks
find the tail id of player , for swap to another area
@ notice Creates amount token to to . Must only be called by the owner ( Master Chef ) .
Add a new lp to the pool . Can only be called by the owner . XXX DO NOT add the same LP token more than once . Rewards will be messed up if you do .
Update the given pool ' s PROFIT allocation point . Can only be called by the owner .
Return reward multiplier over the given from to to block .
View function to see pending PROFIT on frontend .
Update reward vairables for all pools . Be careful of gas spending !
Update reward variables of the given pool to be up to date .
Update reward variables of the given pool to be up to date .
Update reward variables of the given pool to be up to date .
Deposit LP tokens to Master Chef for PROFIT allocation .
Withdraw LP tokens from Master Chef .
Withdraw without caring about rewards . EMERGENCY ONLY .
Safe PROFIT transfer function , just in case if rounding error causes pool to not have enough PROFIT .
Update dev address by the previous dev .
@ dev Returns true if and only if the function is running in the constructor
solhint disable previous line no empty blocks
Override functions that change user balance
ADMINISTRATIVE FUNCTIONS
solhint disable previous line no empty blocks
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor sets owner .
Redeems authorized ETH .
Contract owner deposits ETH .
Contract owner withdraws ETH .
Contract owner authorizes redemptions in units of 1 1000 ETH .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Set the exchange oracle after crowdsale
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Transactions Constructor
Calls Return basic information about the contract
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ dev Integer division of two numbers , truncating the quotient .
@ dev Substracts two numbers , throws on overflow ( i . e . if subtrahend is greater than minuend ) .
check the faucet
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
6500 blocks in average day decimals Luco balance of reward Pool blocks 10000 daily Reward ( in hundredths of % ) reward Per Block
% of reward pool to be distributed each day in hundredths of % 150 1 . 50 %
Function that will get balance of a certain stake
Function that returns User ' s pending rewards
Function that updates LUCO ETH LP pool
Function that lets user stake LUCO ETH LP
Function that will allow user to claim rewards
Function that lets user unstake Luco ETH LP in system
Function that will turn on emergency withdraws
Interface declaration
Interface marker
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Creates amount token to to . Must only be called by the owner ( Master Farmer ) .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
invariant : acc Premium + acc Risk Fund + acc Payout + acc Balance + acc Reward + acc Oraclize Costs 0
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ dev Courtesy of https : github . com gnosis Multi Sig Wallet blob master contracts Multi Sig Wallet . sol This method allows the pre defined recipient to call other smart contracts .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
State transitions for names : Open > Auction ( start Auction ) Auction > Reveal Reveal > Owned Reveal > Open ( if nobody bid ) Owned > Open ( release Deed or invalidate Name )
@ dev Empty constructor ( for now )
@ dev This will be invoked by the owner , when owner wants to rescue tokens @ param token Token which will we rescue to the owner from the contract
@ dev Interface function , can be overwritten by the superclass @ param token Token which balance we will check and return @ return The amount of tokens ( in smallest denominator ) the contract owns
Interface declaration
Interface marker
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Data is uploaded over many transactions , until the whole file is stored in the contract
If a mistake is done during upload , reverse using erase ( )
This loads the entire file as a single byte array . Since it does not affect the contract state , there are no gas costs
@ dev Courtesy of https : github . com gnosis Multi Sig Wallet blob master contracts Multi Sig Wallet . sol This method allows the pre defined recipient to call other smart contracts .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
transfer Ownership to other address
requires enough gas for execution
Function to handle eth and token transfers tokens are transferred to user ETH are transferred to current owner
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Increase the amount of tokens that an owner allowed to a spender . approve should be called when allowed [ spender ] 0 . To increment allowed value is better to use this function to avoid 2 calls ( and wait until the first transaction is mined ) spender The address which will spend the funds . added Value The amount of tokens to increase the allowance by .
Decrease the amount of tokens that an owner allowed to a spender . approve should be called when allowed [ spender ] 0 . To decrement allowed value is better to use this function to avoid 2 calls ( and wait until the first transaction is mined ) spender The address which will spend the funds . subtracted Value The amount of tokens to decrease the allowance by .
Change the ETH to IO rate
to The address that will receive the minted tokens . amount The amount of tokens to mint . A boolean that indicates if the operation was successful .
function to stop the ICO
function to resume ICO
Initializes contract with initial supply tokens to the creator of the contract
Send coins
This unnamed function is called whenever someone tries to send ether to it
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Salvage other tokens that are accidentally sent into this token
Only fallback function can be used to buy tokens
Return true if crowdsale event has ended
Send ether to the fund collection wallet
Must be called after crowdsale ends , to do some extra finalization
Stops the minting and transfer token ownership to sale owner . Mints unsold tokens to owner
Approves and then calls the receiving contract
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Creates amount token to to . Must only be called by the owner ( Master Chef ) .
https : github . com quantstamp sushiswap security review 3 . 4 fixed .
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
overflow check
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Genexi Project @ dev Constructor
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Admin
Read
Listing
Market
Read
ERC721
Internal
Function that is called when a user or another contract wants to transfer funds .
Function that is called when a user or another contract wants to transfer funds .
assemble the given address bytecode . If bytecode exists then the addr is a contract .
Approves and then calls the receiving contract
Initializes contract with initial supply tokens to the creator of the contract
Send coins
This unnamed function is called whenever someone tries to send ether to it
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
creates the token to be sold . override this method to have crowdsale of a specific mintable token .
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
@ return true if crowdsale event has ended
overriding Crowdsale # valid Purchase to add extra cap logic @ return true if investors can buy at the moment
overriding Crowdsale # has Ended to add cap logic @ return true if crowdsale event has ended
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
This is where all your gas goes , sorry Not sorry , you probably only paid 1 gwei
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Internal Function
Public Function
Internal Function
Public Function
Internal Function
Public Function
Internal Function
Public Function
Internal Function
Public Function
Public Function
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Transfer ownership of token to a new address need for the next sale
false if the ico is not started , true if the ico is started and running , true if the ico is completed
false if the ico is not started , false if the ico is started and running , true if the ico is completed
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
NOTE : amount of 1 FCT is 10 decimals
NOTE : amount of 1 FCT is 10 decimals
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
This famous algorithm is called " exponentiation by squaring " and calculates x ^ n with x as fixed point and n as regular unsigned . It ' s O ( log n ) , instead of O ( n ) for naive repeated multiplication . These facts are why it works : If n is even , then x ^ n ( x ^ 2 ) ^ ( n 2 ) . If n is odd , then x ^ n x x ^ ( n 1 ) , and applying the equation for even x gives x ^ n x ( x ^ 2 ) ^ ( ( n 1 ) 2 ) . Also , EVM division is flooring and floor [ ( n 1 ) 2 ] floor [ n 2 ] .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor .
Allows any user to withdraw his tokens . Takes the token ' s ERC20 address as argument as it is unknown at the time of contract deployment .
Allows any user to get his eth refunded before the purchase is made or after approx . 20 days in case the devs refund the eth .
Buy the tokens . Sends ETH to the presale wallet and records the ETH amount held in the contract .
A helper function for the default function , allowing contracts to interact .
Default function . Called when a user sends ETH to the contract .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
@ return true if crowdsale event has ended
low level token purchase function
transfer ownership of the token to the owner of the presale contract
fallback function can be used to buy tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Send coins
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Initializes contract with initial supply tokens to the creator of the contract
Send coins
This unnamed function is called whenever someone tries to send ether to it
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
refund option for investors
when softcap reached , finish of token minting could be implemented
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Initializes contract with initial supply tokens to the creator of the contract
Send coins
This unnamed function is called whenever someone tries to send ether to it
@ notice This method can be used by the controller to extract mistakenly sent tokens to this contract . @ param token The address of the token contract that you want to recover set to 0 in case you want to extract ether .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
1 time token mint creation function . Tokens are only minted during contract creation , and cannot be done again .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
override
override
override
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
creates the token to be sold . override this method to have crowdsale of a specific mintable token .
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
@ return true if crowdsale event has ended
overriding Crowdsale # valid Purchase to add extra cap logic @ return true if investors can buy at the moment
overriding Crowdsale # has Ended to add cap logic @ return true if crowdsale event has ended
creates the token to be sold . override this method to have crowdsale of a specific Mintable Token token .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
called by the owner on emergency , triggers stopped state
called by the owner on end of emergency , returns to normal state
@ dev Constructor
Fallback method will buyout tokens
@ dev Create new tokens and allocate them to an address . Only callably by a crowdsale contract @ param receiver Address of receiver @ param amount Number of tokens to issue .
@ dev Set the contract that can call release and make the token transferable . @ param crowdsale Agent crowdsale contract address
@ dev One way function to release the tokens to the wild . Can be called only from the release agent that is the final ICO contract . It is only called if the crowdsale has been success ( first milestone reached ) .
@ dev Tranfer tokens to address @ param to dest address @ param value tokens amount @ return transfer result
@ dev Tranfer tokens from one address to other @ param from source address @ param to dest address @ param value tokens amount @ return transfer result
@ dev Tokens balance @ param owner holder address @ return balance amount
@ dev Approve transfer @ param spender holder address @ param value tokens amount @ return result
@ dev Token allowance @ param owner holder address @ param spender spender address @ return remain amount
@ dev Constructor @ param token Solar Dao token address @ param multisig Wallet team wallet @ param pre Invest Start pre ICO start date @ param start token ICO start date @ param end token ICO end date
@ dev Get the current milestone or bail out if we are not in the milestone periods . @ return Milestone current bonus milestone
@ dev Make an investment . Crowdsale must be running for one to invest . @ param receiver The Ethereum address who receives the tokens
@ dev Allow anonymous contributions to this crowdsale . @ param receiver The Ethereum address who receives the tokens
@ dev The basic entry point to participate the crowdsale process .
@ dev Finalize a succcesful crowdsale .
@ dev Finalize a succcesful crowdsale .
@ dev Method for setting USD to Ether rate from Poloniex @ param value USD amout in cents for 1 Ether @ param time timestamp
@ dev Method set exchange rate agent @ param new Agent new agent
@ dev Method set data from migrated contract @ param tokens Sold tokens sold @ param wei Raised wei raised @ param investor Count investor count
@ dev Allow crowdsale owner to close early or extend the crowdsale . @ param time timestamp
@ dev Allow load refunds back on the contract for the refunding .
@ dev Investors can claim refund .
@ dev Minimum goal was reached @ return true if the crowdsale has raised enough money to not initiate the refunding
@ dev Check if the ICO goal was reached . @ return true if the crowdsale has raised enough money to be a success
@ dev Crowdfund state machine management . @ return State current state
@ dev Calculating tokens count @ param wei Amount invested @ return tokens amount
@ dev Check if the pre ICO goal was reached . @ return true if the pre ICO has raised enough money to be a success
@ dev Converts wei value into USD cents according to current exchange rate @ param wei Value wei value to convert @ return USD cents equivalent of the wei value
@ dev Dynamically create tokens and assign them to the investor . @ param receiver investor address @ param token Amount The amount of tokens we try to give to the investor in the current transaction
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ dev in payable we shold keep only forwarding call
@ dev system can mint tokens for users if they sent funds to BTC , LTC , etc wallets we allow
@ dev get total coins sold per current round
@ dev pause and unpause an ICO , only sender allowed to
Don ' t like this code . Don ' t know yet how to make it nicer
ensure the address is valid .
send tokens
approve tokens
transfer from
can only burn from the deployer address .
transfer ownership to a new address .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Approve and then communicate the approved contract in a single tx
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
functions below this line are only Owner set " message of the day "
functions below this line are public
fallback function simply forwards Ether to the controller ' s fallback
In the future , when the controller supports multiple token heads , allow the controller to reconstitute the transfer and approval history .
functions below this line are only Owner
public functions
functions below this line are only Ledger let the ledger send transfer events ( the most obvious case is when we mint directly to the ledger and need the Transfer ( ) events to appear in the token )
functions below this line are only Token
token fallback function forwards to this
functions below this line are only Owner
@ dev Constructor @ param name crowdfunding project name @ param description crowdfunding project short description @ param team Contact crowdfunding team contact @ param starts At crowdfunding start time @ param ends At crowdfunding end time @ param funding Goal funding goal in wei @ param team team address @ param fee Receiver fee receiver address
@ dev Crowdfund state machine management . @ return State current state
@ dev Goal was reached @ return true if the crowdsale has raised enough money to be a succes
@ dev Fallback method
@ dev Allow contributions to this crowdfunding .
@ dev Finalize a succcesful crowdfunding . The team can triggre a call the contract that provides post crowdfunding actions , like releasing the funds .
@ dev Investors can claim refund .
called by the deploy agent on emergency , triggers stopped state
called by the deploy agent on end of emergency , returns to normal state
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
50 , 000 SHAKE Tokens per 1 ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ dev Integer division of two numbers , truncating the quotient .
@ dev Substracts two numbers , throws on overflow ( i . e . if subtrahend is greater than minuend ) .
@ dev kn0more
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Bdp Calculator
Bdp Data Storage
Bdp Image Storage
Bdp Price Storage
Constructor
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
1 , 000 FWD Tokens per 1 ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Initializes contract with initial supply tokens to the creator of the contract
Send coins
This unnamed function is called whenever someone tries to send ether to it
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Callback function , distribute tokens to sender when ETH donation is recieved
Halts or resumes the distribution process
Withdraw available token in this contract
Set token rate per ETH donation contribution
Set token contract addresses of tokens involved in distribution
Set the available token balance of this contract
Set the available token balance of this contract manually
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Buy tokens from contract by sending ether
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
unsold tokens can be claimed by owner after sale ends
ref : github . com Open Zeppelin zeppelin solidity blob master contracts math Safe Math . sol
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
UTILITY FUNCTIONS Return next higher even multiple for amount parameter ( e . g used to round up to even finneys ) .
Checks if two coordinates are adjacent : xxx xox xxx All x ( x2 , xy2 ) are adjacent to o ( x1 , y1 ) in this ascii image . Adjacency does not wrapp around map edges so if y2 255 and y1 0 then they are not ajacent
Converts ( x , y ) to tile Id xy
Converts tile Id to ( x , y )
Can ' t send funds straight to this contract . Avoid people sending by mistake .
TILE RELATED GETTER FUNCTIONS
Can ' t send funds straight to this contract . Avoid people sending by mistake .
OWNER ONLY FUNCTIONS
TILE RELATED FUNCTIONS This function claims multiple previously unclaimed tiles in a single transaction . The value assigned to each tile is the msg . value divided by the number of tiles claimed . The msg . value is required to be an even multiple of the number of tiles claimed .
Return a pseudo random number between lower and upper bounds given the number of previous blocks it should hash . Random function copied from https : github . com axiomzen eth random blob master contracts Random . sol . Changed sha3 to keccak256 . Changed random range from uint64 to uint ( uint256 ) .
A user tries to claim a tile that ' s already owned by another user . A battle ensues . A random roll is done with % based on attacking vs defending amounts .
BATTLE VALUE FUNCTIONS
Allow us to transfer out airdropped tokens if we ever receive any
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Creates amount token to to . Must only be called by the owner ( Master Chef ) .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice The Constructor assigns the message sender to be owner
@ notice owner can step down and assign some other address to this role @ param new Owner The address of the new owner . 0x0 can be used to create an unowned neutral vault , however that cannot be undone
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Get the token balance for account token Owner
Transfer the balance from owner ' s account to another account
Add to balance
distribution
requiring NIL
0x7a0c396d
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice This method can be used by the controller to extract mistakenly sent tokens to this contract . @ param token The address of the token contract that you want to recover set to 0 in case you want to extract ether .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
in case of rounding errors converting between vault tokens and underlying value
Safe RLY transfer function , just in case pool does not have enough RLY due to rounding error
how much are our shares of the underlying vault worth relative to the deposit value ? returns value denominated in vault tokens
transfer accumulated yield to treasury , update total Deposits to ensure available Yield following harvest is 0 , and increase accumulated rally rewards harvest fails if we ' re unable to fund rewards
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor NOT payable
State changing public methods Change owner
Pause
Resume
div isn ' t needed . Only error case is div by zero and Solidity throws on that function div ( uint256 x , uint256 y ) constant internal returns ( uint256 z ) { z x y ; } sub Max Zero ( x , y ) Pacio addition to avoid throwing if a subtraction goes below zero and return 0 in that case .
ERC20 Methods Public Constant Methods balance Of ( ) Returns the token balance of account with address guy
allowance ( ) Returns the number of tokens approved by guy that can be transferred ( " spent " ) by spender
State changing public methods made pause able and with call logging transfer ( ) Transfers wad of sender ' s tokens to another account , address dst No need for overflow check given that total Supply is always far smaller than max uint
transfer From ( ) Sender transfers wad tokens from src account src to dst account , if sender had been approved by src for a transfer of > wad tokens from src ' s account by a prior call to approve ( ) with that call ' s sender being this calls src , and its spender being this call ' s sender .
approve ( ) Approves the passed address ( of spender ) to spend up to wad tokens on behalf of msg . sender , in one or more transfer From ( ) calls If this function is called again it overwrites the current allowance with wad .
No Constructor Initialisation Settings Methods Is Owner but not Is Active Initialise ( ) To be called by deployment owner to change ownership to the sale contract , and do the initial allocations and minting . Can only be called once . If the sale contract changes but the token contract stays the same then Change Owner ( ) can be called via Pacio ICO . Change Token Contract Owner ( ) to change the owner to the new contract
Mint ( ) Pacio ICO ( ) includes a Mint ( ) fn to allow manual calling of this if necessary e . g . re full ICO going over the cap
Prepare For Sale ( ) stops transfers and allows purchases
Change Owner ( ) To be called by owner to change the token contract owner , expected to be to a sale contract Transfers any minted tokens from old to new sale contract
Public Constant Methods None . Used public variables instead which result in getter functions State changing public methods made pause able and with call logging Issue ( ) Transfers picos tokens to dst to issue them . Is Owner because this is expected to be called from the token sale contract
Sale Cap Reached ( ) To be be called from the token sale contract when a cap ( pre or full ) is reached Allows transfers
Functions for manual calling via same name function in Pacio ICO ( ) Ico Completed ( ) To be be called manually via Pacio ICO after full ICO ends . Could be called before cap is reached if . . . .
Set FF Settings ( address v Founder Tokens A , address v Foundation Tokens A , uint v Founder Tokens Allocation , uint v Foundation Tokens Allocation ) Allows setting Founder and Foundation addresses ( or changing them if an appropriate transfer has been done ) plus optionally changing the allocations which are set by the constructor , so that they can be varied post deployment if required re a change of plan All values are optional zeros can be passed Must have been called with non zero Founder and Foundation addresses before Founder and Foundation vesting can be done
Vest FF Tokens ( ) To vest Founder and or Foundation tokens 0 can be passed meaning skip that one No separate event as the Log Issue event can be used to trace vesting transfers To be be called manually via Pacio ICO
Burn ( ) For use when transferring issued PIO Es to PI Os To be be called manually via Pacio ICO or from a new transfer contract to be written which is set to own this one
Destroy ( ) For use when transferring unissued PIO Es to PI Os To be be called manually via Pacio ICO or from a new transfer contract to be written which is set to own this one
Fallback function No sending ether to this contract ! Not payable so trying to send ether will throw
Constructor not payable
Prepare To Start ( ) To be called manually by owner just prior to the start of the presale or the full ICO Can also be called by owner to adjust settings . With care ! !
Public Constant Methods None . Used public variables instead which result in getter functions State changing public method made pause able Buy ( ) Fn to be called to buy PIO Es
Functions to be called Manually Set Picos Per Ether ( ) Fn to be called daily ( hourly ? ) or on significant Ether price movement to set the Pico price
Change PC Wallet ( ) Fn to be called to change the PC Wallet to receive funds raised . This is set initially via Prepare To Start ( )
Allocate ( ) Allocate in lieu for goods or services or fiat supplied valued at wad wei in return for picos issued . Not payable no picos Cap check
Token Contract Functions to be called Manually via Owner calls to ICO Contract Change Token Contract Owner ( ) To be called manually if a new sale contract is deployed to change the owner of the Pacio Token contract to it . Expects the sale contract to have been paused Calling Change Token Contract Owner ( ) will stop calls from the old sale contract to token contract Is Owner functions from working
Pause Token Contract ( ) To be called manually to pause the token contract
Resume Token Contract ( ) To be called manually to resume the token contract
Mint ( ) To be called manually if necessary e . g . re full ICO going over the cap Expects the sale contract to have been paused
Ico Completed ( ) To be be called manually after full ICO ends . Could be called before cap is reached if . . . . Expects the sale contract to have been paused
Set FF Settings ( ) Allows setting Founder and Foundation addresses ( or changing them if an appropriate transfer has been done ) plus optionally changing the allocations which are set by the Pacio Token constructor , so that they can be varied post deployment if required re a change of plan All values are optional zeros can be passed Must have been called with non zero Founder and Foundation addresses before Founder and Foundation vesting can be done
Vest FF Tokens ( ) To vest Founder and or Foundation tokens 0 can be passed meaning skip that one Set FF Settings ( ) must have been called with non zero Founder and Foundation addresses before this fn can be used
Burn ( ) For use when transferring issued PIO Es to PI Os To be replaced by a new transfer contract to be written which is set to own the Pacio Token contract
Destroy ( ) For use when transferring unissued PIO Es to PI Os To be replaced by a new transfer contract to be written which is set to own the Pacio Token contract
Fallback function No sending ether to this contract ! Not payable so trying to send ether will throw
low level token purchase function
@ return true if the transaction can buy tokens
send ether to the fund collection wallet
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Dev should initially seed the game before start
Reinvest Halo3D Shrimp Farm dividends All the dividends this contract makes will be used to grow token fund for players of the Halo3D Schrimp Farm
magic trade balancing algorithm
Calculate trade to sell eggs
Calculate trade to buy eggs
Calculate eggs to buy simple
Calculate dev fee in game
Get amount of Shrimps user has
Get amount of eggs of current user
Get number of doges since last hatch
Collect information about doge farm dividents amount
Get tokens balance of the doge farm
Check transaction coming from the contract or not
Initializes contract with initial supply tokens to the creator of the contract
Send coins
This unnamed function is called whenever someone tries to send ether to it
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Functions Constructor function init core params on deploy
Ballot submission
Internal function to ensure atomicity of voter log
Allow the owner to reveal the secret key after ballot conclusion
Helpers
ballot params allows the frontend to do some checking
Test functions
Initializes contract with initial supply tokens to the creator of the contract
Send coins
This unnamed function is called whenever someone tries to send ether to it
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
This is where all your gas goes , sorry Not sorry , you probably only paid 1 gwei
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Check the fork condition during creation of the contract . This function should be called between block 1920000 and 1921200 . Approximately between 2016 07 20 12 : 00 : 00 UTC and 2016 07 20 17 : 00 : 00 UTC . After that the status will be locked in .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
New epoch can be started if : Current round is 9 Curen epoch < 10
Add prop . with id : id
Turns project ON and OFF
Returns proj . weight
Returns proj . status
Vote for proj . using id : id
Shows currently winning proj
Activates voting Clears projects
Deactivates voting
sqrt root func
B A L L O T NOM token emission functions Pays 1 . 00000000 from epoch fund to KYC passed user Uses payout ( ) , bitmask check ( ) , bitmask add ( ) adds 4 to bitmask
Pays . 555666XX from epoch fund to user approved phone ; Uses payout ( ) , bitmask check ( ) , bitmask add ( ) adds 2 to bitmask
Pays . 555666XX from epoch fund to KYC user in new epoch ; Uses payout ( ) , bitmask check ( ) , bitmask add ( ) adds 2 to bitmask
Pays random number from epoch fund Uses payout ( )
Pays [ amount ] of money to [ to ] account from epoch fund Counts amount + 30 % + 10 % Updating total Supply Pays to balance and 2 funds Refreshes dec [ ] Emits event
Withdraw amount from team fund to given address
Withdraw amount from redenom dao fund to given address
Run this on every change of user balance Refreshes dec [ ] array Takes initial and new ammount while transaction must be called for each acc .
BITMASK Adding bit to bitmask checks if already set
Removes bit from bitmask checks if already set
Checks whether some bit is present in BM

Redenominates
Refresh user acc Pays dividends if any
Returns current multipl . based on round Returns current multiplier based on round
Removes burned values 123 > 120 Returns fixed
Returns rest
ERC20 total Supply :
ERC20 balance Of : Get the token balance for account token Owner
ERC20 allowance : Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
ERC20 transfer : Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
ERC20 approve : Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
ERC20 transfer From : Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH https : github . com Consen Sys Ethereum Development Best Practices wiki Fallback functions and the fundamental limitations of using send ( ) in Ethereum & Solidity
Owner can transfer out any accidentally sent ERC20 tokens
Adapted from https : github . com albertocuestacanada ERC20Permit blob master contracts ERC20Permit . sol
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approved for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
called by the owner on emergency , triggers stopped state
called by the owner on end of emergency , returns to normal state
withdraw accumulated balance , called by payee
Constructor
called by the owner on emergency , triggers stopped state
called by the owner on end of emergency , returns to normal state
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Internal transfer , only can be called by this contract
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
solhint disable previous line no empty blocks
stake visibility is public as overriding LP Token Wrapper ' s stake ( ) function
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
State transitions for names : Open > Auction ( start Auction ) Auction > Reveal Reveal > Owned Reveal > Open ( if nobody bid ) Owned > Open ( release Deed or invalidate Name )
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
@ notice Transfer value tokens from sender ' s account msg . sender to provided account address to . @ notice This function is disabled during the funding . @ dev Required state : Operational @ param to The address of the tokens recipient @ param value The amount of token to be transferred @ return Whether the transfer was successful or not
Crowdfunding : @ notice Create tokens when funding is active . @ dev Required state : Funding Active @ dev State transition : > Funding Success ( only if cap reached )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
return the smaller of the two inputs ( a or b )
Constructor
a new ' block ' to be mined
readjust the target by 5 percent
this is a recent ethereum block hash , used to prevent pre mining future blocks
the number of zeroes the digest of the Po W solution requires . Auto adjusts
reward is cut in half every reward era ( as tokens are mined )
help debug mining software
help debug mining software
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Creates amount token to to . Must only be called by the owner ( Master Chef ) .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
transfer , mint and burn are the only functions where the balances are modified , so it is there that the snapshots are updated . Note that the update happens before the balance change , with the pre modified value . The same is true for the total supply and mint and burn .
overrides
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Internal transfer , only can be called by this contract
Return balance of the owner
Approve the spender ammount set allowance for other address allows spender to spend no more than value tokens on your behalf
generate a public event on the blockchain
This is a constructor function which means the following function name has to match the contract name declared above
Approves and then calls the receiving contract
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Initializes contract with initial supply tokens to the creator of the contract
Send coins
This unnamed function is called whenever someone tries to send ether to it
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
returns next minimal bid or final bid on auctions that already end
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Adds an provided value to the Set
Removes the given value from the set
Returns true iff the value is contained in the set
Returns an array containing all the ids in the set
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
send ether ( wei ) to the fund collection wallet override to create custom fund forwarding mechanisms
overriding Crowdsale # valid Purchase to add extra cap logic @ return true if investors can buy at the moment
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
New epoch can be started if : Current round is 9 Curen epoch < 10 Voting is over
Add prop . with id : id
Turns project ON and OFF
Returns proj . weight
Returns proj . status
Vote for proj . using id : id
Shows currently winning proj
Activates voting requires round 9
Deactivates voting
sqrt root func
B A L L O T NOM token emission functions Pays 1 . 00000000 from epoch fund to KYC passed user Uses payout ( ) , bitmask check ( ) , bitmask add ( ) adds 4 to bitmask
Pays . 555666XX from epoch fund to user approved phone ; Uses payout ( ) , bitmask check ( ) , bitmask add ( ) adds 2 to bitmask
Pays . 555666XX from epoch fund to KYC user in new epoch ; Uses payout ( ) , bitmask check ( ) , bitmask add ( ) adds 2 to bitmask
Pays random number from epoch fund Uses payout ( )
Pays [ amount ] of money to [ to ] account from epoch fund Counts amount + 30 % + 10 % Updating total Supply Pays to balance and 2 funds Refreshes dec [ ] Emits event
Withdraw amount from team fund to given address
Withdraw amount from redenom dao fund to given address
Run this on every change of user balance Refreshes dec [ ] array Takes initial and new ammount while transaction must be called for each acc .
BITMASK Adding bit to bitmask checks if already set
Removes bit from bitmask checks if already set
Checks whether some bit is present in BM

Redenominates
Refresh user acc Pays dividends if any
Returns current multipl . based on round Returns current multiplier based on round
Removes burned values 123 > 120 Returns fixed
Returns rest
ERC20 total Supply :
ERC20 balance Of : Get the token balance for account token Owner
ERC20 allowance : Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
ERC20 transfer : Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
ERC20 approve : Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
ERC20 transfer From : Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH https : github . com Consen Sys Ethereum Development Best Practices wiki Fallback functions and the fundamental limitations of using send ( ) in Ethereum & Solidity
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Starmid Exchange functions
Nodes
Star Coin Exchange
Starmid exchange
Dividends ( 10 % to stock owner , 2 , 5 % to node owner per annum )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
solhint disable previous line no empty blocks
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Owner and Admin can change the admin address . Address can also be set to 0 to ' disable ' it .
Owner and Admin can change the operations address . Address can also be set to 0 to ' disable ' it .
Implementation of the standard transfer method that takes into account the finalize flag .
Implementation of the standard transfer From method that takes into account the finalize flag .
Implement a burn function to permit msg . sender to reduce its balance which also reduces token Total Supply
Finalize method marks the point where token transfers are finally allowed for everybody .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Internal
Administration
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
function to get the balance of a specific address
Transfer the balance from owner ' s account to another account
Send tokens amount of tokens from address from to address to The transfer From method is used for a withdraw workflow , allowing contracts to send tokens on your behalf , for example to " deposit " to a contract address and or to charge fees in sub currencies ; the command should fail unless the from account has deliberately authorized the sender of the message via some mechanism ; we propose these standardized AP Is for approval :
Allow spender to withdraw from your account , multiple times , up to the tokens amount . If this function is called again it overwrites the current allowance with value .
set new ico stage
set withdrawal wallet address
payable to send tokens who is paying to the contract
function to get back the token from contract to owner
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Function that is called when a user or another contract wants to transfer funds .
Function that is called when a user or another contract wants to transfer funds .
Standard function transfer similar to ERC20 transfer with no data . Added due to backwards compatibility reasons .
assemble the given address bytecode . If bytecode exists then the addr is a contract .
function that is called when transaction target is an address
function that is called when transaction target is a contract
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
fallback function can be used to buy tokens
low level token purchase function
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Init contract by setting Emission Provider Wallet address that can be associated and have an account for this contract @ dev Allowed only for contract owner @ param customer Emission Provider address @ return code
Call selfdestruct when contract is not needed anymore . Also takes a list of tokens that can be associated and have an account for this contract @ dev Allowed only for contract owner @ param tokens an array of tokens addresses
@ dev Call destroy ( address [ ] tokens ) instead
Deposits some amount of tokens on wallet ' s account using ERC20 tokens @ dev Allowed only for rewards @ param asset an address of token @ param from an address of a sender who is willing to transfer her resources @ param amount an amount of tokens ( resources ) a sender wants to transfer @ return code
Withdraws some amount of tokens from wallet ' s account using ERC20 tokens @ dev Allowed only for rewards @ param asset an address of token @ param to an address of a receiver who is willing to get stored resources @ param amount an amount of tokens ( resources ) a receiver wants to get @ return code
Approve some amount of tokens from wallet ' s account using ERC20 tokens @ dev Allowed only for rewards @ param asset an address of token @ param to an address of a receiver who is willing to get stored resources @ param amount an amount of tokens ( resources ) a receiver wants to get @ return code
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
set total number of members
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
allow withdrawal of tokens anytime
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
fallback function not use to buy token
For test only
For test only
For test only
For test only
For test only
low level token purchase function
for test only
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
magic trade balancing algorithm
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Initializes contract with initial supply tokens to the creator of the contract
Send coins
This unnamed function is called whenever someone tries to send ether to it
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
encode a uint112 as a UQ112x112
divide a UQ112x112 by a uint112 , returning a UQ112x112
TESTED
TEST
TESTED
TESTED
TESTED
TESTED
TESTED
TESTED
TESTED
TESTED
TESTED
TESTED
TESTED
TESTED
TESTED
TESTED
TESTED
TESTED
TESTED
returns sorted token addresses , used to handle return values from pairs sorted in this order
calculates the CREATE2 address for a pair without making any external calls
fetches and sorts the reserves for a pair
given some amount of an asset and pair reserves , returns an equivalent amount of the other asset
given an input amount of an asset and pair reserves , returns the maximum output amount of the other asset
performs chained get Amount Out calculations on any number of pairs
VIEWS
MUTATIVE FUNCTIONS
RESTRICTED FUNCTIONS
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Returns total supply of issued tokens
Returns balance of address
Transfers tokens from your address to other
Approve other address to spend tokens on your account
Approve and then communicate the approved contract in a single tx
A contract attempts to get the coins
Initializes contract
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
parse Int
parse Int ( parse Float 10 ^ b )
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license Duplicate Solidity ' s ecrecover , but catching the CALL return value
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license
@ notice Create minted Amount tokens and send it to target @ param target Address to receive the tokens @ param minted Amount the amount of tokens it will receive
low level token purchase function
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
@ dev Does a byte by byte lexicographical comparison of two strings . @ return a negative number if a is smaller , zero if they are equal and a positive numbe if b is smaller .
@ dev Compares two strings and returns true iff they are equal .
@ dev Finds the index of the first occurrence of needle in haystack
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
function to start the Token Sale start the token sale at star Block
function to stop the Token Swap stop the token swap at end Block
this function is to add the previous token sale balance . set the accumulated balance of wei Raised
set the wallet address set the wallet at wallet
set the minimum contribution to min Contrib
@ return true if token swap event has ended
@ return true if the token swap contract is active .
@ return true if the transaction can buy tokens
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
function for buying tokens
Withdraw funds from contract balance to secure hardware wallet
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Time limited deposit of ether
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
1eth new Rate tokens

amount in FNK ,
amount , freeze Amount in FNK
buy tokens directly

Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
State transitions for names : Open > Auction ( start Auction ) Auction > Reveal Reveal > Owned Reveal > Open ( if nobody bid ) Owned > Open ( release Deed or invalidate Name )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
babylonian method ( https : en . wikipedia . org wiki Methods of computing square roots # Babylonian method )
returns sorted token addresses , used to handle return values from pairs sorted in this order
calculates the CREATE2 address for a pair without making any external calls
fetches and sorts the reserves for a pair
given some amount of an asset and pair reserves , returns an equivalent amount of the other asset
given an input amount of an asset and pair reserves , returns the maximum output amount of the other asset
given an output amount of an asset and pair reserves , returns a required input amount of the other asset
performs chained get Amount Out calculations on any number of pairs
performs chained get Amount In calculations on any number of pairs
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
helper methods for siphoning
private methods
helper methods for siphoning
private methods
to be called by backend
@ notice Calls whenever an error occurs , logs it or reverts transaction
@ notice For debugging purposes when using solidity online browser , remix and sandboxes
@ notice Get the current timestamp from last mined block
@ notice Get the balance in weis of this contract
called by the owner on emergency , triggers stopped state
called by the owner on end of emergency , returns to normal state
FUNCTIONS fallback function can be used to buy tokens
Deactivated to save ICO contract deployment gas cost
Deactivated to save ICO contract deployment gas cost
Checks whether a given wallet is authorized to ICO investing
adds an address that will have the right to add investors
removes a manager address
@ notice The Token contract
@ notice unlock token for trading
@ lock token from trading during ICO
@ notice transfer tokens to given address @ param to { address } address or recipient @ param value { uint } amount to transfer @ return { bool } true if successful
@ notice transfer tokens from given address to another address @ param from { address } from whom tokens are transferred @ param to { address } to whom tokens are transferred @ parm value { uint } amount of tokens to transfer @ return { bool } true if successful
@ notice to query balance of account @ return owner { address } address of user to query balance
@ notice to query of allowance of one user to the other @ param owner { address } of the owner of the account @ param spender { address } of the spender of the account @ return remaining { uint } amount of remaining allowance
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
caculate amount of token in presale stage
caculate amount of token in crowdsale stage
check if the goal is reached
add new team percentage of tokens
@ return true if crowdsale event has ended
called by the owner on emergency , triggers stopped state
called by the owner on end of emergency , returns to normal state
Crowdfund state machine management .
add new team percentage of tokens and lock their release time
generate team tokens in accordance with percentage of total issue tokens , not preallocate
fallback function can be used to buy tokens
low level token purchase function
should be called after crowdsale ends , to do some extra finalization work
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
TODO : Change the name of the constructor
creates the token to be sold . TODO : Change the name of the token from QBT token to something else
fallback function can be used to buy tokens
determine the rate of the token w . r . t . time elapsed
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
@ return true if crowdsale event has ended
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
State transitions for names : Open > Auction ( start Auction ) Auction > Reveal Reveal > Owned Reveal > Open ( if nobody bid ) Owned > Open ( release Deed or invalidate Name )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Interface declaration
Interface marker
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
ERC223 Token improvement to send tokens to smart contracts
assemble the given address bytecode . If bytecode exists then the addr is a contract .
function that is called when transaction target is a contract
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Return how much tokens will be minted as per algorithm . Each year 10 % tokens will be reduced
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ dev Contract constructor
@ dev Contract constructor
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Sender : Corporation >
Send coins must have identity Approved + can ' t sell last token using transfer
Allow another contract to spend some tokens in your behalf
Approve and then comunicate the approved contract in a single tx
A contract attempts to get the coins
This unnamed function is called whenever someone tries to send ether to it
solhint disable previous line no empty blocks
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Internal transfer , only can be called by this contract
@ notice freeze ? Prevent | Allow target from sending & receiving tokens @ param target Address to be frozen @ param freeze either to freeze it or not
@ notice Allow users to buy tokens for new Buy Price eth and sell tokens for new Sell Price eth @ param new Sell Price Price the users can sell to the contract @ param new Buy Price Price users can buy from the contract
@ notice Buy tokens from contract by sending ether
@ notice Sell amount tokens to contract @ param amount amount of tokens to be sold
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Data is uploaded over many transactions , until the whole file is stored in the contract
If a mistake is done during upload , reverse using erase ( )
This loads the entire file as a single byte array . Since it does not affect the contract state , there are no gas costs
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
parse Int
parse Int ( parse Float 10 ^ b )
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license Duplicate Solidity ' s ecrecover , but catching the CALL return value
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license
Returns the memory address of the first byte of the first occurrence of needle in self , or the first byte after self if not found .
Returns the memory address of the first byte after the last occurrence of needle in self , or the address of self if not found .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Buy tokens from contract by sending ether
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
This unnamed function is called whenever someone tries to send ether to it
Internal Mint Function Only
parse Int
parse Int ( parse Float 10 ^ b )
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license Duplicate Solidity ' s ecrecover , but catching the CALL return value
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license
Constructor
Change bet expected times
Change bet expected start time
Change bet expected end time
Determine the outcome manually , immediately
Callback from Oraclize
Returns the total amounts betted for the sender
Returns whether a user has withdrawn money or not .
Returns whether winning collections are now available , or not .
Returns true if we can bet ( in betting window )
Function for user to bet on launch outcome
Empty remainder of the value in the contract to the owners .
Performs payout to owners
Cancel bet and relase all the bets back to the betters if , for any reason , payouts cannot be completed . ( For example Oracle fails . ) Triggered by owners .
Fallback function in case someone sends ether to the contract so it doesn ' t get lost . Could be used by us owners as buffer value in case payouts fail .
Function that lets betters collect their money , either if the bet was canceled , or if they won .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
bool public is Locked true ;
modifier illegal When Locked ( ) { require ( ! is Locked | | msg . sender owner ) ; ; } should be called by crowd Sale when crowd Sale is finished function unlock ( ) only Owner public { is Locked true ; }
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Owner and Admin can change the admin address . Address can also be set to 0 to ' disable ' it .
Owner and Admin can change the operations address . Address can also be set to 0 to ' disable ' it .
Implementation of the standard transfer From method that takes into account the finalize flag .
Implementation of the standard transfer method that takes into account the finalize flag .
Finalize method marks the point where token transfers are finally allowed for everybody .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
fallback function can be used to buy tokens
low level token purchase function
@ return true if the transaction can buy tokens , otherwise false
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
below function can be used when you want to send every recipeint with different number of tokens
this function can be used when you want to send same number of tokens to all the recipients
this function is callable by anyone
this function is callable by anyone
State transitions for names : Open > Auction ( start Auction ) Auction > Reveal Reveal > Owned Reveal > Open ( if nobody bid ) Owned > Open ( release Deed or invalidate Name )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
solhint disable previous line no empty blocks
via https : github . com oraclize ethereum api blob master oraclize API 0 . 5 . sol
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Buy tokens from contract by sending ether
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
called by the owner on emergency , triggers stopped state
called by the owner on end of emergency , returns to normal state
withdraw accumulated balance , called by payee
Constructor
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
fallback function can be used to buy tokens
change wallet
change rate
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
reduce sender balance and Token total supply
reduce address balance and Token total supply
increase sender balance and Token total supply
calculate the amount of tokens an address can use
override function using can Transfer on the sender address
transfer tokens from one address to another
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
in case of rounding errors converting between vault tokens and underlying value
Safe RLY transfer function , just in case pool does not have enough RLY due to rounding error
how much are our shares of the underlying vault worth relative to the deposit value ? returns value denominated in vault tokens
transfer accumulated yield to treasury , update total Deposits to ensure available Yield following harvest is 0 , and increase accumulated rally rewards harvest fails if we ' re unable to fund rewards
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Add a new lp to the pool . Can only be called by the owner . XXX DO NOT add the same LP token more than once . Rewards will be messed up if you do .
Update the given pool ' s CITY allocation point . Can only be called by the owner .
Return reward multiplier over the given from to to block .
View function to see pending CIT Ys on frontend .
Update reward vairables for all pools . Be careful of gas spending !
Update reward variables of the given pool to be up to date .
Update reward variables of the given pool to be up to date .
Deposit LP tokens to Travel Agency for CITY allocation .
Withdraw LP tokens from Master Chef .
Withdraw without caring about rewards . EMERGENCY ONLY .
Safe city transfer function , just in case if rounding error causes pool to not have enough CIT Ys .
Update dev address by the previous dev .
The constractor of contract . . .
fallback function can be used to buy tokens
vault finalization task , called when owner calls finalize ( )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Generates a random number from 0 to 100 based on the last block hash
fallback function can be used to buy tokens or participate in pre ico
function to get current rate for ICO purchases
low level token purchase function
send ether to the fund collection wallet
@ return true if the transaction can buy tokens from ICO
@ return true if ICO event has ended
This function should only be called in the unfortunate case that Enjin should refund from a different address .
Use with caution use this withdraw function if you do not trust the contract ' s token setting . You can only use this once , so if you put in the wrong token address you will burn the Enjin on the contract .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
parse Int
parse Int ( parse Float 10 ^ b )
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license Duplicate Solidity ' s ecrecover , but catching the CALL return value
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license
Constructor
Change bet expected times
Change bet expected start time
Change bet expected end time
Determine the outcome manually , immediately
Callback from Oraclize
Returns the total amounts betted for the sender
Returns whether a user has withdrawn money or not .
Returns whether winning collections are now available , or not .
Returns true if we can bet ( in betting window )
Function for user to bet on launch outcome
Empty remainder of the value in the contract to the owners .
Performs payout to owners
Cancel bet and relase all the bets back to the betters if , for any reason , payouts cannot be completed . ( For example Oracle fails . ) Triggered by owners .
Fallback function in case someone sends ether to the contract so it doesn ' t get lost . Could be used by us owners as buffer value in case payouts fail .
Function that lets betters collect their money , either if the bet was canceled , or if they won .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Owner can transfer out any accidentally sent ERC20 tokens
Get the airdrop token balance for account token Owner
internal private functions
Must not be used inside the functions that have no Value ( ) modifier !
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Internal transfer , only can be called by this contract
Internal transfer , only can be called by this contract
Transfer Eth
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Interface marker
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
at initialization , setup the owner
The function without name is the default function that is called whenever anyone sends funds to a contract
checks if the goal or time limit has been reached and ends the campaign
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Owner functions
solhint disable previous line no empty blocks
Internal transfer , only can be called by this contract
@ notice Create minted Amount tokens and send it to target @ param target Address to receive the tokens @ param minted Amount the amount of tokens it will receive
@ notice freeze ? Prevent | Allow target from sending & receiving tokens @ param target Address to be frozen @ param freeze either to freeze it or not
@ notice Allow users to buy tokens for new Buy Price eth and sell tokens for new Sell Price eth @ param new Sell Price Price the users can sell to the contract @ param new Buy Price Price users can buy from the contract
@ notice Buy tokens from contract by sending ether
@ notice Sell amount tokens to contract @ param amount amount of tokens to be sold
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Called by the owner in emergency , triggers stopped state
@ notice Called by the owner to end of emergency , returns to normal state
@ notice set the handle of the token contract @ param token { Token } address of the token contract @ return { bool } true if successful
@ notice set the product completion date for release of dev tokens
@ notice to release tokens of the team according to vesting schedule @ param recipient { address } of the recipient of token transfer @ param tokens To Transfer { uint } amount of tokens to transfer
@ notice to release tokens of the company according to vesting schedule @ param recipient { address } of the recipient of token transfer @ param tokens To Transfer { uint } amount of tokens to transfer
Crowd Funding { constructor } @ notice fired when contract is crated . Initializes all needed variables for presale 1 .
@ notice return number of contributors for all campaigns @ return { uint } number of contributors in each campaign and total number
@ notice advances the step of campaign to presale 2 contract is deployed in presale 1 mode
@ notice advances step of campaign to main sale @ param ratio it will be amount of dollars for one ether with two decimals . two decimals will be passed as next sets of digits . eg . $ 300 . 25 will be passed as 30025
@ notice to populate website with status of the sale
{ fallback function } @ notice It will call internal function which handles allocation of Ether and calculates tokens .
@ notice in case refunds are needed , money can be returned to the contract @ param return Percentage { uint } percentage of return in respect to first presale . e . g 75 % would be passed as 75
@ notice It will be called by owner to start the sale block numbers will be calculated based on current block time average .
@ notice Due to changing average of block time this function will allow on adjusting duration of campaign closer to the end allow adjusting campaign length to 70 days , equivalent of 433440 blocks at 4 . 3 blocks per minute @ param block number of blocks representing duration
@ notice It will be called by fallback function whenever ether is sent to it @ param contributor { address } address of contributor @ return res { bool } true if transaction was successful
@ notice This function will finalize the sale . It will only execute if predetermined sale time passed or all tokens were sold
@ notice this function can be used by owner to update contribution address in case of using address from exchange or incompatible wallet @ param contributor Old old contributor address @ param contributor New new contributor address
@ notice called to send tokens to contributors after ICO . @ param backer { address } address of beneficiary @ return true if successful
@ notice contributors can claim tokens after public ICO is finished tokens are only claimable when token address is available .
@ notice this function can be called by admin to claim user ' s token in case of difficulties @ param backer { address } user address to claim tokens for
@ notice allow refund when ICO failed In such a case contract will need to be funded . Until contract is funded this function will throw
@ notice refund non compliant member @ param contributor { address } of refunded contributor
@ notice Failsafe drain to individual wallet
@ notice Failsafe token transfer
@ notice The Token constructor @ param crowd Sale Address { address } address of crowdsale contract @ param migration Master { address } address of authorized migration person
@ notice unlock tokens for trading
@ notice lock tokens in case of problems
@ notice set authorized party @ param authorized { address } of an individual to get authorization
@ notice Migrate tokens to the new token contract . @ dev Required state : Operational Migration @ param value The amount of token to be migrated
@ notice Set address of migration target contract and enable migration process . @ dev Required state : Operational Normal @ dev State transition : > Operational Migration @ param agent The address of the Migration Agent contract
@ notice mint new tokens with max of 197 . 5 millions @ param target { address } of receipt @ param minted Amount { uint } amount of tokens to be minted @ return { bool } true if successful
@ notice transfer tokens to given address @ param to { address } address or recipient @ param value { uint } amount to transfer @ return { bool } true if successful
@ notice transfer tokens from given address to another address @ param from { address } from whom tokens are transferred @ param to { address } to whom tokens are transferred @ param value { uint } amount of tokens to transfer @ return { bool } true if successful
@ notice to query balance of account @ return owner { address } address of user to query balance
@ notice to query of allowance of one user to the other @ param owner { address } of the owner of the account @ param spender { address } of the spender of the account @ return remaining { uint } amount of remaining allowance
Initializes contract with initial supply tokens to the creator of the contract
Send coins
This unnamed function is called whenever someone tries to send ether to it
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
574 HCL Tokens per 1 ETH
Owner can transfer out any accidentally sent ERC20 tokens
@ return true if crowdsale event has ended
low level token purchase function
transfer ownership of the token to the owner of the presale contract
fallback function can be used to buy tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Function to start the Game Only the owner can call this function The game can ' t be stopped after this action
Return the value of ' game Started ' to know if the game has started
Get the right amount when playing ( or not ) the game With possible burn and reward
Play , and if winning multiply by 10 if you lose and the sender address is not the liquidity pool then the amount doesn ' t change
Return the random amount to burn based on the amount we want to transfer . Between 1 % and 10 % .
Play the game : 1 % chance of winning and returning true .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are not allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
State transitions for names : Open > Auction ( start Auction ) Auction > Reveal Reveal > Owned Reveal > Open ( if nobody bid ) Owned > Open ( release Deed or invalidate Name )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
babylonian method ( https : en . wikipedia . org wiki Methods of computing square roots # Babylonian method )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
called by the owner on emergency , triggers stopped state
called by the owner on end of emergency , returns to normal state
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
solhint disable previous line no empty blocks
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .


unsold tokens can be claimed by owner after sale ends
ref : github . com Open Zeppelin zeppelin solidity blob master contracts math Safe Math . sol
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
fallback function can be used to buy tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Initializes contract with initial supply tokens to the creator of the contract
Send coins
This unnamed function is called whenever someone tries to send ether to it
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
define the other cards which might play in defining the winner .
event pushifo ( uint8 , uint8 , uint8 , uint8 , uint8 ) ; resets game
returns 0 if lose , 1 if win , 2 if equal if winner found immediately sets winner values
all contract calls are banned from buying
in case there is a revert bug in the poker contract allows winner to get paid without calling poker . should never be called follows all normal rules of game .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Initializes contract with initial supply tokens to the creator of the contract
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
See comment for " secret Signer " variable .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Only callers that hold FRT can rebase .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
fallback function can be used to buy tokens
low level token purchase function
@ return true if pre ico crowdsale event has ended
@ return true if ico crowdsale event has ended
creates the token to be sold . override this method to have crowdsale of a specific mintable token .
Override this method to have a way to add business logic to your crowdsale when buying
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
creates the token to be sold . override this method to have crowdsale of a specific mintable token .
enable token tranferability
disable token tranferability
Presale related operations set total pre sale sold token can not be changed once the ico is enabled Ico cap is determined by Sale Cap + Pre Sale Cap sold Pre Sale Tokens
transfer pre sale tokend to investors sold Pre Sale Tokens need to be set beforehand , and bigger than 0 the total amount to tranfered need to be less or equal to sold Pre Sale Tokens
ICO related operations set multisign wallet
delegate vesting contract owner
set contribution dates
enable ICO , need to be true to actually start ico multisign wallet need to be set , because once ico started , invested funds is transfered to this address once ico is enabled , following parameters can not be changed anymore : start Time , end Time , sold Pre Sale Tokens
fallback function can be used to buy tokens
low level token purchase function
unsold ico tokens transfer automatically in end Ico function transfer Unsold Ico Tokens ( ) only Owner { require ( has Ended ( ) ) ; require ( ico Sold Tokens < ico Cap ) ; uint256 unsold Tokens ico Cap . sub ( ico Sold Tokens ) ; token . transfer ( multisign Wallet , unsold Tokens ) ; } @ return true if the transaction can buy tokens
end ico by owner , not really needed in normal situation
@ return true if crowdsale event has ended
drain all eth for owner in an emergency situation
vesting constructor
set vesting token address
create vesting by introducing beneficiary addres , total token amount , start date , duration for each vest period and number of periods
get current user total granted token amount
get user available vesting amount , total amount received amount
get list of vesting users address
vest
drain all eth and tokens to owner in an emergency situation
Must not be used inside the functions that have no Value ( ) modifier !
State transitions for names : Open > Auction ( start Auction ) Auction > Reveal Reveal > Owned Reveal > Open ( if nobody bid ) Owned > Open ( release Deed or invalidate Name )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
trigger rewarding a miner with STA token :
Function to access name of token .
Function to access symbol of token .
Function to access decimals of token .
Function to access total supply of tokens .
Function that is called when a user or another contract wants to transfer funds .
Standard function transfer similar to ERC20 transfer with no data . Added due to backwards compatibility reasons .
assemble the given address bytecode . If bytecode exists then the addr is a contract .
function that is called when transaction target is an address
function that is called when transaction target is a contract
setting ICO address for allowing execution from the ICO contract
Function to access max supply of tokens .
Function to access name of token .
Function to access symbol of token .
Function to access decimals of token .
Function to access total supply of tokens .
Function that is called when a user or another contract wants to transfer funds .
Standard function transfer similar to ERC20 transfer with no data . Added due to backwards compatibility reasons .
assemble the given address bytecode . If bytecode exists then the addr is a contract .
function that is called when transaction target is an address
function that is called when transaction target is a contract
setting ICO address for allowing execution from the ICO contract
mint new tokens
constructor
trigger rewarding the miner with STA token
Receiving STA from miners during and after ICO
Receiving ETH
send STB to the miners who returned STA tokens after successful ICO
send STB to the donors after successful ICO
send funds to the ICO beneficiary account after successful ICO
refund ETH after unsuccessful ICO
send owner ' s funds to the ICO owner after ICO
send STB to the ICO owner after ICO
Disable direct payments
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .


Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ dev Constructor
Fallback method
@ dev Create new tokens and allocate them to an address . Only callably by a crowdsale contract @ param receiver Address of receiver @ param amount Number of tokens to issue .
@ dev Set the contract that can call release and make the token transferable . @ param crowdsale Agent crowdsale contract address
@ dev One way function to release the tokens to the wild . Can be called only from the release agent that is the final ICO contract . It is only called if the crowdsale has been success ( first milestone reached ) .
@ dev Tranfer tokens to address @ param to dest address @ param value tokens amount @ return transfer result
@ dev Tranfer tokens from one address to other @ param from source address @ param to dest address @ param value tokens amount @ return transfer result
@ dev Tokens balance @ param owner holder address @ return balance amount
@ dev Approve transfer @ param spender holder address @ param value tokens amount @ return result
@ dev Token allowance @ param owner holder address @ param spender spender address @ return remain amount
@ dev buyout method @ param holder holder address @ param amount wei for buyout tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ dev Courtesy of https : github . com gnosis Multi Sig Wallet blob master contracts Multi Sig Wallet . sol This method allows the pre defined recipient to call other smart contracts .
fallback function can be used to buy tokens
low level token purchase function mapping ( address > uint ) public BALANCE ;
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
@ return true if crowdsale event has ended
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Creates amount token to to . Must only be called by the owner ( Master Chef ) .
Add a new lp to the pool . Can only be called by the owner . XXX DO NOT add the same LP token more than once . Rewards will be messed up if you do .
Update the given pool ' s VOTE allocation point . Can only be called by the owner .
Return reward multiplier over the given from to to block .
View function to see pending VOTE on frontend .
Update reward vairables for all pools . Be careful of gas spending !
Update reward variables of the given pool to be up to date .
Update reward variables of the given pool to be up to date .
Update reward variables of the given pool to be up to date .
Deposit LP tokens to Master Chef for VOTE allocation .
Withdraw LP tokens from Master Chef .
Withdraw without caring about rewards . EMERGENCY ONLY .
Safe VOTE transfer function , just in case if rounding error causes pool to not have enough VOTE .
Update dev address by the previous dev .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Crowdsale Stage Management
Change the current rate
Change the current rate
Token Purchase
Finish : Mint Extra Tokens as needed before finalizing the Crowdsale .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Transactions Constructor
Calls Return basic information about the contract
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Interface declaration
Interface marker
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Checks if the Token Sale has started
Checks if the Token Sale has ended
Checks if the minimum goal was reached
Checks if the maximum goal was reached
Accepts ETH while Token Sale is active or until the maximum goal is reached
Transfer ETH to loft VR Offline Project wallet
Refund ETH in case the minimum goal was not reached during the Token Sale Refund will be available during a two month window after the Token Sale
In the case that there is any ETH left unclaimed after the two month refund window , Send the ETH to the loft VR Offline Project Wallet
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
solhint disable previous line no empty blocks
stake visibility is public as overriding LP Token Wrapper ' s stake ( ) function
naps stuff
Returns the number of naps token to boost
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Function to access name of token .
Function to access symbol of token .
Function to access decimals of token .
Function to access total supply of tokens .
Function that is called when a user or another contract wants to transfer funds .
Function that is called when a user or another contract wants to transfer funds .
Standard function transfer similar to ERC20 transfer with no data . Added due to backwards compatibility reasons .
assemble the given address bytecode . If bytecode exists then the addr is a contract .
function that is called when transaction target is an address
function that is called when transaction target is a contract
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Creates amount token to to . Must only be called by the owner ( Master Chef ) .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Initializes contract with initial supply tokens to the creator of the contract
Send coins
This unnamed function is called whenever someone tries to send ether to it
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Interface declaration
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
solhint disable previous line no empty blocks
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
The auctioneer has to call this function while supplying the 1th to start the auction
Anyone can bid by calling this function and supplying the corresponding eth
Once the auction end has been reached , we distribute the ether .
Once the auction has finished , the bidders can withdraw the eth they put Winner will withdraw the auctioned Eth Auctioneer will withdraw the highest bid from the winner Second highest bidder will already have his balance at 0 The rest of the bidders get their money back
Call thisfunction to know how many seconds remain for the auction to end
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
the gravatar at position 0 of gravatars [ ] is fake it ' s a mythical gravatar that doesn ' t really exist dani will invoke this function once when this contract is deployed but then no more
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
creates the token to be sold . override this method to have crowdsale of a specific mintable token .
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
@ return true if crowdsale event has ended
We ' re overriding the fund forwarding from Crowdsale . In addition to sending the funds , we want to call the Refund Vault deposit function
if crowdsale is unsuccessful , investors can claim refunds here
vault finalization task , called when owner calls finalize ( )
overriding Crowdsale # valid Purchase to add extra cap logic @ return true if investors can buy at the moment
overriding Crowdsale # has Ended to add cap logic @ return true if crowdsale event has ended
overriding Crowdsale # valid Purchase to add extra logic @ return true if investors can buy at the moment
overriding Crowdsale # buy Tokens to add a dynamic rate that will match bonus token rewards
overriding Finalizable Crowdsale # finalization to prevent further minting after ICO end
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Initializes contract with initial supply tokens to the creator of the contract
Internal transfer , only can be called by this contract
@ notice Create minted Amount tokens and send it to target @ param target Address to receive the tokens @ param minted Amount the amount of tokens it will receive
@ notice freeze ? Prevent | Allow target from sending & receiving tokens @ param target Address to be frozen @ param freeze either to freeze it or not
@ notice Allow users to buy tokens for new Buy Price eth and sell tokens for new Sell Price eth @ param new Sell Price Price the users can sell to the contract @ param new Buy Price Price users can buy from the contract
@ notice Buy tokens from contract by sending ether
@ notice Sell amount tokens to contract @ param amount amount of tokens to be sold
@ notice with Draw amount ETH to contract @ param amount amount of ETH to be sent
State transitions for names : Open > Auction ( start Auction ) Auction > Reveal Reveal > Owned Reveal > Open ( if nobody bid ) Owned > Open ( release Deed or invalidate Name )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
solhint disable previous line no empty blocks
stake visibility is public as overriding LP Token Wrapper ' s stake ( ) function
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
send ether ( wei ) to the fund collection wallet override to create custom fund forwarding mechanisms
overriding Crowdsale # valid Purchase to add extra cap logic @ return true if investors can buy at the moment
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
State transitions for names : Open > Auction ( start Auction ) Auction > Reveal Reveal > Owned Reveal > Open ( if nobody bid ) Owned > Open ( release Deed or invalidate Name )
fallback function can be used to buy tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Internal transfer , only can be called by this contract
@ notice Create minted Amount tokens and send it to target @ param target Address to receive the tokens @ param minted Amount the amount of tokens it will receive
@ notice freeze ? Prevent | Allow target from sending & receiving tokens @ param target Address to be frozen @ param freeze either to freeze it or not
@ notice Allow users to buy tokens for new Buy Price eth and sell tokens for new Sell Price eth @ param new Sell Price Price the users can sell to the contract @ param new Buy Price Price users can buy from the contract
@ notice Buy tokens from contract by sending ether
@ notice Sell amount tokens to contract @ param amount amount of tokens to be sold
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
This function registers a new client , and can be used to add funds or change ratio
This function is used to stop using the service
This function is used to change the phone number in the service
Used to charge a client
used to charge for a single time period , in case client doesnt have enough dosh to pay all fees
This function is used to withdraw ether
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
default function , map admin
setup the Pre Sale parameters
setup success parameters if proyect funding succeed .
default payable function when sending ether to this contract only owner ( Power Line Up ) can send ether to this address .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
constructor
forward all eth to founder
only owner can kill
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ dev Courtesy of https : github . com gnosis Multi Sig Wallet blob master contracts Multi Sig Wallet . sol This method allows the pre defined recipient to call other smart contracts .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
solhint disable previous line no empty blocks
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ return total amount of tokens
@ param owner The address from which the balance will be retrieved @ return The balance
Internal transfer , only can be called by this contract
@ notice send value token to to from msg . sender @ param to The address of the recipient @ param value The amount of token to be transferred @ return Whether the transfer was successful or not
@ notice send value token to to from from on the condition it is approved by from @ param from The address of the sender @ param to The address of the recipient @ param value The amount of token to be transferred @ return Whether the transfer was successful or not
@ notice msg . sender approves addr to spend value tokens @ param spender The address of the account able to transfer the tokens @ param value The amount of wei to be approved for transfer @ return Whether the approval was successful or not
@ param owner The address of the account owning tokens @ param spender The address of the account able to transfer the tokens @ return Amount of remaining tokens allowed to spent
@ notice Create minted Amount tokens and send it to target @ param target Address to receive the tokens @ param minted Amount the amount of tokens it will receive
@ notice Buy tokens from contract by sending ether
@ notice Sell amount tokens to contract @ param amount Amount of tokens to be sold
@ notice Allow users to buy tokens for new Buy Price eth and sell tokens for new Sell Price eth @ param new Sell Price Price the users can sell to the contract @ param new Buy Price Price users can buy from the contract
@ notice Send mined Amount to target as a reward for mining @ param target The address of the recipient @ param mined Amount The amount of reward tokens
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Approves and then calls the receiving contract
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Initializes contract with initial supply tokens to the creator of the contract
Send coins
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Function used by ICO Contract to send ether to wallet
State transitions for names : Open > Auction ( start Auction ) Auction > Reveal Reveal > Owned Reveal > Open ( if nobody bid ) Owned > Open ( release Deed or invalidate Name )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Fallback method
@ dev Set price in SNTR tokens for storing @ param price price in SNTR tokens
@ dev Set SNTR token address @ param token Address SNTR tokens contract
@ dev Register file hash in contract , web3 integration @ param hash SHA 256 file hash
@ dev Payable registration in SNTR tokens @ param hash SHA 256 file hash
@ dev Internal registation method @ param hash SHA 256 file hash
@ dev Check hash existance @ param hash SHA 256 file hash @ return Returns true if hash exist
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
What ' s my balance ?
What is the balance of a particular account ?
Transfer the balance from owner ' s account to another account
Send value amount of tokens from address from to address to The transfer From method is used for a withdraw workflow , allowing contracts to send tokens on your behalf , for example to " deposit " to a contract address and or to charge fees in sub currencies ; the command should fail unless the from account has deliberately authorized the sender of the message via some mechanism ; we propose these standardized AP Is for approval :
Allow spender to withdraw from your account , multiple times , up to the value amount . If this function is called again it overwrites the current allowance with value .
internal private functions
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Assumed that caller checks against available funds in vault
return the smaller of the two inputs ( a or b )
Constructor
a new ' block ' to be mined
https : en . bitcoin . it wiki Difficulty # What is the formula for difficulty . 3F as of 2017 the bitcoin difficulty was up to 17 zeroes , it was only 8 in the early days , we keep this for legacy readjust the target by 5 percent
this is a recent ethereum block hash , used to prevent pre mining future blocks
the number of zeroes the digest of the Po W solution requires . Auto adjusts
100m coins total reward begins at 250 and is cut in half every reward era ( as tokens are mined )
help debug mining software
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Controller only function for creating additional rewards from dust
Withdraw partial funds , normally used with a vault withdrawal
Withdraw all funds , normally used when migrating strategies
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Initializes contract with initial supply tokens to the creator of the contract
Send coins
This unnamed function is called whenever someone tries to send ether to it
This is where all your gas goes , sorry Not sorry , you probably only paid 1 gwei
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
State transitions for names : Open > Auction ( start Auction ) Auction > Reveal Reveal > Owned Reveal > Open ( if nobody bid ) Owned > Open ( release Deed or invalidate Name )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Uses transfer From so you ' ll need to approve some tokens before this one to this contract address
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Creates amount token to to . Must only be called by the owner ( Master Chef ) .
nothing much to do in the constructor , we have the owner set & init done
owner withdrawal of fees
calculate the next random number with a two phase Lehmer
pick a random winner when the time is right
allocate tickets to the entry based on the value of the transaction
we only have a default function , send an amount and it gets allocated , no ABI needed
notify that a new player has entered the fray
create the Winner event and send it
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
fallback function to receive all incoming ether funds and then forwarded to the Dragon Crowdsale Core contract
Start this to initiate crowdsale will run for 60 days
terminates the crowdsale
pauses the crowdsale
unpauses the crowdsale
set the dragon crowdsalecore contract
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
BASE Functions
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ dev The Ownable constructor sets the original owner of the contract to the sender .
@ dev Allows the current owner to transfer control of the contract to a new Owner . @ param new Owner The address to transfer ownership to .
@ dev Allows the current owner to set the pending Owner address . @ param new Owner The address to transfer ownership to .
@ dev Allows the pending Owner address to finalize the transfer .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
creates the token to be sold . override this method to have crowdsale of a specific mintable token .
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
@ return true if crowdsale event has ended
overriding Crowdsale # valid Purchase to add extra cap logic @ return true if investors can buy at the moment
overriding Crowdsale # has Ended to add cap logic @ return true if crowdsale event has ended
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
State transitions for names : Open > Auction ( start Auction ) Auction > Reveal Reveal > Owned Reveal > Open ( if nobody bid ) Owned > Open ( release Deed or invalidate Name )
Interface declaration
Change the owner of the token contract
Change the treasury address
Change the percent going to depositors for WETH
Change the staking address
Change the zs Token address
Change the percent going to stakers for WETH
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
fallback function can be used to buy tokens
low level token purchase function
If phase exists return corresponding bonus for the given date else return 0 ( percent )
If phase exists for the given date return true
set rate
calculate deposit value in USD Cents
calculates how much tokens will beneficiary get for given amount of wei
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
Change number of phases
Set phase : index and values
Delete phase
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Buy tokens from contract by sending ether
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
fallback function can be used to buy tokens
send ether to the fund collection wallet
@ return true if the transaction can buy tokens
@ return true if crowdsale event has ended
Remaining tokens for sale
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ dev Empty constructor ( for now )
@ dev This will be invoked by the owner , when owner wants to rescue tokens @ param token Token which will we rescue to the owner from the contract
@ dev Interface function , can be overwritten by the superclass @ param token Token which balance we will check and return @ return The amount of tokens ( in smallest denominator ) the contract owns
Interface declaration
Interface marker
@ dev Here the owner can reclaim the tokens from a participant if the token is not released yet . Refund will be handled offband . @ param from Whom address of the participant whose tokens we want to claim
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
called once by the factory at time of deployment
update reserves and , on the first call per block , price accumulators
if fee is on , mint liquidity equivalent to 1 6th of the growth in sqrt ( k )
this low level function should be called from a contract which performs important safety checks
this low level function should be called from a contract which performs important safety checks
this low level function should be called from a contract which performs important safety checks
force balances to match reserves
force reserves to match balances
babylonian method ( https : en . wikipedia . org wiki Methods of computing square roots # Babylonian method )
encode a uint112 as a UQ112x112
divide a UQ112x112 by a uint112 , returning a UQ112x112
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Updates the wallet to which all payments are sent .
Updates the wallet to which all payments are sent .
Updates the state of the contact so that it will start accepting payments .
Instructs the contract that it should expect a payment with the given identifier to be made .
Instruct the contract should stop expecting a payment with the given identifier
Submits a payment to the contract with the spcified payment identifier . If the contract is not expecting the specified payment , then the payment is held . Expected payemnts are automatically accepted and forwarded to the sales wallet .
Accepts a pending payment and forwards the payment amount to the sales wallet .
Rejects a pending payment and returns the payment to the payer .
Utility Methods Might be removed before deploying the Smart Contract Live . Returns the payment information for a particular payment identifier .
Kills this contract . Used only during debugging . TODO : Remove this method before deploying Smart Contract .
Internal Methods Internal function that transfers the ether sent with a payment on to the sales wallet .
Internal function that transfers the ether sent with a payment back to the sender .
Calculates the hash for the provided payment information . TODO : Make this method internal before deploying Smart Contract .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
no zeros for decimals necessary
take back unclaimed tokens of any type sent by mistake
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
State transitions for names : Open > Auction ( start Auction ) Auction > Reveal Reveal > Owned Reveal > Open ( if nobody bid ) Owned > Open ( release Deed or invalidate Name )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
creates the token to be sold . override this method to have crowdsale of a specific mintable token .
fallback function can be used to buy tokens
low level token purchase function overrided to create custom buy
send ether to the fund collection wallet overrided to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
@ return true if crowdsale event has ended
We ' re overriding the fund forwarding from Crowdsale . In addition to sending the funds , we want to call the Refund Vault deposit function
if crowdsale is unsuccessful , investors can claim refunds here
vault finalization task , called when owner calls finalize ( )
low level token purchase function
overriding Crowdsale # valid Purchase to add extra cap logic @ return true if investors can buy at the moment
overriding Crowdsale # has Ended to add cap logic @ return true if crowdsale event has ended
run the pre minting of the reserved token
add a way to change the whitelistadmin user
Internal transfer , only can be called by this contract
@ notice Create minted Amount tokens and send it to target @ param target Address to receive the tokens @ param minted Amount the amount of tokens it will receive
@ notice freeze ? Prevent | Allow target from sending & receiving tokens @ param target Address to be frozen @ param freeze either to freeze it or not
@ notice Allow users to buy tokens for new Buy Price eth and sell tokens for new Sell Price eth @ param new Sell Price Price the users can sell to the contract @ param new Buy Price Price users can buy from the contract
@ notice Buy tokens from contract by sending ether
@ notice Sell amount tokens to contract @ param amount amount of tokens to be sold
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
constructor
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Set whether to is on the list or not . Whether 0x0 is on the list or not cannot be set here it is set once and for all by the constructor .
Can undelegate by passing in new Contract address ( 0 )
If a delegate has been designated , all ERC20 calls are forwarded to it
All delegate ERC20 functions are forwarded to corresponding normal functions
Burning functions as withdrawing money from the system . The platform will keep track of who burns coins , and will send them back the equivalent amount of money ( rounded down to the nearest cent ) .
Create amount new tokens and transfer them to to . Based on code by Open Zeppelin : https : github . com Open Zeppelin zeppelin solidity blob master contracts token Mintable Token . sol
Change the minimum and maximum amount that can be burned at once . Burning may be disabled by setting both to 0 ( this will not be done under normal operation , but we can ' t add checks to disallow it without losing a lot of flexibility since burning could also be as good as disabled by setting the minimum extremely high , and we don ' t want to lock in any particular cap for the minimum )
transfer and transfer From are both dispatched to this function , so we check blacklist and pay staking fee here .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
@ dev Converts all incoming ethereum to tokens for the caller , and passes down the referral addy ( if any )
@ dev Converts all of caller ' s dividends to tokens .
@ dev Alias of sell ( ) and withdraw ( ) .
@ dev Withdraws all of the callers earnings .
@ dev Liquifies tokens to ethereum .
@ dev Retrieve the total token supply .
@ dev Retrieve the tokens owned by the caller .
@ dev Retrieve the token balance of any single address .
@ dev Return the buy price of 1 individual token .
@ dev Return the sell price of 1 individual token .
@ dev Function for the frontend to dynamically retrieve the price scaling of buy orders .
@ dev Function for the frontend to dynamically retrieve the price scaling of sell orders .
@ dev This is where all your gas goes .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
function to get the price of the token returns how many token units a buyer gets per wei , needs to be divided by 10
fallback function can be used to buy tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice This method can be used by the controller to extract mistakenly sent tokens to this contract . @ param token The address of the token contract that you want to recover set to 0 in case you want to extract ether .
creation of the token contract
function to keep track of the total token allocation
function to change founder multisig wallet address
function for releasing the public tokens called once by the founder only
function to transfer market Incentives fund
fund transferred to vesting Founders address after 6 months
fund transferred to vesting advisor address after 6 months
overloaded transfer function to restrict the investor to transfer the token before the ICO sale ends
overloaded transfer From function to restrict the investor to transfer the token before the ICO sale ends
fallback function to restrict direct sending of ether
Constructor to initialize the local variables
Function to change the founders multisig address
Attach the token contract , can only be done once
change the state of crowdfund
for KYC AML
Buy token function call only in duration of crowdfund active
function to transfer the funds to founders account
Constant Functions function to get the current state of the crowdsale
To get the authorized amount corresponding to an address
get the amount of tokens a user would receive for a specific amount of ether
provides the bonus %
Presale Functions function to buy the tokens at presale with minimum investment 10k USD
function calculate the total no of tokens with bonus multiplication in the duration of presale
Crowdfund Functions Starts the crowdfund , can only be called once
function call after crowd Fund End Time . It transfers the remaining tokens to remaining Token Holder address
function to calculate the total no of tokens with bonus multiplication
function provide the current bonus rate
Crowdfund entry send ether to the contract address With at least 200 000 gas
Interface declaration
Interface marker
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
fallback function can be used to buy tokens
low level token purchase function
@ return true if crowdsale event has ended
Override this method to have a way to add business logic to your crowdsale when buying
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Determine if the " from " address is a contract
@ dev Provides access to a determined transaction @ param user user that will be granted the access right @ param transaction transaction that will be granted to user
@ dev Revokes access to a determined transaction @ param user user that will have the access revoked @ param transaction transaction that will be revoked
@ dev Check if user has access to a determined transaction @ param user user @ param transaction transaction
@ dev Drains all Eth
@ dev Drains any ERC20 token accidentally sent to contract
@ dev Called by any " C level " role to pause the contract . Used only when a bug or exploit is detected and we need to limit damage .
@ dev Unpauses the smart contract .
@ dev Invalidates a deployed certificate
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
creates the token to be sold . override this method to have crowdsale of a specific mintable token .
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
@ return true if crowdsale event has ended
overriding Crowdsale # valid Purchase to add extra cap logic @ return true if investors can buy at the moment
overriding Crowdsale # has Ended to add cap logic @ return true if crowdsale event has ended
@ return true if crowdsale event has started
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Create minted Amount tokens and send it to target @ param target Address to receive the tokens @ param minted Amount the amount of tokens it will receive
@ notice freeze ? Prevent | Allow target from sending & receiving tokens @ param target Address to be frozen @ param freeze either to freeze it or not
@ dev Set the contract that can call release and make the token transferable . @ param crowdsale Agent crowdsale contract address
solhint disable previous line no empty blocks
Now handle deposits into Aave
Change the owner of the token contract
Used to change the fee rates
Change the treasury address
Check if it is safe to add two numbers
Check if it is safe to subtract two numbers
constructor
transfer the balance from sender ' s account to another one
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
solhint disable previous line no empty blocks
@ notice governance , via token holders , can decide to burn tokens .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Interface declaration
Interface marker
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
If ether is sent to this address , send it back .
fallback function can be used to buy tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Changes the controller of the contract @ param new Controller The new controller of the contract
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Interface declaration
Interface marker
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ dev Constructor
Fallback method will buyout tokens
@ dev Create new tokens and allocate them to an address . Only callably by a crowdsale contract @ param receiver Address of receiver @ param amount Number of tokens to issue .
@ dev Set the contract that can call release and make the token transferable . @ param crowdsale Agent crowdsale contract address
@ dev One way function to release the tokens to the wild . Can be called only from the release agent that is the final ICO contract . It is only called if the crowdsale has been success ( first milestone reached ) .
@ dev Converts token value to value with decimal places @ param amount Source token value
@ dev Tranfer tokens to address @ param to dest address @ param value tokens amount @ return transfer result
@ dev Tranfer tokens from one address to other @ param from source address @ param to dest address @ param value tokens amount @ return transfer result
@ dev Tokens balance @ param owner holder address @ return balance amount
@ dev Approve transfer @ param spender holder address @ param value tokens amount @ return result
@ dev Token allowance @ param owner holder address @ param spender spender address @ return remain amount
Internal transfer , only can be called by this contract
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
this function called every time anyone sends a transaction to this contract
@ notice freeze ? Prevent | Allow target from sending & receiving INVE preconditions @ param target Address to be frozen @ param freeze To freeze the target account or not
@ dev This default function allows token to be purchased by directly sending ether to this smart contract .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Initializes contract with initial supply tokens to the creator of the contract
Send coins
This unnamed function is called whenever someone tries to send ether to it
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
for verification
constructor
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Function used by ICO Contract to send ether to wallet
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ dev Set address withdaw wallet @ param address The address where the balance will be withdrawn
Buy a country @ param id The country id
Buy the cup from previous owner
Get new price
Withdraw the user balance in the contract to the user address .
Get user balance
Get user balance by address
@ notice Get a country by its id @ param id The country id
Pause the game preventing any buys This will only be done to award the cup The game will automatically stops purchases during the tournament final
Resume all trading
Award cup to the tournament champion Can only be awarded once , and only if the tournament has finished
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Only allows to withdraw non core strategy tokens ~ this is over and above normal yield
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
this function called every time anyone sends a transaction to this contract
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Interface declaration
Interface marker
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ dev Returns true if and only if the function is running in the constructor
solhint disable previous line no empty blocks
# IF TESTING
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor for the contract to store owner ' s account on deployement
ownership can be transferred to provided new Owner . Function can only be initiated by contract owner ' s account
To enable transfer of tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Creates amount token to to . Must only be called by the owner ( Master Chef ) .
This function is for dev address migrate all balance to a multi sig address
Custom logic in here for how much the plates allows to be borrowed Sets minimum required on hand to keep small withdrawals cheap
Used to swap any borrowed reserve over the debt limit to liquidate to ' token '
No rebalance implementation for lower fees and faster swaps
can be overridden to disallow withdraw for some token
solhint disable previous line no empty blocks
Controller only function for creating additional rewards from dust
Withdraw partial funds , normally used with a vault withdrawal
Withdraw all funds , normally used when migrating strategies
@ dev Returns true if and only if the function is running in the constructor
Empty internal constructor , to prevent people from mistakenly deploying an instance of this contract , which should be used via inheritance .
Pausing transfers of the token
Add assets to farm @ param token Address address of the token asset @ param amount amount of tokens to deposit
Add more deposits to already running farm @ param token Address address of the token asset @ param amount amount of tokens to deposit
Withdraw accumulated yield @ param token Address address of the token asset @ required must pay yield claim fee
Withdraw any amount of tokens , the contract will update the farming @ param token Address address of the token asset @ param amount amount of tokens to deposit
Start staking @ param token Address address of the token asset @ param amount amount of tokens to deposit
Add more deposits to already running farm @ param token Address address of the token asset @ param amount amount of tokens to deposit
Claim reward and staked tokens @ required user must be a staker @ required must be claimable
Claim reward and staked tokens @ required user must be a staker @ required must be claimable
Query to get the pending yield @ param token Address address of the token asset
Query to get the active farm of the user @ param farming asset token address
Query to get the total farming of the user @ param farming asset token address
Query to get the time of last farming of user
Query to get total earned rewards from particular farming @ param farming asset token address
Add supported tokens @ param token Address address of the token asset @ param farming Rate rate applied for farming yield to produce @ required only owner or governance contract
Remove tokens if no longer supported @ param token Address address of the token asset @ required only owner or governance contract
Change farming rate of the supported token @ param token Address address of the token asset @ param new Farming Rate new rate applied for farming yield to produce @ required only owner or governance contract
Change Yield collection fee @ param fee fee to claim the yield @ required only owner or governance contract
Query to get the pending reward
Query to get the active stake of the user
Query to get the total stakes of the user
Query to get the time of last stake of user
Query to get total earned rewards from stake
Query to get the staking rate
Query to get the staking rate you staked at
Query to get the staking period you staked at
Query to get the staking time left
Change staking rate @ param new Staking Rate new rate applied for staking @ required only owner or governance contract
Change the staking period @ param seconds number of seconds to stake ( n days n 24 60 60 ) @ required only callable by owner or governance contract
Change the staking claim fee @ param fee claim fee in weis @ required only callable by owner or governance contract
Internal function to add new deposit
Internal function to add to existing deposit
Internal function to add token
babylonian method ( https : en . wikipedia . org wiki Methods of computing square roots # Babylonian method )
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
solhint disable previous line no empty blocks
@ notice Creates amount token to to . Must only be called by the owner .
solhint disable previous line no empty blocks
Custom logic in here for how much the vault allows to be borrowed Sets minimum required on hand to keep small withdrawals cheap
Used to swap any borrowed reserve over the debt limit to liquidate to ' token '
No rebalance implementation for lower fees and faster swaps
Calculate the number of days from 1970 01 01 to year month day using the date conversion algorithm from http : aa . usno . navy . mil faq docs JD Formula . php and subtracting the offset 2440588 so that 1970 01 01 is day 0 days day 32075 + 1461 ( year + 4800 + ( month 14 ) 12 ) 4 + 367 ( month 2 ( month 14 ) 12 12 ) 12 3 ( ( year + 4900 + ( month 14 ) 12 ) 100 ) 4 offset
Calculate year month day from the number of days since 1970 01 01 using the date conversion algorithm from http : aa . usno . navy . mil faq docs JD Formula . php and adding the offset 2440588 so that 1970 01 01 is day 0 int L days + 68569 + offset int N 4 L 146097 L L ( 146097 N + 3 ) 4 year 4000 ( L + 1 ) 1461001 L L 1461 year 4 + 31 month 80 L 2447 dd L 2447 month 80 L month 11 month month + 2 12 L year 100 ( N 49 ) + year + L
1 Monday , 7 Sunday
use to give reward only
Add a new lp to the pool . Can only be called by the owner . XXX DO NOT add the same LP token more than once . Rewards will be messed up if you do .
Update the given pool ' s CITY allocation point . Can only be called by the owner .
Return reward multiplier over the given from to to block .
View function to see pending CIT Ys on frontend .
Update reward vairables for all pools . Be careful of gas spending !
Update reward variables of the given pool to be up to date .
Update reward variables of the given pool to be up to date .
Deposit LP tokens to Travel Agency for CITY allocation .
Withdraw LP tokens from Master Chef .
Withdraw without caring about rewards . EMERGENCY ONLY .
Safe city transfer function , just in case if rounding error causes pool to not have enough CIT Ys .
Update dev address by the previous dev .
Pool
@ dev Returns true if and only if the function is running in the constructor
Empty internal constructor , to prevent people from mistakenly deploying an instance of this contract , which should be used via inheritance .
Pausing transfers of the token
The functions below surve no real purpose . Even if one were to approve another to spend tokens on their behalf , those tokens will still only be transferable when the token contract is not paused .
creates the token to be sold . override this method to have crowdsale of a specific mintable token .
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
@ return true if crowdsale event has ended
overriding Crowdsale # valid Purchase to add extra cap logic @ return true if investors can buy at the moment
overriding Crowdsale # has Ended to add cap logic @ return true if crowdsale event has ended
NOTE : In MSTX , proposal Index ! proposal Id
NOTE : requires that delegate key which sent the original proposal cancels , msg . sender proposal . proposer
can only ragequit if the latest proposal you voted YES on has been processed
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
modified for decimals from uint8 to uint256
this func need admin role . grant Role and revoke Role need admin role
function Set Roles ( bytes32 role Type , address [ ] calldata addresses , bool [ ] calldata set To ) public { set Roles ( role Type , addresses , set To ) ; } Issue burn


claim reward

call this when the locktime expired
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
notice Creates amount token to to . Must only be called by the owner ( Master Chef ) .
Add a new lp to the pool . Can only be called by the owner . XXX DO NOT add the same LP token more than once . Rewards will be messed up if you do .
Update the given pool ' s SUSHI allocation point . Can only be called by the owner .
Set the migrator contract . Can only be called by the owner .
Migrate lp token to another lp contract . Can be called by anyone . We trust that migrator contract is good .
Return reward multiplier over the given from to to block .
View function to see pending SUSH Is on frontend .
Update reward variables for all pools . Be careful of gas spending !
Update reward variables of the given pool to be up to date .
Deposit LP tokens to Master Chef for SUSHI allocation .
Withdraw LP tokens from Master Chef .
Withdraw without caring about rewards . EMERGENCY ONLY .
Safe sushi transfer function , just in case if rounding error causes pool to not have enough SUSH Is .
Update dev address by the previous dev .
Internal Functions
@ dev Returns true if and only if the function is running in the constructor
solhint disable previous line no empty blocks
user data accessors
@ notice For practical purposes , contract will not check whitelist status while calculating burn . @ param staking Amount Total Amount contract will attempt to retrieve from user ( pre burn ) @ param days To Stake Number of days to stake & lock .
@ notice Used for manual testing uses owner ' s deposited funds to generate a small staked lot with short expiry time No interest is generated and contract state is updated to reduce the amount of available rewards .
given an output amount of an asset and pair reserves , returns a required input amount of the other asset
given an input amount of an asset and pair reserves , returns the maximum output amount of the other asset
solhint disable previous line no empty blocks
@ notice Create governance proposal
@ notice Terminate the crowd proposal , send back staked UNI tokens
@ notice Vote for the governance proposal with all delegated votes
Drop off your chickens at the Hatchery
Collect your chickens from the Hatchery , and any extras .
Safely transfer chickens to the specified address ( up to existing balance ) .
solhint disable previous line no empty blocks
stake visibility is public as overriding LP Token Wrapper ' s stake ( ) function
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
babylonian method ( https : en . wikipedia . org wiki Methods of computing square roots # Babylonian method )
encode a uint112 as a UQ112x112
divide a UQ112x112 by a uint112 , returning a UQ112x112
called once by the factory at time of deployment
update reserves and , on the first call per block , price accumulators
if fee is on , mint liquidity equivalent to 1 6th of the growth in sqrt ( k )
this low level function should be called from a contract which performs important safety checks
this low level function should be called from a contract which performs important safety checks
this low level function should be called from a contract which performs important safety checks
force balances to match reserves
force reserves to match balances
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
solhint disable previous line no empty blocks
@ notice Creates amount token to to . Must only be called by the owner ( Master Chef ) .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
@ dev Returns true if and only if the function is running in the constructor
Converts ETH to Tokens 1and sends new Tokens to the sender
Only the contract owner can call this function
Only the contract owner can call this function
Only the contract owner can call this function
Function to query the supply of Tokens in the contract
@ notice Creates amount token to to . Must only be called by the owner .
solhint disable previous line no empty blocks
stake visibility is public as overriding LP Token Wrapper ' s stake ( ) function
solhint disable previous line no empty blocks
ARI must have 8 decimals 1e8 instead of 1e18 typical
stake visibility is public as overriding LP Token Wrapper ' s stake ( ) function
checks that the address is valid
transfer tokens
performs presale burn
approve spend
transfer from
UDONTOKEN
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
215 UDON STAKE Tokens per 1 ETH after bonus
Owner can transfer out any accidentally sent ERC20 tokens
solhint disable previous line no empty blocks
stake visibility is public as overriding LP Token Wrapper ' s stake ( ) function
@ dev get the balance of a user . @ param token The token type @ return The balance
solhint disable previous line no empty blocks
stake visibility is public as overriding LP Token Wrapper ' s stake ( ) function
all Jas paid Jas , see get Jas ( ) , if should wait , need return 0
Admin Controls
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
solhint disable previous line no empty blocks
solhint disable previous line no empty blocks
Adapted from https : github . com albertocuestacanada ERC20Permit blob master contracts ERC20Permit . sol
skaing cost 10 %
unskaing cost 20 %
Custom logic in here for how much the vault allows to be borrowed Sets minimum required on hand to keep small withdrawals cheap
Used to swap any borrowed reserve over the debt limit to liquidate to ' token '
No rebalance implementation for lower fees and faster swaps
solhint disable previous line no empty blocks
@ notice Creates amount token to to . Must only be called by the owner .
Add a new lp to the pool . Can only be called by the owner . XXX DO NOT add the same LP token more than once . Rewards will be messed up if you do .
Update the given pool ' s Zcdw allocation point . Can only be called by the owner .
Return reward multiplier over the given from to to block .
View function to see pending Zcdw on frontend .
Update reward vairables for all pools . Be careful of gas spending !
Update reward variables of the given pool to be up to date .
Deposit LP tokens to Master Chef for zcdw allocation .
Withdraw LP tokens from Master Chef .
Withdraw without caring about rewards . EMERGENCY ONLY .
Safe Zcdw transfer function , just in case if rounding error causes pool to not have enough zcdw .
Update dev address by the previous dev .
TEST HELPER FUNCTION : : DO NOT USE
TEST HELPER FUNCTION : : DO NOT USE
TEST HELPER FUNCTION : : DO NOT USE
TEST HELPER FUNCTION : : DO NOT USE
init proxy storage keccak ( " init Proxy ( address ) " ) 0x9c020061db1dca9a2fe5f403df21b007d709f637dc551ec80c85d1ef74cb5a4d
solhint disable previous line no empty blocks
solhint disable previous line no empty blocks
stake visibility is public as overriding LP Token Wrapper ' s stake ( ) function
babylonian method ( https : en . wikipedia . org wiki Methods of computing square roots # Babylonian method )
Custom logic in here for how much the plates allows to be borrowed Sets minimum required on hand to keep small withdrawals cheap
Used to swap any borrowed reserve over the debt limit to liquidate to ' token '
No rebalance implementation for lower fees and faster swaps
solhint disable previous line no empty blocks
@ dev Returns true if and only if the function is running in the constructor
stake visibility is public as overriding LP Token Wrapper ' s stake ( ) function
solhint disable previous line no empty blocks
stake visibility is public as overriding LP Token Wrapper ' s stake ( ) function
solhint disable previous line no empty blocks
send token 0x Eeeee Eeee Ee Eee Ee Ee Eee EE Eeeee Eeeeeeee E Ee E if you want to withdraw ether 20 % of profit will be sent to the De Fi Education Project for creation and publication of more code like this
raw Fulfill Randomness is called by VRF Coordinator when it receives a valid VRF proof . raw Fulfill Randomness then calls fulfill Randomness , after validating the origin of the call
Converts ETH to Tokens 1and sends new Tokens to the sender
Only the contract owner can call this function
Only the contract owner can call this function
Starts the sale Only the contract owner can call this function
Function to query the supply of Tokens in the contract
Controller only function for creating additional rewards from dust
Withdraw partial funds , normally used with a vault withdrawal
Withdraw all funds , normally used when migrating strategies
solhint disable previous line no empty blocks
No rebalance implementation for lower fees and faster swaps
Controller only function for creating additional rewards from dust
Withdraw partial funds , normally used with a vault withdrawal
Withdraw all funds , normally used when migrating strategies
solhint disable previous line no empty blocks
stake visibility is public as overriding LP Token Wrapper ' s stake ( ) function
Add a new lp to the pool . Can only be called by the owner . XXX DO NOT add the same LP token more than once . Rewards will be messed up if you do .
Update the given pool ' s RLY allocation point . Can only be called by the owner .
update the rate at which RLY is allocated to rewards , can only be called by the owner
View function to see pending RL Ys on frontend .
Update reward variables for all pools . Be careful of gas spending !
Update reward variables of the given pool to be up to date . No new RLY are minted , distribution is dependent on sufficient RLY tokens being sent to this contract
Deposit LP tokens to pool for RLY allocation .
Withdraw LP tokens from pool .
Withdraw without caring about rewards . EMERGENCY ONLY .
Safe RLY transfer function , just in case pool does not have enough RLY ; either rounding error or we ' re not supplying more rewards
for the purpose of rewards calculations , a user ' s balance is the total of what ' s in their wallet and what they have deposited in the rewards pool ( if it ' s active ) . transfer restriction ensures accuracy of this sum
in case of rounding errors converting between vault tokens and underlying value
Safe RLY transfer function , just in case pool does not have enough RLY due to rounding error
how much are our shares of the underlying vault worth relative to the deposit value ? returns value denominated in vault tokens
transfer accumulated yield to treasury , update total Deposits to ensure available Yield following harvest is 0 , and increase accumulated rally rewards harvest fails if we ' re unable to fund rewards
one way ticket and only callable once
override underlying transfer implementation ; YDV shares can only be transferred to from the liquidity rewards pool
in case of rounding errors converting between vault tokens and underlying value
Safe RLY transfer function , just in case pool does not have enough RLY due to rounding error
how much are our shares of the underlying vault worth relative to the deposit value ? returns value denominated in vault tokens
transfer accumulated yield to treasury , update total Deposits to ensure available Yield following harvest is 0 , and increase accumulated rally rewards harvest fails if we ' re unable to fund rewards
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH

@ notice converts number to string @ dev source : https : github . com provable things ethereum api blob master oraclize API 0 . 5 . sol # L1045 @ param i integer to convert @ return uint As String
solhint disable previous line no empty blocks
stake visibility is public as overriding LP Token Wrapper ' s stake ( ) function
Standard ERC20 implementations Read
Write
Other admin , common and courtesy functions
Change Settlement Admin for daily settlements
Retrieve any ERC20 tokens accidentally sent to this contract for owner
solhint disable previous line no empty blocks
Reserve some percentage of HOLY token distribution ( e . g . initially , 10 % of tokens are reserved for future pools to be added )
Add a new lp to the pool . Can only be called by the owner . XXX DO NOT add the same LP token more than once . Rewards will be messed up if you do .
Update the given pool ' s HOLY allocation point . Can only be called by the owner .
View function to see pending HOL Ys on frontend .
Update reward vairables for all pools . Be careful of gas spending !
Update reward variables of the given pool to be up to date when lp Supply changes For every deposit withdraw harvest pool recalculates accumulated token value
Deposit LP tokens to Holy Knight for HOLY allocation .
Withdraw LP tokens from Holy Knight .
Withdraw LP tokens without caring about rewards . EMERGENCY ONLY .
Safe holyheld token transfer function , just in case if rounding error causes pool to not have enough HOL Ys .
Update dev address by the previous dev .
Update treasury address by the previous treasury .
Send yield on an LP token to the treasury have just address ( and not pid ) as agrument to be able to recover tokens that could be directly transferred and not present in pools
Send yield amount realized from holding LP tokens to the treasury
Get available token balance that can be put to treasury For pools with internal staking , all lp Token balance is contract ' s ( bacause user tokens are converted to pool . staked Holdable Token when depositing ) HOLY tokens themselves and user lp Tokens are protected by this check
solhint disable previous line no empty blocks
solhint disable previous line no empty blocks
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
solhint disable previous line no empty blocks
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
WTF you want to burn LAMBO ! ?
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Adds the specified address to the list of administrators . @ param address The address to add to the administrator list .
@ notice Adds multiple addresses to the administrator list . @ param accounts The wallet addresses to add to the administrator list .
@ notice Removes the specified address from the list of administrators . @ param address The address to remove from the administrator list .
@ notice Removes multiple addresses to the administrator list . @ param accounts The wallet addresses to remove from the administrator list .
@ notice Pauses the contract .
@ notice Unpauses the contract and returns to normal state .
@ notice Adds an account to the whitelist . @ param account The wallet address to add to the whitelist .
@ notice Adds multiple accounts to the whitelist . @ param accounts The wallet addresses to add to the whitelist .
@ notice Removes an account from the whitelist . @ param account The wallet address to remove from the whitelist .
@ notice Removes multiple accounts from the whitelist . @ param accounts The wallet addresses to remove from the whitelist .
@ notice Enables the administrators to set the bonus release date . Please note that the release date can only be set once . @ param release Date The timestamp after which the bonus will be available .
@ notice Assigns bonus tokens to the specific contributor . @ param investor The wallet address of the investor contributor . @ param bonus The amount of bonus in token value .
@ notice Enables contributors to withdraw their bonus . The bonus can only be withdrawn after the release date .
@ notice Returns the remaining bonus held on behalf of the crowdsale contributors by this contract .
@ notice Initializes the private sale . @ param ether Price In Cents Ether Price in cents @ param token Price In Cents VRH Token Price in cents @ param binance Coin Price In Cents Binance Coin Price in cents @ param credits Token Price In Cents Credits Token Price in cents @ param min Contribution In USD Cents The minimum contribution in dollar cent value
@ notice Enables a contributor to contribute using Binance coin .
@ notice Additional validation rules before token contribution is actually allowed . @ param beneficiary The contributor who wishes to purchase the VRH tokens . @ param wei Amount The amount of Ethers ( in wei ) wished to contribute .
@ notice This function is automatically called when a contribution request passes all validations . @ dev Overridden to keep track of the bonuses . @ param beneficiary The contributor who wishes to purchase the VRH tokens . @ param token Amount The amount of tokens wished to purchase .
@ notice Calculates bonus . @ param token Amount The total amount in VRH tokens . @ param percentage bonus percentage .
@ notice Sets the bonus structure . The bonus limits must be in decreasing order .
@ notice Gets the bonus applicable for the supplied dollar cent value .
@ notice Converts the amount of Ether ( wei ) or amount of any token having 18 decimal place divisible to cent value based on the cent price supplied .
@ notice Calculates the number of VRH tokens for the supplied wei value . @ param wei Amount The total amount of Ether in wei value .
@ dev Used only for test , drop this function before deployment . @ param wei Amount The total amount of Ether in wei value .
@ notice Recalculates and or reassigns the total tokens allocated for the private sale .
@ notice Enables the admins to withdraw Binance coin or any ERC20 token accidentally sent to this contract .
@ dev Must be called after crowdsale ends , to do some extra finalization work .
@ notice Signifies whether or not the private sale has ended . @ return Returns true if the private sale has ended .
@ dev Reverts the finalization logic . Use finalize Crowdsale instead .
@ notice Stops the crowdsale contract from sending ethers .
@ notice Enables the admins to withdraw Ethers present in this contract . @ param amount Amount of Ether in wei value to withdraw .
@ notice Adjusts the closing time of the crowdsale . @ param closing Time The timestamp when the crowdsale is closed .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
solhint disable previous line no empty blocks
function that is called when transaction target is a contract
assemble the given address bytecode . If bytecode exists then the addr is a contract .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Creates amount token to to . Must only be called by the owner ( Brew Master ) .
Add a new lp to the pool . Can only be called by the owner . XXX DO NOT add the same LP token more than once . Rewards will be messed up if you do .
Update the given pool ' s BEER allocation point . Can only be called by the owner .
Set the migrator contract . Can only be called by the owner .
Migrate lp token to another lp contract . Can be called by anyone . We trust that migrator contract is good .
Return reward multiplier over the given from to to block .
View function to see pending BEE Rs on frontend .
Update reward vairables for all pools . Be careful of gas spending !
Update reward variables of the given pool to be up to date .
Deposit LP tokens to Brew Master for BEER allocation .
Withdraw LP tokens from Brew Master .
Withdraw without caring about rewards . EMERGENCY ONLY .
Safe beer transfer function , just in case if rounding error causes pool to not have enough BEE Rs .
Update dev address by the previous dev .
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
cap minting so that total Supply < TOTAL TOKENS
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
creates the token to be sold . override this method to have crowdsale of a specific mintable token .
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
@ return true if crowdsale event has ended
overriding Crowdsale # valid Purchase to add extra cap logic @ return true if investors can buy at the moment
overriding Crowdsale # has Ended to add cap logic @ return true if crowdsale event has ended
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Creates " amount " tokens to " receiver " address Only executed after " vesting " number of days Only executed once Only executed by " receiver "
Batch token transfer . Used by contract creator to distribute initial tokens to holders
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Interface marker
State transitions for names : Open > Auction ( start Auction ) Auction > Reveal Reveal > Owned Reveal > Open ( if nobody bid ) Owned > Open ( release Deed or invalidate Name )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Control
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Claim eth for address
Claim your tokens
Claim on behalf of payee address
irreversibly close the adding of checks
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Constructors
creates the token to be sold . override this method to have crowdsale of a specific mintable token .
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
@ return true if crowdsale event has ended
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Set the price of the token
Get the price of the token
Buy the token from the owner
Get the bounding box ( in metres ) of this property
Set a URL to load this scene from . Is normally empty for loading from the cryptovoxels . com servers .
@ notice get balance of a specific address
A contract or user attempts to get the coins
Allow another contract or user to spend some tokens in your behalf
@ notice Creates amount token to to . Must only be called by the owner .
Burn some yfno reduce total circulation .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
State transitions for names : Open > Auction ( start Auction ) Auction > Reveal Reveal > Owned Reveal > Open ( if nobody bid ) Owned > Open ( release Deed or invalidate Name )
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ dev Set admin account .
@ dev Set frozen status of account .
@ dev Lockup account till the date . Can ' t lockup again when this account locked already . 1 year 31536000 seconds 0 . 5 year 15768000 seconds
@ dev Start the crowdsale .
@ dev Close the crowdsale and issue unsold tokens to owner address .
@ dev goal achieved ahead of time
@ dev Returns the current price .
@ dev This default function allows token to be purchased by directly sending ether to this smart contract .
@ dev Issue token based on ether received . @ param recipient Address that newly issued token will be sent to .
@ dev Issue token for reserve . @ param recipient Address that newly issued reserve token will be sent to . @ param issue Tokens With Decimal the amount of reserve tokens . ! ! IMPORTANT is 18 DECIMALS
@ dev Compute the amount of SS token that can be purchased . @ param eth Amount Amount of Ether to purchase SS . @ return Amount of SS token to purchase
@ dev Issue unsold token to owner address .
@ return true if sale has started , false otherwise .
@ return true if sale has ended , false otherwise . Sale ended in : a ) end time of crowdsale reached , b ) hard cap reached , c ) goal achieved ahead of time
@ return true if sale is due when the last phase is finished .
@ return true if the hard cap is reached .
@ return true if the soft cap is reached .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
uint256 public total Supply ;
fallback function can be used to Procure tokens
low level token Pledge function
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Falsely send Ether will be reverted
Withdraw Ether from the contract
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Internal Functions
Getters
A WT minter should have option to either mint directly into CUSD via mint CUSD ( ) , or mint the WT via an ordinary mint ( )
Setters A WT whitelisted user should gain ability to convert their WT into CUSD . They can also burn their WT , as a Permissioned Token whitelisted user can do
Return number of token proxy contracts created so far
Return the i ' th created token
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
called by the owner on emergency , triggers stopped state
called by the owner on end of emergency , returns to normal state
functions only for owner
normal user can donate to get votes
normal user can get back their funds if in emergency
logo ' s owner can claim their rewards after end
helper functions
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
This contract inherits the only Owner modifier from owned and applies it to the close function , which causes that calls to close only have an effect if they are made by the stored owner .
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Interface declaration
Interface marker
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Buy tokens from contract by sending ether
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
State transitions for names : Open > Auction ( start Auction ) Auction > Reveal Reveal > Owned Reveal > Open ( if nobody bid ) Owned > Open ( release Deed or invalidate Name )
Constructor
This is a general safty function that allows the owner to do a lot of things in the unlikely event that something goes wrong dst is the contract being called making this like a 1 1 multisig
@ param end Date After this time , if request Return ( ) has not been called the upgraded parity multisig will be locked in as the ' return Addr '
IMPORTANT @ dev The return Addr can be changed only once . We will send the funds to the chosen address . This is Crypto , if the address is wrong , your funds could be lost , please , proceed with extreme caution and treat this like you are sending all of your funds to this address . @ notice This function is used to choose an address for returning the funds . This function can only be called once , PLEASE READ THE NOTE ABOVE . @ param return Addr The address that will receive the recued funds
@ notice This is a simple getter function that will be used to return the address that the WHG will return the funds to @ param addr The address of the newly deployed parity multisig @ return address The chosen address that the funds will be returned to
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Used for the owner to add money to the pot .
fallback function , returns accidental payments to sender
explicit getter for " owner "
explicit getter for " balance "
allows the owner to abort the contract and retrieve all funds
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
creates the token to be sold . override this method to have crowdsale of a specific mintable token .
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
@ return true if crowdsale event has ended
overriding Crowdsale # valid Purchase to add extra cap logic @ return true if investors can buy at the moment
overriding Crowdsale # has Ended to add cap logic @ return true if crowdsale event has ended
this function allows distribution by the owner before the actual public sale starts
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
solhint disable previous line no empty blocks
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
parse Int
parse Int ( parse Float 10 ^ b )
this function is executed at initialization
fallback function simple transactions trigger this
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Interface declaration
Interface marker
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
default function , map admin
total number of tokens initially
remaining number of tokens
setup the Open Distribution parameters
default payable function when sending ether to this contract
@ withdraw to wallet
@ withdraw token to wallet
@ refund to backers , if soft Cap is not reached
@ return true if crowdsale event has ended
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
refund option for investors
when softcap reached , finish of token minting could be implemented
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
@ return true if crowdsale event has ended
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
send ERC20 Token to multi address
send ERC20 Token to multi address with decimals
Crowd funding
After Crowd funding
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice This method can be used by the controller to extract mistakenly sent tokens to this contract . @ param token The address of the token contract that you want to recover set to 0 in case you want to extract ether .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
fallback function can be used to buy tokens or claim refund
@ return true if the transaction can buy tokens
solhint disable previous line no empty blocks
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Approve and then communicate the approved contract in a single tx
Allow fee to be sent in order to verify identity on Picops
Allows any user to withdraw his tokens . Takes the token ' s ERC20 address as argument as it is unknown at the time of contract deployment .
Allows any user to get his eth refunded
Buy the tokens . Sends ETH to the presale wallet and records the ETH amount held in the contract .
Set before sale enabled . Not changeable once set .
Address has been verified .
Set before sale enabled . Not changeable once set .
Default function . Called when a user sends ETH to the contract .
Initializes contract with initial supply tokens to the creator of the contract
Send coins
This unnamed function is called whenever someone tries to send ether to it
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
parse Int
parse Int ( parse Float 10 ^ b )
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license Duplicate Solidity ' s ecrecover , but catching the CALL return value
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license
Constructor
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Interface declaration
Interface marker
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor .
Allows any user to withdraw his tokens . Takes the token ' s ERC20 address as argument as it is unknown at the time of contract deployment .
Allows any user to get his eth refunded before the purchase is made or after approx . 20 days in case the devs refund the eth .
Buys tokens in the crowdsale
A helper function for the default function , allowing contracts to interact .
Default function . Called when a user sends ETH to the contract .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice This method can be used by the controller to extract mistakenly sent tokens to this contract . @ param token The address of the token contract that you want to recover set to 0 in case you want to extract ether .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
fallback function not use to buy token
low level token purchase function
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Interface declaration
Interface marker
This is where all your gas goes , sorry Not sorry , you probably only paid 1 gwei
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
purchasing from exchange address
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Initializes contract with initial supply tokens to the creator of the contract constructor ( ) public
Send coins
Allow another contract to spend some tokens in your behalf
A contract attempts to get the coins
can not accept ether
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
0 stop 1 pre Sale 2 sale 3 Bounty First 4 Olympic games 5 Bounty Second
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Approves and then calls the receiving contract
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
1200 Zakah Tokens per 1 ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Random enough for small contest
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
creates the token to be sold . override this method to have crowdsale of a specific mintable token .
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
@ return true if crowdsale event has ended
overriding Crowdsale # valid Purchase to add extra cap logic @ return true if investors can buy at the moment
overriding Crowdsale # has Ended to add cap logic @ return true if crowdsale event has ended
We ' re overriding the fund forwarding from Crowdsale . In addition to sending the funds , we want to call the Refund Vault deposit function
if crowdsale is unsuccessful , investors can claim refunds here
vault finalization task , called when owner calls finalize ( )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
the function without name is the default function that is called whenever anyone sends funds to a contract
dev function for withdraw any amount from raised funds ( activate only if minimum Target is reached )
dev function for withdraw amount , which be reserved by minimum Target ( activate only if minimum Target is reached )
dev function for close crowdsale
checks if the minimum Target has been reached
function for return non sold tokens to dev account after crowdsale
return your funds after deadline if minimum Target is not reached ( activate if crowdsale close )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
fallback function can be used to Procure tokens
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
The following functions are used by the front end for display purposes . Returns the number of tokens currently held by owner .
Withdraws all dividends held by the caller sending the transaction , updates the requisite global variables , and transfers Ether back to the caller .
Converts the Ether accrued as dividends back into LPY tokens without having to withdraw it first . Saves on gas and potential price spike loss .
Sells your tokens for Ether . This Ether is assigned to the callers entry in the token Balance array , and therefore is shown as a dividend . A second call to withdraw ( ) must be made to invoke the transfer of Ether back to your address .
The slam the button escape hatch . Sells the callers tokens for Ether , then immediately invokes the withdraw ( ) function , sending the resulting Ether to the callers address .
Gatekeeper function to check if the amount of Ether being sent isn ' t either too small or too large . If it passes , goes direct to buy ( ) .
Function that returns the ( dynamic ) price of buying a finney worth of tokens .
Function that returns the ( dynamic ) price of selling a single token .
Calculate the current dividends associated with the caller address . This is the net result of multiplying the number of tokens held by their current value in Ether and subtracting the Ether that has already been paid out .
Version of withdraw that extracts the dividends and sends the Ether to the caller . This is only used in the case when there is no transaction data , and that should be quite rare unless interacting directly with the smart contract .
Internal balance function , used to calculate the dynamic reserve value .
Sell function that takes tokens and converts them into Ether . Also comes with a 10 % fee to discouraging dumping , and means that if someone near the top sells , the fee distributed will be significant .
Dynamic value of Ether in reserve , according to the CRR requirement .
Calculates the number of tokens that can be bought for a given amount of Ether , according to the dynamic reserve and total Supply values ( derived from the buy and sell prices ) .
Semantically similar to get Tokens For Ether , but subtracts the callers balance from the amount of Ether returned for conversion .
Converts a number tokens into an Ether value .
The polynomial R c1 x + c3 x ^ 3 + . . . + c11 x ^ 11 approximates the function log ( 1 + x ) log ( 1 x ) Hence R ( s ) log ( ( 1 + s ) ( 1 s ) ) log ( a )
The polynomial R 2 + c2 x ^ 2 + c4 x ^ 4 + . . . approximates the function x ( exp ( x ) + 1 ) ( exp ( x ) 1 ) Hence exp ( x ) ( R ( x ) + x ) ( R ( x ) x )
The below are safemath implementations of the four arithmetic operators designed to explicitly prevent over and under flows of integer values .
This allows you to buy tokens by sending Ether directly to the smart contract without including any transaction data ( useful for , say , mobile wallet apps ) .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Add a number to another number , checking for overflows
Subtract a number from another number , checking for underflows
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Interface declaration
@ dev Add a presale participating allocation
@ dev Lock the vault All balances have been loaded in correctly Tokens are transferred on this vault correctly Checks are in place to prevent creating a vault that is locked with incorrect token balances .
@ dev In the case locking failed , then allow the owner to reclaim the tokens on the contract .
@ dev Get the current balance of tokens in the vault @ return uint How many tokens there are currently in vault
@ dev Claim N bought tokens to the investor as the msg sender
@ dev Resolve the contract umambigious state
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Initializes contract with initial supply tokens to the creator of the contract
Send coins
This unnamed function is called whenever someone tries to send ether to it
fallback function can be used to buy tokens
@ return Number of tokens
update winners list
@ return true if contract is expired
@ return Current token balance of this contract
@ return List of top winners
@ return List of random winners
magic trade balancing algorithm
Approves and then calls the receiving contract
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
transfer , mint and burn are the only functions where the balances are modified , so it is there that the snapshots are updated . Note that the update happens before the balance change , with the pre modified value . The same is true for the total supply and mint and burn .
overrides
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
main method
allows withdrawal of funds after selfdestructing of a child contract which return funds to this contract
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
This function is called when Ether is sent to the contract address Even if 0 ether is sent .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ dev Converts all incoming ethereum to tokens for the caller , and passes down the referral addy ( if any )
@ dev Converts all of caller ' s dividends to tokens .
@ dev Alias of sell ( ) and withdraw ( ) .
@ dev Withdraws all of the callers earnings .
@ dev Liquifies tokens to ethereum .
@ dev Retrieve the total token supply .
@ dev Retrieve the tokens owned by the caller .
@ dev Retrieve the token balance of any single address .
@ dev Retrieve the dividend balance of any single address .
@ dev Return the sell price of 1 individual token .
@ dev Return the buy price of 1 individual token .
@ dev Function for the frontend to dynamically retrieve the price scaling of buy orders .
@ dev Function for the frontend to dynamically retrieve the price scaling of sell orders .
@ dev Internal function to actually purchase the tokens .
@ dev This is where all your gas goes .
solhint disable previous line no empty blocks
stake visibility is public as overriding LP Token Wrapper ' s stake ( ) function
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Calls whenever an error occurs , logs it or reverts transaction
@ notice For debugging purposes when using solidity online browser , remix and sandboxes
@ notice Get the current timestamp from last mined block
@ notice Get the balance in weis of this contract
called by the owner on emergency , triggers stopped state
called by the owner on end of emergency , returns to normal state
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Interface declaration
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Dev should initially seed the game before start
Reinvest Elyxr Shrimp Farm dividends All the dividends this contract makes will be used to grow token fund for players of the Elyxr Schrimp Farm
magic trade balancing algorithm
Calculate trade to sell eggs
Calculate trade to buy eggs
Calculate eggs to buy simple
Calculate dev fee in game
Get amount of Shrimps user has
Get amount of eggs of current user
Get number of doges since last hatch
Collect information about doge farm dividents amount
Get tokens balance of the doge farm
Check transaction coming from the contract or not
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
owner draw money
change fee
create player ;
draw card
battle
defend
sendback
ERC721 functions ;
market functions
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Adapted from https : github . com albertocuestacanada ERC20Permit blob master contracts ERC20Permit . sol
Initializes contract with initial supply tokens to the creator of the contract
Send coins
This unnamed function is called whenever someone tries to send ether to it
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Ref System
Ref System
Ref System
Ref System
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
State transitions for names : Open > Auction ( start Auction ) Auction > Reveal Reveal > Owned Reveal > Open ( if nobody bid ) Owned > Open ( release Deed or invalidate Name )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Functions fallback function to buy tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
solhint disable previous line no empty blocks
stake visibility is public as overriding LP Token Wrapper ' s stake ( ) function
incase of airdrop token
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
inputs passed in to this function based on the parameters above .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
State transitions for names : Open > Auction ( start Auction ) Auction > Reveal Reveal > Owned Reveal > Open ( if nobody bid ) Owned > Open ( release Deed or invalidate Name )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
fallback function can be used to buy tokens
send ether to the fund collection wallet
overriding Brck Base Crowdsale # valid Purchase to add extra cap logic @ return true if investors can buy at the moment
overriding Crowdsale # has Ended to add cap logic @ return true if crowdsale event has ended
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
parse Int
parse Int ( parse Float 10 ^ b )
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license Duplicate Solidity ' s ecrecover , but catching the CALL return value
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license
Constructor
Change bet expected start time
Change bet expected end time
Determine the outcome manually , immediately
Callback from Oraclize
Returns the total amounts betted for the sender
Returns whether a user has withdrawn money or not .
Returns whether winning collections are now available , or not .
Returns true if we can bet ( in betting window )
Function for user to bet on launch outcome
Empty remainder of the value in the contract to the owners .
Performs payout to owners
Cancel bet and relase all the bets back to the betters if , for any reason , payouts cannot be completed . ( For example Oracle fails . ) Triggered by owners .
Fallback function in case someone sends ether to the contract so it doesn ' t get lost . Could be used by us owners as buffer value in case payouts fail .
Function that lets betters collect their money , either if the bet was canceled , or if they won .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Last block timestamp getter
Start challenge
Change creator address
Change Crypto Versus wallet address
Vote for candidate
Transfer votes to anybody
Check the deadline If success then define a winner and close the challenge
Send a reward if user voted for a winner
Send a reward if user voted for a winner
Send a reward to challenge creator
Send a reward to crypto Versus Wallet
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice This method can be used by the owner to extract mistakenly sent tokens to this contract . @ param token The address of the token contract that you want to recover set to 0 in case you want to extract ether .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Adds the specified address to the list of administrators . @ param address The address to add to the administrator list .
@ notice Adds multiple addresses to the administrator list . @ param accounts The wallet addresses to add to the administrator list .
@ notice Removes the specified address from the list of administrators . @ param address The address to remove from the administrator list .
@ notice Removes multiple addresses to the administrator list . @ param accounts The wallet addresses to remove from the administrator list .
@ notice Pauses the contract .
@ notice Unpauses the contract and returns to normal state .
@ notice Computes keccak256 hash of the supplied value . @ param key The string value to compute hash from .
@ notice This function enables token transfers for everyone . Can only be enabled after the end of the ICO .
@ notice This function disables token transfers for everyone .
@ notice This function enables the whitelisted application ( internal application ) to set the ICO end date and can only be used once . @ param date The date to set as the ICO end date .
@ notice Mints the supplied value of the tokens to the destination address . Minting cannot be performed any further once the maximum supply is reached . This function is private and cannot be used by anyone except for this contract . @ param to The address which will receive the minted tokens . @ param value The amount of tokens to mint .
@ notice Mints the tokens only once against the supplied key ( category ) . @ param key The key or the category of the allocation to mint the tokens for . @ param to The address receiving the minted tokens . @ param amount The amount of tokens to mint .
@ notice Mints the below mentioned amount of tokens allocated to the Virtual Rehab advisors . The tokens are only available to the advisors after 1 year of the ICO end .
@ notice Mints the below mentioned amount of tokens allocated to the Virtual Rehab founders . The tokens are only available to the founders after 2 year of the ICO end .
@ notice Mints the below mentioned amount of tokens allocated to Virtual Rehab services . The tokens are only available to the services after 1 year of the ICO end .
@ notice Transfers the specified value of VRH tokens to the destination address . Transfers can only happen when the tranfer state is enabled . Transfer state can only be enabled after the end of the crowdsale . @ param to The destination wallet address to transfer funds to . @ param value The amount of tokens to send to the destination address .
@ notice Transfers tokens from a specified wallet address . @ dev This function is overriden to leverage transfer state feature . @ param from The address to transfer funds from . @ param to The address to transfer funds to . @ param value The amount of tokens to transfer .
@ notice Approves a wallet address to spend on behalf of the sender . @ dev This function is overriden to leverage transfer state feature . @ param spender The address which is approved to spend on behalf of the sender . @ param value The amount of tokens approve to spend .
@ notice Increases the approval of the spender . @ dev This function is overriden to leverage transfer state feature . @ param spender The address which is approved to spend on behalf of the sender . @ param added Value The added amount of tokens approved to spend .
@ notice Decreases the approval of the spender . @ dev This function is overriden to leverage transfer state feature . @ param spender The address of the spender to decrease the allocation from . @ param subtracted Value The amount of tokens to subtract from the approved allocation .
@ notice Returns the sum of supplied values . @ param values The collection of values to create the sum from .
@ notice Allows only the admins and or whitelisted applications to perform bulk transfer operation . @ param destinations The destination wallet addresses to send funds to . @ param amounts The respective amount of fund to send to the specified addresses .
@ notice Burns the coins held by the sender . @ param value The amount of coins to burn . @ dev This function is overriden to leverage Pausable feature .
fallback function can be used to buy tokens
low level token purchase function
send ether to the fund collection wallet override to create custom fund forwarding mechanisms
@ return true if the transaction can buy tokens
Constructor
Total supply
Get the token balance for account token Owner
Transfer the balance from token owner ' s account to to account Owner ' s account must have sufficient balance to transfer 0 value transfers are allowed
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account https : github . com ethereum EI Ps blob master EIPS eip 20 token standard . md recommends that there are no checks for the approval double spend attack as this should be implemented in user interfaces
Transfer tokens from the from account to the to account The calling account must already have sufficient tokens approve ( . . . ) d for spending from the from account and From account must have sufficient balance to transfer Spender must have sufficient allowance to transfer 0 value transfers are allowed
Returns the amount of tokens approved by the owner that can be transferred to the spender ' s account
Token owner can approve for spender to transfer From ( . . . ) tokens from the token owner ' s account . The spender contract function receive Approval ( . . . ) is then executed
Don ' t accept ETH
Owner can transfer out any accidentally sent ERC20 tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Set ownership Locked flag to lock contract owner forever
@ dev Change ownership @ param new Owner Address of the new owner
@ dev Change crowdsale address reference @ param new Crowdsale Address of the new crowdsale
@ dev Pause token transfer
@ dev Unpause token transfer
@ dev Any unsold tokens from ICO will be sent to owner address and burned @ param amount Amount of tokens to be burned from owner address @ return True if successfully burned
@ dev Used by transfer function
@ dev Transfer tokens @ param to Address to receive the tokens @ param value Amount of tokens to be sent @ return True if successful
@ dev Check balance of an address @ param owner Address to be checked @ return Number of tokens
@ dev Don ' t accept ether
@ dev Claim tokens that have been sent to contract mistakenly @ param token Token address that we want to claim
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice A participant sends a contribution to the contract ' s address when contract is active , not failed and not paused @ notice Only contributions above the MINIMUM PARTICIPATION AMOUNT are accepted . Otherwise the transaction is rejected and contributed amount is returned to the participant ' s account @ notice A participant ' s contribution will be rejected if it exceeds the hard cap @ notice A participant ' s contribution will be rejected if the hard cap is reached
@ notice Contract owner or Multisig can withdraw Parsecs anytime in case of emergency
@ notice Contract owner or Multisig can refund contract with ETH in case of failed Crowdsale
@ notice Contract owner or Multisig can clawback ether after refund period is finished
@ notice Set Auditor account address to a new value
@ notice Check if contract has enough Parsecs to cover hard cap
@ notice Start contract ( permanently )
@ notice Finish contract ( permanently )
@ notice Pause contract ( transiently )
@ notice Resume contract ( transiently )
@ notice Declare Crowdsale failure ( no more ETH are accepted from participants )
@ notice Declare Crowdsale refund start
@ notice Declare Crowdsale refund finish
@ notice Owner can withdraw Parsecs only after contract is finished
@ dev Accept participant ' s KYC
@ dev Decline participant ' s KYC
@ dev Allow participants to clawback ETH in case of Crowdsale failure
@ dev Register pending contribution
@ dev Register accepted contribution
@ dev Reset pending contribution
@ dev Calculate amount of Parsecs to grant for ETH contribution
@ dev Calculate current bonus tier quotient
Main contract function
Admins getters
Administrative actions
User actions
Initializes contract with initial supply tokens to the creator of the contract
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Total balance of token in both vault and corresponding strategy
Custom logic in here for how much the vault allows to be borrowed Sets minimum required on hand to keep small withdrawals cheap
Called by Keeper to put deposited token into strategy
Used to swap any borrowed reserve over the debt limit to liquidate to ' token '
No rebalance implementation for lower fees and faster swaps
Shouldn ' t have any dangling HDCORE balance in the pool
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
todo public or internal ? master calls this when it uploads funds in order to differentiate betwen funds from master and 3rd party
check for changes in balance in order to track amount of locked tokens and notify master
STORAGE HELPERS
add funds to vesting contract
revoke vesting ; release releasable funds to beneficiary and return remaining to master and kill vesting contract
when vesting is revoked it sends back remaining tokens and updates internal Balance
vestings notifies if there has been any changes in amount of locked tokens
vestings notifies if there has been any changes in amount of locked tokens
check for changes in balance in order to track amount of locked tokens
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
parse Int
parse Int ( parse Float 10 ^ b )
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license Duplicate Solidity ' s ecrecover , but catching the CALL return value
the following function has been written by Alex Beregszaszi ( @ axic ) , use it under the terms of the MIT license
Constructor
Change bet expected times
Change bet expected start time
Change bet expected end time
Determine the outcome manually , immediately
Callback from Oraclize
Returns the total amounts betted for the sender
Returns whether a user has withdrawn money or not .
Returns whether winning collections are now available , or not .
Returns true if we can bet ( in betting window )
Function for user to bet on launch outcome
Empty remainder of the value in the contract to the owners .
Performs payout to owners
Cancel bet and relase all the bets back to the betters if , for any reason , payouts cannot be completed . ( For example Oracle fails . ) Triggered by owners .
Fallback function in case someone sends ether to the contract so it doesn ' t get lost . Could be used by us owners as buffer value in case payouts fail .
Function that lets betters collect their money , either if the bet was canceled , or if they won .
Retrieves block number at which sender performed redemption
Retrieves eth balance of sender at the time of redemption
Checks to see if sender is redemption ready by verifying that we have a balance and block for the sender
Handles incoming transactions
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ notice Creates amount token to to . Must only be called by the owner .
Add a new lp to the pool . Can only be called by the owner . XXX DO NOT add the same LP token more than once . Rewards will be messed up if you do .
Update the given pool ' s FOBO allocation point . Can only be called by the owner .
Return reward multiplier over the given from to to block .
View function to see pending FOB Os on frontend .
Update reward vairables for all pools . Be careful of gas spending !
Update reward variables of the given pool to be up to date .
Update reward variables of the given pool to be up to date .
Deposit LP tokens to Master Chef for FOBO allocation .
Withdraw LP tokens from Master Chef .
Withdraw without caring about rewards . EMERGENCY ONLY .
Safe FOBO transfer function , just in case if rounding error causes pool to not have enough FOB Os .
Update dev address by the previous dev .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Withdraw Mana ( only owner )
Withdraw any ERC20 token ( just in case )
Change address where funds are received
Calculate which day into the sale are we .
Add a user to the whitelist
Remove an user from the whitelist
Batch add users
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ dev Recover any mistakenly sent ERC20 tokens to the Token address
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
State transitions for names : Open > Auction ( start Auction ) Auction > Reveal Reveal > Owned Reveal > Open ( if nobody bid ) Owned > Open ( release Deed or invalidate Name )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ dev Returns true if and only if the function is running in the constructor
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
The contract can be initialized with a number of tokens All the tokens are deposited to the owner address @ param balance Initial supply of the contract @ param name Token Name @ param symbol Token symbol @ param decimals Token decimals
Forward ERC20 methods to upgraded contract if this one is deprecated
Forward ERC20 methods to upgraded contract if this one is deprecated
Forward ERC20 methods to upgraded contract if this one is deprecated
Forward ERC20 methods to upgraded contract if this one is deprecated
Forward ERC20 methods to upgraded contract if this one is deprecated
deprecate current contract in favour of a new one
deprecate current contract if favour of a new one
Issue a new amount of tokens these tokens are deposited into the owner address @ param amount Number of tokens to be issued
Redeem tokens . These tokens are withdrawn from the owner address if the balance must be enough to cover the redeem or the call will fail . @ param amount Number of tokens to be issued
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Anyone with enough ECOM token can create a company Companies are unique by name User can set the inital value for their company ( without knowing it performance ) Newly created company will be put on sale immediately
Use 1 super privilege to permanently own a company
Put a permanently owned company on sale again
Anyone can call to this method to try to get a super privileged
Anyone who owned some companies can claim their token
Private methods
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
@ dev Constructor @ param token Address Address of token contract
@ dev Adjust multiplier @ param decimals multiplier will be 10 raised to decimals
@ dev Airdrops some tokens to some accounts . @ param dests List of account addresses . @ param values List of token amounts .
@ dev Return all remaining tokens back to owner .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
setup function to be ran only 1 time setup token address setup end Block number
CONTRIBUTE FUNCTION converts ETH to Avalanche Genesis Block TOKEN and sends new Avalanche TOKEN to the sender
update the ETH XAIT rate
change creator address
change transfer ability for ERC20 token ( toggle on off )
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
below function can be used when you want to send every recipeint with different number of tokens
this function can be used when you want to send same number of tokens to all the recipients
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
The Memory map during the execution of this contract is as follows : [ 0x0 , 0x20 ) periodic column pedersen points x . [ 0x20 , 0x40 ) periodic column pedersen points y . [ 0x40 , 0x60 ) periodic column ecdsa generator points x . [ 0x60 , 0x80 ) periodic column ecdsa generator points y . [ 0x80 , 0xa0 ) trace length . [ 0xa0 , 0xc0 ) offset size . [ 0xc0 , 0xe0 ) half offset size . [ 0xe0 , 0x100 ) initial ap . [ 0x100 , 0x120 ) initial pc . [ 0x120 , 0x140 ) final ap . [ 0x140 , 0x160 ) final pc . [ 0x160 , 0x180 ) memory multi column perm perm interaction elm . [ 0x180 , 0x1a0 ) memory multi column perm hash interaction elm0 . [ 0x1a0 , 0x1c0 ) memory multi column perm perm public memory prod . [ 0x1c0 , 0x1e0 ) rc16 perm interaction elm . [ 0x1e0 , 0x200 ) rc16 perm public memory prod . [ 0x200 , 0x220 ) rc min . [ 0x220 , 0x240 ) rc max . [ 0x240 , 0x260 ) pedersen shift point . x . [ 0x260 , 0x280 ) pedersen shift point . y . [ 0x280 , 0x2a0 ) initial pedersen addr . [ 0x2a0 , 0x2c0 ) initial rc addr . [ 0x2c0 , 0x2e0 ) ecdsa sig config . alpha . [ 0x2e0 , 0x300 ) ecdsa sig config . shift point . x . [ 0x300 , 0x320 ) ecdsa sig config . shift point . y . [ 0x320 , 0x340 ) ecdsa sig config . beta . [ 0x340 , 0x360 ) initial ecdsa addr . [ 0x360 , 0x380 ) initial checkpoints addr . [ 0x380 , 0x3a0 ) final checkpoints addr . [ 0x3a0 , 0x3c0 ) trace generator . [ 0x3c0 , 0x3e0 ) oods point . [ 0x3e0 , 0x440 ) interaction elements . [ 0x440 , 0x2980 ) coefficients . [ 0x2980 , 0x3f40 ) oods values . end of input data [ 0x3f40 , 0x3f60 ) composition degree bound . [ 0x3f60 , 0x3f80 ) intermediate value cpu decode opcode rc bit 0 . [ 0x3f80 , 0x3fa0 ) intermediate value cpu decode opcode rc bit 1 . [ 0x3fa0 , 0x3fc0 ) intermediate value cpu decode opcode rc bit 2 . [ 0x3fc0 , 0x3fe0 ) intermediate value cpu decode opcode rc bit 4 . [ 0x3fe0 , 0x4000 ) intermediate value cpu decode opcode rc bit 3 . [ 0x4000 , 0x4020 ) intermediate value cpu decode opcode rc bit 9 . [ 0x4020 , 0x4040 ) intermediate value cpu decode opcode rc bit 5 . [ 0x4040 , 0x4060 ) intermediate value cpu decode opcode rc bit 6 . [ 0x4060 , 0x4080 ) intermediate value cpu decode opcode rc bit 7 . [ 0x4080 , 0x40a0 ) intermediate value cpu decode opcode rc bit 8 . [ 0x40a0 , 0x40c0 ) intermediate value npc reg 0 . [ 0x40c0 , 0x40e0 ) intermediate value cpu decode opcode rc bit 10 . [ 0x40e0 , 0x4100 ) intermediate value cpu decode opcode rc bit 11 . [ 0x4100 , 0x4120 ) intermediate value cpu decode opcode rc bit 12 . [ 0x4120 , 0x4140 ) intermediate value cpu decode opcode rc bit 13 . [ 0x4140 , 0x4160 ) intermediate value cpu decode opcode rc bit 14 . [ 0x4160 , 0x4180 ) intermediate value memory address diff 0 . [ 0x4180 , 0x41a0 ) intermediate value rc16 diff 0 . [ 0x41a0 , 0x41c0 ) intermediate value pedersen hash0 ec subset sum bit 0 . [ 0x41c0 , 0x41e0 ) intermediate value pedersen hash0 ec subset sum bit neg 0 . [ 0x41e0 , 0x4200 ) intermediate value pedersen hash1 ec subset sum bit 0 . [ 0x4200 , 0x4220 ) intermediate value pedersen hash1 ec subset sum bit neg 0 . [ 0x4220 , 0x4240 ) intermediate value pedersen hash2 ec subset sum bit 0 . [ 0x4240 , 0x4260 ) intermediate value pedersen hash2 ec subset sum bit neg 0 . [ 0x4260 , 0x4280 ) intermediate value pedersen hash3 ec subset sum bit 0 . [ 0x4280 , 0x42a0 ) intermediate value pedersen hash3 ec subset sum bit neg 0 . [ 0x42a0 , 0x42c0 ) intermediate value rc builtin value0 0 . [ 0x42c0 , 0x42e0 ) intermediate value rc builtin value1 0 . [ 0x42e0 , 0x4300 ) intermediate value rc builtin value2 0 . [ 0x4300 , 0x4320 ) intermediate value rc builtin value3 0 . [ 0x4320 , 0x4340 ) intermediate value rc builtin value4 0 . [ 0x4340 , 0x4360 ) intermediate value rc builtin value5 0 . [ 0x4360 , 0x4380 ) intermediate value rc builtin value6 0 . [ 0x4380 , 0x43a0 ) intermediate value rc builtin value7 0 . [ 0x43a0 , 0x43c0 ) intermediate value ecdsa signature0 doubling key x squared . [ 0x43c0 , 0x43e0 ) intermediate value ecdsa signature0 exponentiate generator bit 0 . [ 0x43e0 , 0x4400 ) intermediate value ecdsa signature0 exponentiate generator bit neg 0 . [ 0x4400 , 0x4420 ) intermediate value ecdsa signature0 exponentiate key bit 0 . [ 0x4420 , 0x4440 ) intermediate value ecdsa signature0 exponentiate key bit neg 0 . [ 0x4440 , 0x46e0 ) expmods . [ 0x46e0 , 0x49a0 ) denominator invs . [ 0x49a0 , 0x4c60 ) denominators . [ 0x4c60 , 0x4dc0 ) numerators . [ 0x4dc0 , 0x50a0 ) adjustments . [ 0x50a0 , 0x5160 ) expmod context .
solhint disable previous line no empty blocks
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
Getters
Methods
@ dev Accepts ether and creates new tokens .
@ dev Ends the funding period and sends the ETH home
@ dev Allows contributors to recover their ether in the case of a failed funding campaign .
only accepts a value of 0 . 01 ether . no extra eth please ! ! don ' t be crazy ! i ' ll make contracts for different sized bets eventually .
fallback function acts the same as buy In ( ) , omitting the return of course .
